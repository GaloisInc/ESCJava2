(PROMPT_OFF)
;----------------------------------------------------------------------
; "Universal", or class-independent part, of the background predicate

; === ESCJ 8: Section 0.4
    
(BG_PUSH (FORALL (m i x) (EQ (select (store m i x) i) x)))

(BG_PUSH (FORALL (m i j x) 
		 (IMPLIES (NEQ i j)
			  (EQ (select (store m i x) j)
			      (select m j)))))

; === ESCJ 8: Section 1.1

(DEFPRED (<: t0 t1))

; <: reflexive
(BG_PUSH 
  (FORALL (t)
    (PATS (<: t t))
    (<: t t)))

; a special case, for which the above may not fire

(BG_PUSH (<: |T_java.lang.Object| |T_java.lang.Object|))

; <: transitive	
(BG_PUSH 
  (FORALL (t0 t1 t2)
    (PATS (MPAT (<: t0 t1) (<: t1 t2)))
    (IMPLIES (AND (<: t0 t1) (<: t1 t2))
      (<: t0 t2))))

;anti-symmetry
(BG_PUSH
 (FORALL
  (t0 t1)
  (PATS (MPAT (<: t0 t1) (<: t1 t0)))
  (IMPLIES (AND (<: t0 t1) (<: t1 t0)) (EQ t0 t1))))

; primitive types are final

(BG_PUSH (FORALL (t) (PATS (<: t |T_boolean|))
	(IMPLIES (<: t |T_boolean|) (EQ t |T_boolean|))))
(BG_PUSH (FORALL (t) (PATS (<: t |T_char|))
	(IMPLIES (<: t |T_char|) (EQ t |T_char|))))
(BG_PUSH (FORALL (t) (PATS (<: t |T_byte|))
	(IMPLIES (<: t |T_byte|) (EQ t |T_byte|))))
(BG_PUSH (FORALL (t) (PATS (<: t |T_short|))
	(IMPLIES (<: t |T_short|) (EQ t |T_short|))))
(BG_PUSH (FORALL (t) (PATS (<: t |T_int|))
	(IMPLIES (<: t |T_int|) (EQ t |T_int|))))
(BG_PUSH (FORALL (t) (PATS (<: t |T_long|))
	(IMPLIES (<: t |T_long|) (EQ t |T_long|))))
(BG_PUSH (FORALL (t) (PATS (<: t |T_float|))
	(IMPLIES (<: t |T_float|) (EQ t |T_float|))))
(BG_PUSH (FORALL (t) (PATS (<: t |T_double|))
	(IMPLIES (<: t |T_double|) (EQ t |T_double|))))

; (New as of 12 Dec 2000)
; primitive types have no proper supertypes

(BG_PUSH (FORALL (t) (PATS (<: |T_boolean| t))
	(IMPLIES (<: |T_boolean| t) (EQ t |T_boolean|))))
(BG_PUSH (FORALL (t) (PATS (<: |T_char| t))
	(IMPLIES (<: |T_char| t) (EQ t |T_char|))))
(BG_PUSH (FORALL (t) (PATS (<: |T_byte| t))
	(IMPLIES (<: |T_byte| t) (EQ t |T_byte|))))
(BG_PUSH (FORALL (t) (PATS (<: |T_short| t))
	(IMPLIES (<: |T_short| t) (EQ t |T_short|))))
(BG_PUSH (FORALL (t) (PATS (<: |T_int| t))
	(IMPLIES (<: |T_int| t) (EQ t |T_int|))))
(BG_PUSH (FORALL (t) (PATS (<: |T_long| t))
	(IMPLIES (<: |T_long| t) (EQ t |T_long|))))
(BG_PUSH (FORALL (t) (PATS (<: |T_float| t))
	(IMPLIES (<: |T_float| t) (EQ t |T_float|))))
(BG_PUSH (FORALL (t) (PATS (<: |T_double| t))
	(IMPLIES (<: |T_double| t) (EQ t |T_double|))))

; === ESCJ 8: Section 1.2

(BG_PUSH
  (FORALL (t0 t1 t2)
    (PATS (<: t0 (asChild t1 t2)))
    (IMPLIES
      (<: t0 (asChild t1 t2))
      (EQ (classDown t2 t0) (asChild t1 t2)))))

; === ESCJ 8: Section 1.3
    
; new

(BG_PUSH 
  (<: |T_java.lang.Cloneable| |T_java.lang.Object|))

(BG_PUSH
  (FORALL (t)
    (PATS (array t))
    (<: (array t) |T_java.lang.Cloneable|)))
    
(BG_PUSH
  (FORALL (t)
    (PATS (elemtype (array t)))
    (EQ (elemtype (array t)) t)))

(BG_PUSH
  (FORALL (t0 t1) 
    (PATS (<: t0 (array t1)))
    (IFF (<: t0 (array t1))
      (AND
	(EQ t0 (array (elemtype t0)))
	(<: (elemtype t0) t1)))))

; === ESCJ 8: Section 2.1

(DEFPRED (is x t))

(BG_PUSH
 (FORALL (x t)
	 (PATS (cast x t))
	 (is (cast x t) t)))
     
(BG_PUSH
 (FORALL (x t)
	 (PATS (cast x t))
	 (IMPLIES (is x t) (EQ (cast x t) x))))
     
; === ESCJ 8: Section 2.2

(BG_PUSH (DISTINCT |bool$false| |@true|))

; === ESCJ 8: Section 2.2.1

(BG_PUSH (FORALL (x) 
	   (PATS (is x |T_char|)) 
	   (IFF (is x |T_char|) (AND (<= 0 x) (<= x 65535)))))
(BG_PUSH (FORALL (x)
	   (PATS (is x |T_byte|))
	   (IFF (is x |T_byte|) (AND (<= -128 x) (<= x 127)))))
(BG_PUSH (FORALL (x) 
	   (PATS (is x |T_short|))
	   (IFF (is x |T_short|) (AND (<= -32768 x) (<= x 32767)))))
(BG_PUSH (FORALL (x) 
	   (PATS (is x |T_int|))
	   (IFF (is x |T_int|) (AND (<= intFirst x) (<= x intLast)))))
(BG_PUSH (FORALL (x) 
	   (PATS (is x |T_long|))
	   (IFF (is x |T_long|) (AND (<= longFirst x) (<= x longLast)))))

(BG_PUSH (< longFirst intFirst))
(BG_PUSH (< intFirst -1000000))
(BG_PUSH (< 1000000 intLast))
(BG_PUSH (< intLast longLast))

; === ESCJ 8: Section 2.3
      
(BG_PUSH
 (FORALL (x t)
	 (PATS (MPAT (<: t |T_java.lang.Object|) (is x t)))
	 (IMPLIES (<: t |T_java.lang.Object|)
		  (IFF (is x t)
		       (OR (EQ x null) (<: (typeof x) t))))))

; === ESCJ 8: Section 2.4

(BG_PUSH
 (FORALL (f t x) (PATS (select (asField f t) x))
	 (is (select (asField f t) x) t)))

; === ESCJ 8: Section 2.5

(BG_PUSH
 (FORALL (e a i) (PATS (select (select (asElems e) a) i))
	 (is (select (select (asElems e) a) i)
	     (elemtype (typeof a)))))

; === ESCJ 8: Section 3.0

(DEFPRED (isAllocated x a0) (< (vAllocTime x) a0))

; === ESCJ 8: Section 3.1

(BG_PUSH
 (FORALL (x f a0) (PATS (isAllocated (select f x) a0))
	 (IMPLIES (AND (< (fClosedTime f) a0)
		       (isAllocated x a0))
		  (isAllocated (select f x) a0))))

; === ESCJ 8: Section 3.2

(BG_PUSH
 (FORALL (a e i a0) (PATS (isAllocated (select (select e a) i) a0))
	 (IMPLIES (AND (< (eClosedTime e) a0)
		       (isAllocated a a0))
		  (isAllocated (select (select e a) i) a0))))
 
; === ESCJ 8: Section 4 

; max(lockset) is in lockset

(BG_PUSH
 (FORALL (S)
  (PATS (select (asLockSet S) (max (asLockSet S))))
  (EQ
   (select (asLockSet S) (max (asLockSet S)))
   |@true|)))

; null is in lockset (not in ESCJ 8)

(BG_PUSH
 (FORALL (S)
  (PATS (asLockSet S))
  (EQ (select (asLockSet S) null) |@true|)))

(DEFPRED (lockLE x y) (<= x y))

(DEFPRED (lockLT x y) (< x y))

; all locks in lockset are below max(lockset) (not in ESCJ 8)

(BG_PUSH
 (FORALL (S mu)
  (IMPLIES
   (EQ (select (asLockSet S) mu) |@true|)
   (lockLE mu (max (asLockSet S))))))

; null precedes all objects in locking order (not in ESCJ 8)

(BG_PUSH
  (FORALL (x)
    (PATS (lockLE null x) (lockLT null x) (lockLE x null) (lockLT x null))
    (IMPLIES
      (<: (typeof x) |T_java.lang.Object|)
      (lockLE null x))))


; === ESCJ 8: Section 5.0

(BG_PUSH
 (FORALL (a) 
	 (PATS (arrayLength a))
	 (AND (<= 0 (arrayLength a))
	      (is (arrayLength a) |T_int|))))

(DEFPRED (arrayFresh a a0 b0 e s T v))

(BG_PUSH
  (FORALL (a a0 b0 e n s T v)
    (PATS (arrayFresh a a0 b0 e (arrayShapeMore n s) T v))
    (IFF
      (arrayFresh a a0 b0 e (arrayShapeMore n s) T v)
      (AND
	(<= a0 (vAllocTime a))
	(isAllocated a b0)
	(NEQ a null)
	(EQ (typeof a) T)
	(EQ (arrayLength a) n)
	(FORALL (i)
	  (PATS (select (select e a) i))
	  (AND
	    (arrayFresh (select (select e a) i) a0 b0 e s (elemtype T) v)
	    (EQ (arrayParent (select (select e a) i)) a)
	    (EQ (arrayPosition (select (select e a) i)) i)))))))

(BG_PUSH
  (FORALL (a a0 b0 e n T v)
    (PATS (arrayFresh a a0 b0 e (arrayShapeOne n) T v))
    (IFF
      (arrayFresh a a0 b0 e (arrayShapeOne n) T v)
      (AND
	(<= a0 (vAllocTime a))
	(isAllocated a b0)
	(NEQ a null)
	(EQ (typeof a) T)
	(EQ (arrayLength a) n)
	(FORALL (i)
	  (PATS (select (select e a) i))
	  (AND
	    (EQ (select (select e a) i) v)))))))


; === code to ensure that (isNewArray x) ==> x has no invariants


; arrayType is distinct from all types with invariants (due to the
; generated type-distinctness axiom)

(BG_PUSH
  (EQ arrayType (asChild arrayType |T_java.lang.Object|)))

(BG_PUSH
   (FORALL (t)
      (PATS (array t))
      (<: (array t) arrayType)))

(BG_PUSH
  (FORALL (s)
	  (PATS (isNewArray s))
	  (IMPLIES (EQ |@true| (isNewArray s))
		   (<: (typeof s) arrayType))))

; === ESCJ 8: Section 5.1

(BG_PUSH
 (FORALL (i j) (PATS (integralMod i j) (integralDiv i j))
	 (EQ (+ (* (integralDiv i j) j) (integralMod i j))
	     i)))

(BG_PUSH
 (FORALL (i j) (PATS (integralMod i j))
	 (IMPLIES (< 0 j)
		  (AND (<= 0 (integralMod i j))
		       (< (integralMod i j) j)))))

(BG_PUSH
 (FORALL (i j) (PATS (integralMod i j))
	 (IMPLIES (< j 0)
		  (AND (< j (integralMod i j))
		       (<= (integralMod i j) 0)))))

(BG_PUSH
 (FORALL (i j) 
	 (PATS (integralMod (+ i j) j))
	 (EQ (integralMod (+ i j) j) 
	     (integralMod i j))))

(BG_PUSH
 (FORALL (i j)
	 (PATS (integralMod (+ j i) j))
	 (EQ (integralMod (+ j i) j) 
	     (integralMod i j))))

; to prevent a matching loop
(BG_PUSH
 (FORALL (x y)
  (PATS (* (integralDiv (* x y) y) y))
  (EQ (* (integralDiv (* x y) y) y) (* x y))))


; === ESCJ 8: Section 5.2

(DEFPRED (boolAnd a b)
  (AND
    (EQ a |@true|) 
    (EQ b |@true|)))

(DEFPRED (boolEq a b)
  (IFF
    (EQ a |@true|)
    (EQ b |@true|)))

(DEFPRED (boolImplies a b)
  (IMPLIES
    (EQ a |@true|)
    (EQ b |@true|)))
    
(DEFPRED (boolNE a b)
  (NOT (IFF
	 (EQ a |@true|)
	 (EQ b |@true|))))

(DEFPRED (boolNot a)
  (NOT (EQ a |@true|)))

(DEFPRED (boolOr a b)
  (OR
    (EQ a |@true|)
    (EQ b |@true|)))

; Not in ESCJ8, but should be

(BG_PUSH
  (FORALL (x y)
    (PATS (integralEQ x y))
    (IFF
      (EQ (integralEQ x y) |@true|)
      (EQ x y))))

(BG_PUSH
  (FORALL (x y)
    (PATS (stringCat x y))
    (AND (NEQ (stringCat x y) null)
         (<: (typeof (stringCat x y)) |T_java.lang.String|))))

(BG_PUSH
  (FORALL (x y)
    (PATS (integralGE x y))
    (IFF
      (EQ (integralGE x y) |@true|)
      (>= x y))))

(BG_PUSH
  (FORALL (x y)
    (PATS (integralGT x y))
    (IFF
      (EQ (integralGT x y) |@true|)
      (> x y))))

(BG_PUSH
  (FORALL (x y)
    (PATS (integralLE x y))
    (IFF
      (EQ (integralLE x y) |@true|)
      (<= x y))))

(BG_PUSH
  (FORALL (x y)
    (PATS (integralLT x y))
    (IFF
      (EQ (integralLT x y) |@true|)
      (< x y))))

(BG_PUSH
  (FORALL (x y)
    (PATS (integralNE x y))
    (IFF
      (EQ (integralNE x y) |@true|)
      (NEQ x y))))

(BG_PUSH
  (FORALL (x y)
    (PATS (refEQ x y))
    (IFF
      (EQ (refEQ x y) |@true|)
      (EQ x y))))

(BG_PUSH
  (FORALL (x y)
    (PATS (refNE x y))
    (IFF
      (EQ (refNE x y) |@true|)
      (NEQ x y))))

; === ESCJ 8: Section 5.3

(BG_PUSH
 (FORALL (x y)
	 (PATS (termConditional |@true| x y))
	 (EQ (termConditional |@true| x y) x)))

(BG_PUSH
 (FORALL (b x y)
	 (PATS (termConditional b x y))
	 (IMPLIES (NEQ b |@true|)
		  (EQ (termConditional b x y) y))))

; === Implementation of nonnullelements; not in ESCJ 8 (yet?):

(DEFPRED (nonnullelements x e)
   (AND (NEQ x null)
	(FORALL (i)
	   (IMPLIES (AND (<= 0 i)
			 (< i (arrayLength x)))
		    (NEQ (select (select e x) i) null)))))


; === Axioms about classLiteral; not in ESCJ 8 (yet?):

(BG_PUSH
 (FORALL (t)
	 (PATS (classLiteral t))
	 (AND (NEQ (classLiteral t) null)
	      (is (classLiteral t) |T_java.lang.Class|)
              (isAllocated (classLiteral t) alloc))))


; === Axioms about properties of integral &, |, and /

(BG_PUSH
 (FORALL (x y)
  (PATS (integralAnd x y))
  (IMPLIES
   (OR (<= 0 x) (<= 0 y))
   (<= 0 (integralAnd x y)))))

(BG_PUSH
 (FORALL (x y)
  (PATS (integralAnd x y))
  (IMPLIES
   (<= 0 x)
   (<= (integralAnd x y) x))))

(BG_PUSH
 (FORALL (x y)
  (PATS (integralAnd x y))
  (IMPLIES
   (<= 0 y)
   (<= (integralAnd x y) y))))

(BG_PUSH
 (FORALL (x y)
  (PATS (integralOr x y))
  (IMPLIES
   (AND (<= 0 x) (<= 0 y))
   (AND (<= x (integralOr x y)) (<= y (integralOr x y))))))

(BG_PUSH
 (FORALL (x y)
  (PATS (integralDiv x y))
  (IMPLIES
   (AND (<= 0 x) (< 0 y))
   (AND (<= 0 (integralDiv x y)) (<= (integralDiv x y) x)))))

(BG_PUSH
 (FORALL (x y)
  (PATS (integralXor x y))
  (IMPLIES
   (AND (<= 0 x) (<= 0 y))
   (<= 0 (integralXor x y)))))

(BG_PUSH
 (FORALL (n)
  (PATS (intShiftL 1 n))
  (IMPLIES
   (AND (<= 0 n) (< n 31))
   (<= 1 (intShiftL 1 n)))))

(BG_PUSH
 (FORALL (n)
  (PATS (longShiftL 1 n))
  (IMPLIES
   (AND (<= 0 n) (< n 63))
   (<= 1 (longShiftL 1 n)))))

; === Temporary kludge to speed up distinguishing small integers:

(BG_PUSH
 (DISTINCT -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9
	   10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
	   30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
	   50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
	   70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
	   90 91 92 93 94 95 96 97 98 99
	   100 101 102 103 104 105 106 107 108 109
	   110 111 112 113 114 115 116 117 118 119
	   120 121 122 123 124 125 126 127 128 129
	   130 131 132 133 134 135 136 137 138 139
	   140 141 142 143 144 145 146 147 148 149
	   150 151 152 153 154 155 156 157 158 159
	   160 161 162 163 164 165 166 167 168 169
	   170 171 172 173 174 175 176 177 178 179
	   180 181 182 183 184 185 186 187 188 189
	   190 191 192 193 194 195 196 197 198 199
	   200 201 202 203 204 205 206 207 208 209
	   210 211 212 213 214 215 216 217 218 219
	   220 221 222 223 224 225 226 227 228 229
	   230 231 232 233 234 235 236 237 238 239
	   240 241 242 243 244 245 246 247 248 249
	   250 251 252 253 254 255 256 257 258 259
	   260 261 262 263 264 265 266 267 268 269
	   270 271 272 273 274 275 276 277 278 279
	   280 281 282 283 284 285 286 287 288 289
	   290 291 292 293 294 295 296 297 298 299
	   300 301 302 303 304 305 306 307 308 309
	   310 311 312 313 314 315 316 317 318 319
	   320 321 322 323 324 325 326 327 328 329
	   330 331 332 333 334 335 336 337 338 339
	   340 341 342 343 344 345 346 347 348 349
	   350 351 352 353 354 355 356 357 358 359
	   360 361 362 363 364 365 366 367 368 369
	   370 371 372 373 374 375 376 377 378 379
	   380 381 382 383 384 385 386 387 388 389
	   390 391 392 393 394 395 396 397 398 399))

;----------------------------------------------------------------------
; End of Universal background predicate
;----------------------------------------------------------------------
(PROMPT_ON)


(BG_PUSH (AND 
(<: |T_javafe.ast.TypeModifierPragmaVec| |T_java.lang.Object|)
(EQ |T_javafe.ast.TypeModifierPragmaVec| (asChild |T_javafe.ast.TypeModifierPragmaVec| |T_java.lang.Object|))
(<: |T_javafe.ast.TypeModifierPragma| |T_javafe.ast.ASTNode|)
(EQ |T_javafe.ast.TypeModifierPragma| (asChild |T_javafe.ast.TypeModifierPragma| |T_javafe.ast.ASTNode|))
(<: |T_javafe.ast.ASTNode| |T_java.lang.Object|)
(EQ |T_javafe.ast.ASTNode| (asChild |T_javafe.ast.ASTNode| |T_java.lang.Object|))
(<: |T_javafe.ast.ASTNode| |T_java.lang.Cloneable|)
(<: |T_java.lang.Cloneable| |T_java.lang.Object|)
(<: |T_javafe.ast.Type| |T_javafe.ast.ASTNode|)
(EQ |T_javafe.ast.Type| (asChild |T_javafe.ast.Type| |T_javafe.ast.ASTNode|))
(DISTINCT arrayType |T_boolean| |T_char| |T_byte| |T_short| |T_int| |T_long| |T_float| |T_double| |T_.TYPE| |T_javafe.ast.TypeModifierPragmaVec| |T_javafe.ast.TypeModifierPragma| |T_java.lang.Object| |T_javafe.ast.ASTNode| |T_java.lang.Cloneable| |T_javafe.ast.Type|)))


(EXPLIES 
(LBLNEG |vc.javafe.ast.Type.<constructor>.42.4| (IMPLIES (AND (EQ |elements@pre:12.61.47| |elements:12.61.47|) (EQ |elements:12.61.47| (asField |elements:12.61.47| (array |T_javafe.ast.TypeModifierPragma|))) (< (fClosedTime |elements:12.61.47|) alloc) (FORALL (s) (IMPLIES (NEQ s null) (NEQ (select |elements:12.61.47| s) null))) (EQ |syntax@pre:28.29| |syntax:28.29|) (EQ |syntax:28.29| (asField |syntax:28.29| T_boolean)) (EQ |I_will_establish_invariants_afterwards@pre:4.236.34| |I_will_establish_invariants_afterwards:4.236.34|) (EQ |@true| (is |I_will_establish_invariants_afterwards:4.236.34| T_boolean)) (EQ |tmodifiers@pre:30.33| |tmodifiers:30.33|) (EQ |tmodifiers:30.33| (asField |tmodifiers:30.33| |T_javafe.ast.TypeModifierPragmaVec|)) (< (fClosedTime |tmodifiers:30.33|) alloc) (EQ |owner@pre:7.35.28| |owner:7.35.28|) (EQ |owner:7.35.28| (asField |owner:7.35.28| |T_java.lang.Object|)) (< (fClosedTime |owner:7.35.28|) alloc) (EQ |count@pre:12.67.33| |count:12.67.33|) (EQ |count:12.67.33| (asField |count:12.67.33| T_int)) (EQ |elems@pre| elems) (EQ elems (asElems elems)) (< (eClosedTime elems) alloc) (EQ LS (asLockSet LS)) (EQ |alloc@pre| alloc)) (NOT (AND (EQ |@true| |I_will_establish_invariants_afterwards:4.236.34|) (OR (AND (NOT (EQ |@true| (isAllocated objectToBeConstructed alloc))) (NOT (LBLNEG |Pre:4.247.7@43.21| (EQ |@true| |I_will_establish_invariants_afterwards:4.236.34|)))) (AND (NOT (EQ |@true| (isAllocated objectToBeConstructed alloc))) (LBLNEG |Pre:4.247.7@43.21| (EQ |@true| |I_will_establish_invariants_afterwards:4.236.34|)) (< alloc |after@43.21-43.21|) (NEQ |RES-43.21:43.21| null) (NOT (EQ |@true| (isAllocated |RES-43.21:43.21| alloc))) (EQ |@true| (is |RES-43.21:43.21| |T_javafe.ast.ASTNode|)) (EQ |@true| (isAllocated |RES-43.21:43.21| |after@43.21-43.21|)) (EQ |EC-43.21:43.21| |ecReturn|) (EQ (select |owner:7.35.28| |RES-43.21:43.21|) null) (<: (typeof |RES-43.21:43.21|) |T_javafe.ast.Type|) (EQ objectToBeConstructed |RES-43.21:43.21|) (EQ |syntax:28.29<1>| (store |syntax:28.29| |RES-43.21:43.21| |bool$false|)) (EQ |tmodifiers:30.33<1>| (store |tmodifiers:30.33| |RES-43.21:43.21| null)) (OR (NOT (LBLNEG |Exception@43.22| (EQ |ecReturn| |ecReturn|))) (AND (LBLNEG |Exception@43.22| (EQ |ecReturn| |ecReturn|)) (NOT (LBLNEG |OwnerNull@43.22| (EQ (select |owner:7.35.28| |RES-43.21:43.21|) null))))))))))) (AND 
(DISTINCT |ecReturn|)))

(EXPLIES 
(LBLNEG |vc.javafe.ast.Type.check.45.4| (IMPLIES (AND (EQ |elements@pre:12.61.47| |elements:12.61.47|) (EQ |elements:12.61.47| (asField |elements:12.61.47| (array |T_javafe.ast.TypeModifierPragma|))) (< (fClosedTime |elements:12.61.47|) alloc) (FORALL (s) (IMPLIES (NEQ s null) (NEQ (select |elements:12.61.47| s) null))) (EQ |syntax@pre:28.29| |syntax:28.29|) (EQ |syntax:28.29| (asField |syntax:28.29| T_boolean)) (EQ |I_will_establish_invariants_afterwards@pre:4.236.34| |I_will_establish_invariants_afterwards:4.236.34|) (EQ |@true| (is |I_will_establish_invariants_afterwards:4.236.34| T_boolean)) (EQ |tmodifiers@pre:30.33| |tmodifiers:30.33|) (EQ |tmodifiers:30.33| (asField |tmodifiers:30.33| |T_javafe.ast.TypeModifierPragmaVec|)) (< (fClosedTime |tmodifiers:30.33|) alloc) (EQ |owner@pre:7.35.28| |owner:7.35.28|) (EQ |owner:7.35.28| (asField |owner:7.35.28| |T_java.lang.Object|)) (< (fClosedTime |owner:7.35.28|) alloc) (EQ |count@pre:12.67.33| |count:12.67.33|) (EQ |count:12.67.33| (asField |count:12.67.33| T_int)) (EQ |elems@pre| elems) (EQ elems (asElems elems)) (< (eClosedTime elems) alloc) (EQ LS (asLockSet LS)) (EQ |alloc@pre| alloc)) (NOT (AND (EQ |@true| (is this |T_javafe.ast.Type|)) (EQ |@true| (isAllocated this alloc)) (NEQ this null) (FORALL (brokenObj) (NOPATS (is brokenObj |T_javafe.ast.TypeModifierPragmaVec|) (NEQ brokenObj null)) (IMPLIES (AND (EQ |@true| (is brokenObj |T_javafe.ast.TypeModifierPragmaVec|)) (NEQ brokenObj null)) (<= (select |count:12.67.33| brokenObj) (arrayLength (select |elements:12.61.47| brokenObj))))) (FORALL (|brokenObj<1>|) (NOPATS (is |brokenObj<1>| |T_javafe.ast.TypeModifierPragmaVec|) (NEQ |brokenObj<1>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<1>| |T_javafe.ast.TypeModifierPragmaVec|)) (NEQ |brokenObj<1>| null)) (EQ (select |owner:7.35.28| (select |elements:12.61.47| |brokenObj<1>|)) |brokenObj<1>|))) (FORALL (|brokenObj<2>|) (NOPATS (is |brokenObj<2>| |T_javafe.ast.TypeModifierPragmaVec|) (NEQ |brokenObj<2>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<2>| |T_javafe.ast.TypeModifierPragmaVec|)) (NEQ |brokenObj<2>| null)) (EQ (typeof (select |elements:12.61.47| |brokenObj<2>|)) (array |T_javafe.ast.TypeModifierPragma|)))) (FORALL (|brokenObj<3>|) (NOPATS (is |brokenObj<3>| |T_javafe.ast.TypeModifierPragmaVec|) (NEQ |brokenObj<3>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<3>| |T_javafe.ast.TypeModifierPragmaVec|)) (NEQ |brokenObj<3>| null)) (<= 0 (select |count:12.67.33| |brokenObj<3>|)))) (FORALL (|brokenObj<4>|) (NOPATS (is |brokenObj<4>| |T_javafe.ast.TypeModifierPragmaVec|) (NEQ |brokenObj<4>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<4>| |T_javafe.ast.TypeModifierPragmaVec|)) (NEQ |brokenObj<4>| null)) (FORALL (|i:12.62.31|) (IMPLIES (AND (<= 0 |i:12.62.31|) (< |i:12.62.31| (select |count:12.67.33| |brokenObj<4>|))) (NEQ (select (select elems (select |elements:12.61.47| |brokenObj<4>|)) |i:12.62.31|) null))))) (OR (AND (EQ |EC-46.13:46.13| |ecReturn|) (NEQ (select |tmodifiers:30.33| this) null) (LBLPOS |trace.Then^0,48.10| (EQ |@true| |@true|)) (EQ 0 |i@loopold:48.18|) (EQ |EC-46.13:46.13| |EC@loopold|) (OR (AND (LBLPOS |trace.LoopIter^1,48.10#0| (EQ |@true| |@true|)) (OR (NOT (LBLNEG |Null@48.44| (NEQ (select |tmodifiers:30.33| this) null))) (AND (LBLNEG |Null@48.44| (NEQ (select |tmodifiers:30.33| this) null)) (EQ |this@48.45-48.10#0-48.45| (select |tmodifiers:30.33| this)) (EQ |@true| (is |RES-48.10#0-48.45:48.45| T_int)) (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (IMPLIES (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (EQ |RES-48.10#0-48.45:48.45| (select |count:12.67.33| |this@48.45-48.10#0-48.45|))) (< 0 |RES-48.10#0-48.45:48.45|) (EQ |tmp1!tmodifiers-48.10#0:49.13| (select |tmodifiers:30.33| this)) (OR (NOT (LBLNEG |Null@49.28| (NEQ |tmp1!tmodifiers-48.10#0:49.13| null))) (AND (LBLNEG |Null@49.28| (NEQ |tmp1!tmodifiers-48.10#0:49.13| null)) (OR (NOT (LBLNEG |Pre:12.162.8@49.38| (AND (<= 0 0) (< 0 (select |count:12.67.33| |tmp1!tmodifiers-48.10#0:49.13|))))) (AND (EQ |@true| (is |RES-48.10#0-49.29:49.29| |T_javafe.ast.TypeModifierPragma|)) (EQ |@true| (isAllocated |RES-48.10#0-49.29:49.29| alloc)) (EQ |EC-48.10#0-49.29:49.29| |ecReturn|) (IMPLIES (EQ |EC-48.10#0-49.29:49.29| |ecReturn|) (NEQ |RES-48.10#0-49.29:49.29| null)) (NOT (LBLNEG |Null@49.41| (NEQ |RES-48.10#0-49.29:49.29| null)))))))))) (AND (LBLPOS |trace.LoopIter^1,48.10#0| (EQ |@true| |@true|)) (LBLNEG |Null@48.44| (NEQ (select |tmodifiers:30.33| this) null)) (EQ |this@48.45-48.10#0-48.45| (select |tmodifiers:30.33| this)) (EQ |@true| (is |RES-48.10#0-48.45:48.45| T_int)) (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (IMPLIES (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (EQ |RES-48.10#0-48.45:48.45| (select |count:12.67.33| |this@48.45-48.10#0-48.45|))) (< 0 |RES-48.10#0-48.45:48.45|) (EQ |tmp1!tmodifiers-48.10#0:49.13| (select |tmodifiers:30.33| this)) (LBLNEG |Null@49.28| (NEQ |tmp1!tmodifiers-48.10#0:49.13| null)) (EQ |@true| (is |RES-48.10#0-49.29:49.29| |T_javafe.ast.TypeModifierPragma|)) (EQ |@true| (isAllocated |RES-48.10#0-49.29:49.29| alloc)) (EQ |EC-48.10#0-49.29:49.29| |ecReturn|) (IMPLIES (EQ |EC-48.10#0-49.29:49.29| |ecReturn|) (NEQ |RES-48.10#0-49.29:49.29| null)) (LBLNEG |Null@49.41| (NEQ |RES-48.10#0-49.29:49.29| null)) (EQ |EC-48.10#0-49.42:49.42| |ecReturn|) (EQ |i-48.10#0:48.53| (+ 0 1)) (LBLPOS |trace.LoopIter^2,48.10#1| (EQ |@true| |@true|)) (NOT (LBLNEG |Null@48.44| (NEQ (select |tmodifiers:30.33| this) null)))))) (AND (OR (AND (EQ |EC-46.13:46.13| |ecReturn|) (OR (AND (NEQ (select |tmodifiers:30.33| this) null) (LBLPOS |trace.Then^0,48.10| (EQ |@true| |@true|)) (EQ 0 |i@loopold:48.18|) (EQ |EC-46.13:46.13| |EC@loopold|) (OR (AND (LBLPOS |trace.LoopIter^1,48.10#0| (EQ |@true| |@true|)) (LBLNEG |Null@48.44| (NEQ (select |tmodifiers:30.33| this) null)) (EQ |this@48.45-48.10#0-48.45| (select |tmodifiers:30.33| this)) (EQ |@true| (is |RES-48.10#0-48.45:48.45| T_int)) (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (IMPLIES (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (EQ |RES-48.10#0-48.45:48.45| (select |count:12.67.33| |this@48.45-48.10#0-48.45|))) (NOT (< 0 |RES-48.10#0-48.45:48.45|))) (AND (LBLPOS |trace.LoopIter^1,48.10#0| (EQ |@true| |@true|)) (LBLNEG |Null@48.44| (NEQ (select |tmodifiers:30.33| this) null)) (EQ |this@48.45-48.10#0-48.45| (select |tmodifiers:30.33| this)) (EQ |@true| (is |RES-48.10#0-48.45:48.45| T_int)) (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (IMPLIES (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (EQ |RES-48.10#0-48.45:48.45| (select |count:12.67.33| |this@48.45-48.10#0-48.45|))) (< 0 |RES-48.10#0-48.45:48.45|) (EQ |tmp1!tmodifiers-48.10#0:49.13| (select |tmodifiers:30.33| this)) (LBLNEG |Null@49.28| (NEQ |tmp1!tmodifiers-48.10#0:49.13| null)) (EQ |@true| (is |RES-48.10#0-49.29:49.29| |T_javafe.ast.TypeModifierPragma|)) (EQ |@true| (isAllocated |RES-48.10#0-49.29:49.29| alloc)) (EQ |EC-48.10#0-49.29:49.29| |ecReturn|) (IMPLIES (EQ |EC-48.10#0-49.29:49.29| |ecReturn|) (NEQ |RES-48.10#0-49.29:49.29| null)) (LBLNEG |Null@49.41| (NEQ |RES-48.10#0-49.29:49.29| null)) (EQ |EC-48.10#0-49.42:49.42| |ecReturn|) (EQ |i-48.10#0:48.53| (+ 0 1)) (LBLPOS |trace.LoopIter^2,48.10#1| (EQ |@true| |@true|)) (LBLNEG |Null@48.44| (NEQ (select |tmodifiers:30.33| this) null)) (EQ |this@48.45-48.10#1-48.45| (select |tmodifiers:30.33| this)) (EQ |@true| (is |RES-48.10#1-48.45:48.45| T_int)) (EQ |EC-48.10#1-48.45:48.45| |ecReturn|) (IMPLIES (EQ |EC-48.10#1-48.45:48.45| |ecReturn|) (EQ |RES-48.10#1-48.45:48.45| (select |count:12.67.33| |this@48.45-48.10#1-48.45|))) (NOT (< |i-48.10#0:48.53| |RES-48.10#1-48.45:48.45|)))) (EQ |L_48.10| |L_48.10|) (EQ EC |L_48.10|) (EQ |EC<1>| EC)) (AND (NOT (NEQ (select |tmodifiers:30.33| this) null)) (LBLPOS |trace.Else^3,47.7| (EQ |@true| |@true|)) (EQ |EC<1>| |EC-46.13:46.13|))) (EQ |EC:46.13| |ecReturn|)) (AND (EQ |EC-46.13:46.13| |ecReturn|) (NEQ (select |tmodifiers:30.33| this) null) (LBLPOS |trace.Then^0,48.10| (EQ |@true| |@true|)) (EQ 0 |i@loopold:48.18|) (EQ |EC-46.13:46.13| |EC@loopold|) (OR (AND (LBLPOS |trace.LoopIter^1,48.10#0| (EQ |@true| |@true|)) (LBLNEG |Null@48.44| (NEQ (select |tmodifiers:30.33| this) null)) (EQ |this@48.45-48.10#0-48.45| (select |tmodifiers:30.33| this)) (EQ |@true| (is |RES-48.10#0-48.45:48.45| T_int)) (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (IMPLIES (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (EQ |RES-48.10#0-48.45:48.45| (select |count:12.67.33| |this@48.45-48.10#0-48.45|))) (NOT (< 0 |RES-48.10#0-48.45:48.45|))) (AND (LBLPOS |trace.LoopIter^1,48.10#0| (EQ |@true| |@true|)) (LBLNEG |Null@48.44| (NEQ (select |tmodifiers:30.33| this) null)) (EQ |this@48.45-48.10#0-48.45| (select |tmodifiers:30.33| this)) (EQ |@true| (is |RES-48.10#0-48.45:48.45| T_int)) (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (IMPLIES (EQ |EC-48.10#0-48.45:48.45| |ecReturn|) (EQ |RES-48.10#0-48.45:48.45| (select |count:12.67.33| |this@48.45-48.10#0-48.45|))) (< 0 |RES-48.10#0-48.45:48.45|) (EQ |tmp1!tmodifiers-48.10#0:49.13| (select |tmodifiers:30.33| this)) (LBLNEG |Null@49.28| (NEQ |tmp1!tmodifiers-48.10#0:49.13| null)) (EQ |@true| (is |RES-48.10#0-49.29:49.29| |T_javafe.ast.TypeModifierPragma|)) (EQ |@true| (isAllocated |RES-48.10#0-49.29:49.29| alloc)) (EQ |EC-48.10#0-49.29:49.29| |ecReturn|) (IMPLIES (EQ |EC-48.10#0-49.29:49.29| |ecReturn|) (NEQ |RES-48.10#0-49.29:49.29| null)) (LBLNEG |Null@49.41| (NEQ |RES-48.10#0-49.29:49.29| null)) (EQ |EC-48.10#0-49.42:49.42| |ecReturn|) (EQ |i-48.10#0:48.53| (+ 0 1)) (LBLPOS |trace.LoopIter^2,48.10#1| (EQ |@true| |@true|)) (LBLNEG |Null@48.44| (NEQ (select |tmodifiers:30.33| this) null)) (EQ |this@48.45-48.10#1-48.45| (select |tmodifiers:30.33| this)) (EQ |@true| (is |RES-48.10#1-48.45:48.45| T_int)) (EQ |EC-48.10#1-48.45:48.45| |ecReturn|) (IMPLIES (EQ |EC-48.10#1-48.45:48.45| |ecReturn|) (EQ |RES-48.10#1-48.45:48.45| (select |count:12.67.33| |this@48.45-48.10#1-48.45|))) (NOT (< |i-48.10#0:48.53| |RES-48.10#1-48.45:48.45|)))) (NOT (EQ |L_48.10| |L_48.10|)) (EQ |EC:46.13| |L_48.10|))) (NOT (LBLNEG |Exception@50.4| (EQ |EC:46.13| |ecReturn|))))))))) (AND 
(DISTINCT |ecReturn| |L_48.10|)))
(BG_POP)
