A.java:6: Warning: Possible division by zero (ZeroDiv)
    @ ensures \result == (i/i)*2; // divZero warning
                           ^
A.java:10: Warning: Postcondition possibly not established (Post)
  } // Postcondition not established warning
  ^
Associated declaration is "A.java", line 6, col 6:
    @ ensures \result == (i/i)*2; // divZero warning
      ^
A.java:18: Warning: Postcondition possibly not established (Post)
  } // Postcondition not established warning
  ^
Associated declaration is "A.java", line 14, col 7:
    @  ensures \result == (i/i)*2; // no divZero warning because of pr ...
       ^
A.java:39: Warning: Possible division by zero (ZeroDiv)
    @  signals (RuntimeException e) i/i == i/i; // divZero warning
                                     ^
A.java:48: Warning: Possible division by zero (ZeroDiv)
    @  ensures \result == (i/i)*2; // divZero warning
                            ^
A.java:58: Warning: Postcondition possibly not established (Post)
  } // Postcondition not established warning
  ^
Associated declaration is "A.java", line 48, col 7:
    @  ensures \result == (i/i)*2; // divZero warning
       ^
A.java:65: Warning: Possible division by zero (ZeroDiv)
    @  signals (RuntimeException e) i/i == i/i; // divZero warnings
                                     ^
Counterexample labels:
    Pre:0.61.7

A.java:74: Warning: Possible division by zero (ZeroDiv)
  /*@ requires i/i==i/i; // divZero warning 
                ^
C.java:8: Warning: Possible division by zero (ZeroDiv)
    @ ensures this.i == i/i; // divZero warning
                         ^
C.java:12: Warning: Postcondition possibly not established (Post)
  } // Postcondition not established warning
  ^
Associated declaration is "C.java", line 8, col 6:
    @ ensures this.i == i/i; // divZero warning
      ^
C.java:21: Warning: Possible null dereference (Null)
  /*@ ensures this.i == o.i/o.i; // null, divZero warning
                         ^
C.java:21: Warning: Possible division by zero (ZeroDiv)
  /*@ ensures this.i == o.i/o.i; // null, divZero warning
                           ^
C.java:25: Warning: Postcondition possibly not established (Post)
  } // Postcondition not established warning
  ^
Associated declaration is "C.java", line 21, col 6:
  /*@ ensures this.i == o.i/o.i; // null, divZero warning
      ^
C.java:27: Warning: Possible null dereference (Null)
  /*@ requires o.i >= 0;  // null warning
                ^
C.java:32: Warning: Postcondition possibly not established (Post)
  } // Postcondition not established warning
  ^
Associated declaration is "C.java", line 28, col 6:
    @ ensures this.i == o.i; // no null warning - reported in precondi ...
      ^
C.java:34: Warning: Possible null dereference (Null)
  /*@ requires o.i >= 0; // null warning
                ^
C.java:35: Warning: Possible null dereference (Null)
    @ ensures this.i == o1.i; // null warning
                          ^
C.java:39: Warning: Postcondition possibly not established (Post)
  } // Postcondition not established warning
  ^
Associated declaration is "C.java", line 35, col 6:
    @ ensures this.i == o1.i; // null warning
      ^
C.java:43: Warning: Possible null dereference (Null)
    @  ensures this.i == o.i; // null warning
                          ^
C.java:47: Warning: Postcondition possibly not established (Post)
  } // Postcondition not established warning
  ^
Associated declaration is "C.java", line 43, col 7:
    @  ensures this.i == o.i; // null warning
       ^
C.java:51: Warning: Possible null dereference (Null)
    @  signals (RuntimeException e) o.i/o.i == o.i/o.i; // null(o), di ...
                                     ^
C.java:51: Warning: Possible division by zero (ZeroDiv)
    @  signals (RuntimeException e) o.i/o.i == o.i/o.i; // null(o), di ...
                                       ^
C.java:69: Warning: Possible null dereference (Null)
    this.i = o.i+o1.i; // null (o), null (o1) warnings
              ^
C.java:69: Warning: Possible null dereference (Null)
    this.i = o.i+o1.i; // null (o), null (o1) warnings
                   ^
C.java:63: Warning: Possible null dereference (Null)
    @  signals (RuntimeException e) o.i/o.i == 1; // null, divZero war ...
                                     ^
Counterexample labels:
    Pre:1.59.7

C.java:63: Warning: Possible division by zero (ZeroDiv)
    @  signals (RuntimeException e) o.i/o.i == 1; // null, divZero war ...
                                       ^
Counterexample labels:
    Pre:1.59.7

C.java:70: Warning: Postcondition possibly not established (Post)
  } // Postcondition not established warning
  ^
Associated declaration is "C.java", line 60, col 7:
    @  ensures this.i == o.i+o.i; // no null warnings because of body
       ^
C.java:70: Warning: Postcondition possibly not established (Post)
  } // Postcondition not established warning
  ^
Associated declaration is "C.java", line 63, col 7:
    @  signals (RuntimeException e) o.i/o.i == 1; // null, divZero war ...
       ^
Counterexample labels:
    Pre:1.59.7

E.java:4: Warning: Possible division by zero (ZeroDiv)
  //@ invariant f/f == f/f; // divZero warning
                 ^
E.java:4: Warning: Possible division by zero (ZeroDiv)
  //@ invariant f/f == f/f; // divZero warning
                 ^
E.java:25: Warning: Possible null dereference (Null)
    @  requires aa.length>0; //null(aa) warning
                  ^
E.java:4: Warning: Possible division by zero (ZeroDiv)
  //@ invariant f/f == f/f; // divZero warning
                 ^
E.java:7: Warning: Possible null dereference (Null)
  //@ invariant a.length>0; // null(a) warning
                 ^
E.java:4: Warning: Possible division by zero (ZeroDiv)
  //@ invariant f/f == f/f; // divZero warning
                 ^
E.java:7: Warning: Possible null dereference (Null)
  //@ invariant a.length>0; // null(a) warning
                 ^
E.java:48: Warning: Possible null dereference (Null)
    @  requires aa.length>0; //null(aa) warning
                  ^
E.java:4: Warning: Possible division by zero (ZeroDiv)
  //@ invariant f/f == f/f; // divZero warning
                 ^
E.java:7: Warning: Possible null dereference (Null)
  //@ invariant a.length>0; // null(a) warning
                 ^
G.java:5: Warning: Possible null dereference (Null)
  /*@ requires a.length >= 0;  // null(a) warning
                ^
G.java:16: Warning: Possible negative array index (IndexNegative)
    this.a[i]+=v; // idxNeg(i), idx2Large(i)
          ^
G.java:16: Warning: Array index possibly too large (IndexTooBig)
    this.a[i]+=v; // idxNeg(i), idx2Large(i)
          ^
I.java:17: Warning: Possible null dereference (Null)
    this.i = this.test0(o1.i, o2.i, o3.i/o3.i); //null(o1),null(o2),nu ...
                          ^
I.java:17: Warning: Possible null dereference (Null)
    this.i = this.test0(o1.i, o2.i, o3.i/o3.i); //null(o1),null(o2),nu ...
                                ^
I.java:17: Warning: Possible null dereference (Null)
    this.i = this.test0(o1.i, o2.i, o3.i/o3.i); //null(o1),null(o2),nu ...
                                      ^
I.java:17: Warning: Possible division by zero (ZeroDiv)
    this.i = this.test0(o1.i, o2.i, o3.i/o3.i); //null(o1),null(o2),nu ...
                                        ^
I.java:14: Warning: Possible division by zero (ZeroDiv)
  /*@ ensures this.i == \old(this.test0(o1.i, o2.i, o3.i/o3.i));
                                                        ^
B.jml:6: Warning: Possible division by zero (ZeroDiv)
    @ ensures \result == (i/i)*2; // divZero warning
                           ^
B.jml:30: Warning: Possible division by zero (ZeroDiv)
    @  signals (RuntimeException e) i/i == i/i; // divZero warning
                                     ^
B.jml:36: Warning: Possible division by zero (ZeroDiv)
    @  ensures \result == (i/i)*2; // divZero warning
                            ^
B.jml:48: Warning: Possible division by zero (ZeroDiv)
    @  signals (RuntimeException e) i/i == i/i; // divZero warnings
                                     ^
Counterexample labels:
    Pre:5.44.7

B.jml:52: Warning: Possible division by zero (ZeroDiv)
  /*@ requires i/i==i/i; // divZero warning 
                ^
D.jml:8: Warning: Possible division by zero (ZeroDiv)
    @ ensures this.i == i/i; // divZero warning
                         ^
D.jml:17: Warning: Possible null dereference (Null)
  /*@ ensures this.i == o.i/o.i; // null(o), divZero warning
                         ^
D.jml:17: Warning: Possible division by zero (ZeroDiv)
  /*@ ensures this.i == o.i/o.i; // null(o), divZero warning
                           ^
D.jml:21: Warning: Possible null dereference (Null)
  /*@ requires o.i >= 0;  // null(o) warning
                ^
D.jml:26: Warning: Possible null dereference (Null)
  /*@ requires o.i >= 0; // null(o) warning
                ^
D.jml:27: Warning: Possible null dereference (Null)
    @ ensures this.i == o1.i; // null(o1) warning
                          ^
D.jml:33: Warning: Possible null dereference (Null)
    @  ensures this.i == o.i; // null(o) warnings
                          ^
D.jml:39: Warning: Possible null dereference (Null)
    @  signals (RuntimeException e) o.i/o.i == o.i/o.i; // null, divZe ...
                                     ^
D.jml:39: Warning: Possible division by zero (ZeroDiv)
    @  signals (RuntimeException e) o.i/o.i == o.i/o.i; // null, divZe ...
                                       ^
D.jml:45: Warning: Possible null dereference (Null)
    @  ensures this.i == o.i+o.i; // null(o) warning
                          ^
D.jml:48: Warning: Possible null dereference (Null)
    @  signals (RuntimeException e) o.i/o.i == 1; // null, divZero war ...
                                     ^
Counterexample labels:
    Pre:6.44.7

D.jml:48: Warning: Possible division by zero (ZeroDiv)
    @  signals (RuntimeException e) o.i/o.i == 1; // null, divZero war ...
                                       ^
Counterexample labels:
    Pre:6.44.7

F.jml:4: Warning: Possible division by zero (ZeroDiv)
  //@ invariant f/f == f/f; // divZero warning
                 ^
F.jml:4: Warning: Possible division by zero (ZeroDiv)
  //@ invariant f/f == f/f; // divZero warning
                 ^
F.jml:21: Warning: Possible null dereference (Null)
    @  requires aa.length>0; //null(aa) warning
                  ^
F.jml:7: Warning: Possible null dereference (Null)
  //@ invariant a.length>0; // null(a), spurious null(this) warnings i ...
                 ^
F.jml:4: Warning: Possible division by zero (ZeroDiv)
  //@ invariant f/f == f/f; // divZero warning
                 ^
F.jml:7: Warning: Possible null dereference (Null)
  //@ invariant a.length>0; // null(a), spurious null(this) warnings i ...
                 ^
F.jml:4: Warning: Possible division by zero (ZeroDiv)
  //@ invariant f/f == f/f; // divZero warning
                 ^
F.jml:37: Warning: Possible null dereference (Null)
    @  requires aa.length>0; //null(aa) warning
                  ^
F.jml:7: Warning: Possible null dereference (Null)
  //@ invariant a.length>0; // null(a), spurious null(this) warnings i ...
                 ^
F.jml:4: Warning: Possible division by zero (ZeroDiv)
  //@ invariant f/f == f/f; // divZero warning
                 ^
H.jml:5: Warning: Possible null dereference (Null)
  /*@ requires a.length >= 0;  // null(a) warning
                ^
H.jml:11: Warning: Possible negative array index (IndexNegative)
    @ ensures this.a[i] == \old(this.a[i]+v); // idxNeg(i), idx2Large( ...
                    ^
H.jml:11: Warning: Array index possibly too large (IndexTooBig)
    @ ensures this.a[i] == \old(this.a[i]+v); // idxNeg(i), idx2Large( ...
                    ^
J.jml:12: Warning: Possible null dereference (Null)
  /*@ ensures this.i == \old(this.test0(o1.i, o2.i, o3.i/o3.i)); //nul ...
                                          ^
J.jml:12: Warning: Possible null dereference (Null)
  /*@ ensures this.i == \old(this.test0(o1.i, o2.i, o3.i/o3.i)); //nul ...
                                                ^
J.jml:12: Warning: Possible null dereference (Null)
  /*@ ensures this.i == \old(this.test0(o1.i, o2.i, o3.i/o3.i)); //nul ...
                                                      ^
J.jml:12: Warning: Possible division by zero (ZeroDiv)
  /*@ ensures this.i == \old(this.test0(o1.i, o2.i, o3.i/o3.i)); //nul ...
                                                        ^
J.jml:16: Warning: Possible null dereference (Null)
  /*@ ensures this.i == this.test0(o1.i, o2.i, o3.i/o3.i); //null(o1), ...
                                     ^
J.jml:16: Warning: Possible null dereference (Null)
  /*@ ensures this.i == this.test0(o1.i, o2.i, o3.i/o3.i); //null(o1), ...
                                           ^
J.jml:16: Warning: Possible null dereference (Null)
  /*@ ensures this.i == this.test0(o1.i, o2.i, o3.i/o3.i); //null(o1), ...
                                                 ^
J.jml:16: Warning: Possible division by zero (ZeroDiv)
  /*@ ensures this.i == this.test0(o1.i, o2.i, o3.i/o3.i); //null(o1), ...
                                                   ^
84 warnings
