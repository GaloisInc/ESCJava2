// Constructors without bodies

public class D {
  
  public int i;

  /*@ requires i>=0;
    @ ensures this.i == i/i; // divZero warning
    @*/
  public D(int i);

  /*@ requires i>=0;
    @ ensures this.i == i+j+k;
    @*/
  public D(int i, int j, int k);

  /*@ ensures this.i == o.i/o.i; // null(o), divZero warning
    @*/
  public D(D o);

  /*@ requires o.i >= 0;  // null(o) warning
    @ ensures this.i == o.i; // no null(o) because of precondition
    @*/
  public D(D o, int i);

  /*@ requires o.i >= 0; // null(o) warning
    @ ensures this.i == o1.i; // null(o1) warning
    @*/
  public D(D o, D o1, int i);

  /*@ normal_behavior
    @  requires i >= 0;
    @  ensures this.i == o.i; // null(o) warnings
    @*/
  public D(D o, int i, int j);

  /*@ exceptional_behavior
    @  requires i >= 0;
    @  signals (RuntimeException e) o.i/o.i == o.i/o.i; // null, divZero warnings
    @*/
  public D(D o, int i, int j, int k) throws RuntimeException;
  
  /*@ normal_behavior 
    @  requires i>=0;
    @  ensures this.i == o.i+o.i; // null(o) warning
    @ also exceptional_behavior
    @  requires i<0;
    @  signals (RuntimeException e) o.i/o.i == 1; // null, divZero warnings
    @*/
  public D(D o, D o1, int i, int j) throws RuntimeException;

}
