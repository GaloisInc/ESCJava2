#!/bin/csh -f
# usage: run FLAGS

# B.java - simple test of getting info from loop context, 
#          preconditions, loop guard, invariants, and nested loops
# C.java - more complicated tests, including 2d arrays
# C2.java - clearing a 2d array
# F.java - clear an array
# D.java - ensures escjava knows int[] and int are never aliased

${ESCJ} -quiet -loopSafe preciseTargets.java

setenv g UNSETg
setenv f UNSETf
foreach p (C2 B F C)
    foreach n (1 2 3 4)

      if( $n == 1 ) then
         setenv f "-predAbstractFQnew 5"
         setenv g "FQnew"
      else if( $n == 2 ) then
         setenv f "-predAbstract"
         setenv g "FQ"
      else if( $n == 3 ) then
         setenv f "-predAbstractDDP"
         setenv g "DDP"
      else if( $n == 4 ) then
         setenv f "-predAbstractSS 1.2.3.4.5"
         setenv g "SS"
      endif

      echo ============ Benchmark $p Alg $g $f 
#      echo ${ESCJ} -quiet $f $* -sxLog "log/sx.$p.$g.$q" $p.java 
#      ${ESCJ} -quiet $f $* -sxLog "log/sx.$p.$g.$q" $p.java | tee "log/allout.$p.$g.$q" | grep "Warning\|Error\|Caution\|reachable" 
      ${ESCJ} -quiet $f $* $p.java | tee "log/allout.$p.$g" | grep "Warning\|Error\|Caution\|reachable" 
#      echo --- Output
#      cat "log/allout.$p.$g.$q"
#      echo --- Diffing $p Alg $g $f $q
#      diff "log/out.$p.$g.$q" "ans-per-run.$p"
    end
  end
end





