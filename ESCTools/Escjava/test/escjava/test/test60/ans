#!/bin/csh -f
# usage: run FLAGS

# Note, escjava is nondeterministic in the order in which it produces
# the warnings in this test.  Thus, the output of escjava produced
# from this script file is placed in a file 'out.raw'.  This file is
# then sorted, which produces the output of this test (as expected by
# 'rtest').  The file 'out.raw' is not actually needed, but it produced
# for possible help in future debugging analysis of this test.
#
# Similarly, unlike the standard escjava regression tests which store
# an answer file 'ans' in the CVS repository, this test instead stores
# a file 'ans.raw', which contains a correct sequence of answers.  (In
# fact, it will be some snapshot of the 'out.raw' file.)  Since this
# sequence may be different from the one actually produced by a test
# run, this script file sorts 'ans.raw' into 'ans', which is the file
# that 'rtest' will use to compare the results.
#
# In fact, some more kludges are needed, because of associated declarations.
# These are done with some sed scripts below.
#
# Finally, anticipating that some escjava developer in the future will
# look at the 'out' or 'ans' file of this test directory and get confused
# at the sight of what appears to be impenetrable garbage, it seems
# prudent to put some comment at the top of the 'ans' and 'out' files.
# What better comment than the one given here in the 'run' file!  Hence,
# the 'run' file is prepended to the 'ans' and 'out' files.

( ${ESCJ} $* C.java \
; ${ESCJ} $* N.java \
; ${ESCJ} $* Typecheck.java \
) >! out.raw
cat out.raw | \
  sed -e 's/\(Associated declaration is "N.java", line\) 15, col 21:/\1 6, col 21:/' \
      -e 's/\(public void m2(.*)\);/\1 {/' \
      -e 's/\(public void m2(.*) {\).*$/\1 {/' | \
  sort | cat run -
cat ans.raw | \
  sed -e 's/\(public void m2(.*)\);/\1 {/' \
      -e 's/\(public void m2(.*) {\).*$/\1 {/' | \
  sort | cat run - >! ans
                     ^
                     ^
                     ^
                     ^
                     ^
                     ^
                     ^
                     ^
                     ^
                     ^
                     ^
                     ^
                  ^
                  ^
                  ^
                  ^
                  ^
        ^
        ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      case 0:  m0(x);  break;
      case 1:  m1(x, x);  break;
      case 2:  m2(x);  break;
      case 3:  m3(x);  break;
      case 4:  m4(x);  break;
    //@ assert (x & 3) == 2;
    //@ assert y != null;
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
  /*@ requires 0 <= k; */   // error: cannot put "requires" here
  /*@ requires 0 <= k; */   // error: cannot put "requires" here
  /*@ requires 0 <= k; */   // error: cannot put "requires" here (but  ...
  //@ also_ensures \result < 10;
  //@ ensures 0 <= \result;
  //@ ensures \result != x;
  ^
  ^
  ^
  public void m0(/*@ non_null */ int[] x) {
  public void m0(/*@ non_null */ int[] x) { // error: method is not ne ...
  public void m0(/*@ non_null */ int[] x);  // error:  method is not n ...
  public void m1(/*@ non_null */ int[] x) { // error: method is not ne ...
  public void m1(/*@ non_null */ int[] x, int[] y);
  public void m2(/*@ non_null */ int[] x) { {
  public void m2(/*@ non_null */ int[] x) { {
  public void m2(/*@ non_null */ int[] x) { {
  public void m3(/*@ non_null */ int[] x) {
  public void m4(/*@ non_null */ int[] x) { // error:  method is class ...
  public void m4(/*@ non_null */ int[] x);
  public void m5(/*@ non_null */ int[] x) { // error:  method is class ...
  }
  }
  }
1 caution
16 errors
4 warnings
6 warnings
Associated declaration is "C.java", line 14, col 6:
Associated declaration is "C.java", line 2, col 6:
Associated declaration is "C.java", line 29, col 6:
Associated declaration is "N.java", line 14, col 21:
Associated declaration is "N.java", line 16, col 21:
Associated declaration is "N.java", line 2, col 21:
Associated declaration is "N.java", line 6, col 21:
Associated declaration is "N.java", line 8, col 21:
C.java:32: Warning: Postcondition possibly not established (Post)
C.java:32: Warning: Postcondition possibly not established (Post)
C.java:32: Warning: Postcondition possibly not established (Post)
C.java:44: Warning: Possible assertion failure (Assert)
Caution: Turning off extended static checking due to type error(s)
N.java:25: Warning: Possible assertion failure (Assert)
N.java:39: Warning: Possible assignment of null to variable declared non_null (NonNull)
N.java:40: Warning: Possible assignment of null to variable declared non_null (NonNull)
N.java:41: Warning: Possible assignment of null to variable declared non_null (NonNull)
N.java:42: Warning: Possible assignment of null to variable declared non_null (NonNull)
N.java:43: Warning: Possible assignment of null to variable declared non_null (NonNull)
Typecheck.java:33: Error: also_requires can only be used on method overrides; use requires instead
Typecheck.java:49: Error: also_requires can only be used on method overrides; use requires instead
Typecheck.java:51: Error: also_requires can only be used on method overrides; use requires instead
Typecheck.java:57: Error: non_null cannot be applied to parameters of a method override
Typecheck.java:59: Error: non_null cannot be applied to parameters of a method override
Typecheck.java:61: Error: non_null cannot be applied to parameters of a method override
Typecheck.java:65: Error: non_null cannot be applied to parameters of a method override
Typecheck.java:67: Error: non_null cannot be applied to parameters of a method override
Typecheck.java:70: Error: requires cannot be used on method overrides
Typecheck.java:75: Error: also_requires can only be used on class-new method overrides
Typecheck.java:81: Error: requires cannot be used on method overrides; declare in supertype or use also_requires
Typecheck.java:88: Error: non_null cannot be applied to parameters of a method override
Typecheck.java:89: Error: non_null cannot be applied to parameters of a method override
Typecheck.java:91: Error: requires cannot be used on method overrides
Typecheck.java:94: Error: also_requires can only be used on class-new method overrides
Typecheck.java:96: Error: also_requires can only be used on class-new method overrides
