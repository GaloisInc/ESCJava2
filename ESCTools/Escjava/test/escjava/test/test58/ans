#!/bin/csh -f
# usage: run FLAGS

# Note, escjava is nondeterministic in the order in which it produces
# the warnings in this test.  Thus, the output of escjava produced
# from this script file is placed in a file 'out.raw'.  This file is
# then sorted, which produces the output of this test (as expected by
# 'rtest').  The file 'out.raw' is not actually needed, but it produced
# for possible help in future debugging analysis of this test.
#
# Similarly, unlike the standard escjava regression tests which store
# an answer file 'ans' in the CVS repository, this test instead stores
# a file 'ans.raw', which contains a correct sequence of answers.  (In
# fact, it will be some snapshot of the 'out.raw' file.)  Since this
# sequence may be different from the one actually produced by a test
# run, this script file sorts 'ans.raw' into 'ans', which is the file
# that 'rtest' will use to compare the results.
#
# Finally, anticipating that some escjava developer in the future will
# look at the 'out' or 'ans' file of this test directory and get confused
# at the sight of what appears to be impenetrable garbage, it seems
# prudent to put some comment at the top of the 'ans' and 'out' files.
# What better comment than the one given here in the 'run' file!  Hence,
# the 'run' file is prepended to the 'ans' and 'out' files.

( ${ESCJ} $* InterfaceInherit.java \
; ${ESCJ} $* SuperCallPost.java \
; ${ESCJ} $* Body.java \
; ${ESCJ} $* Test.java \
; ${ESCJ} $* Vanilla.java \
) >! out.raw
sort out.raw | cat run -
sort ans.raw | cat run - >! ans
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
  ^
    ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
      ^
       ^
        ^
        ^
          ^
          ^
          ^
              ^
               ^
                ^
                       ^
                       ^
                            ^
                            ^
                                    ^
                                    ^
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
15 warnings
1 warning
1 warning
6 warnings
8 warnings
    //@ assert 10 <= k;  // should fail, since no sibling is called
      //@ assert 10 <= sub.s;  // should fail, since invariant is decl ...
      //@ assert 10 <= thisC.c;  // should fail, since C is a superint ...
      //@ assert 10 <= thisD.d;  // should fail, since the invariant i ...
Associated declaration is "Body.java", line 18, col 6:
Associated declaration is "Body.java", line 3, col 6:
Associated declaration is "Body.java", line 89, col 6:
Associated declaration is "Body.java", line 8, col 6:
Associated declaration is "InterfaceInherit.java", line 17, col 6:
Associated declaration is "InterfaceInherit.java", line 20, col 6:
Associated declaration is "InterfaceInherit.java", line 20, col 6:
Associated declaration is "InterfaceInherit.java", line 20, col 6:
Associated declaration is "InterfaceInherit.java", line 25, col 6:
Associated declaration is "InterfaceInherit.java", line 25, col 6:
Associated declaration is "InterfaceInherit.java", line 29, col 23:
Associated declaration is "InterfaceInherit.java", line 29, col 23:
Associated declaration is "InterfaceInherit.java", line 30, col 15:
Associated declaration is "InterfaceInherit.java", line 33, col 6:
Associated declaration is "InterfaceInherit.java", line 34, col 6:
Associated declaration is "InterfaceInherit.java", line 3, col 6:
Associated declaration is "InterfaceInherit.java", line 3, col 6:
Associated declaration is "InterfaceInherit.java", line 3, col 6:
Associated declaration is "InterfaceInherit.java", line 9, col 16:
Associated declaration is "SuperCallPost.java", line 9, col 6:
Associated declaration is "Test.java", line 15, col 8:
Associated declaration is "Vanilla.java", line 21, col 6:
Associated declaration is "Vanilla.java", line 21, col 6:
Associated declaration is "Vanilla.java", line 21, col 6:
Associated declaration is "Vanilla.java", line 25, col 6:
Associated declaration is "Vanilla.java", line 25, col 6:
Associated declaration is "Vanilla.java", line 9, col 6:
Body.java:21: Warning: Possible violation of object invariant (Invariant)
Body.java:21: Warning: Possible violation of object invariant (Invariant)
Body.java:46: Warning: Possible assertion failure (Assert)
Body.java:52: Warning: Possible assertion failure (Assert)
Body.java:65: Warning: Possible assertion failure (Assert)
Body.java:74: Warning: Possible assertion failure (Assert)
Body.java:87: Warning: Possible violation of object invariant (Invariant)
Body.java:87: Warning: Possible violation of object invariant (Invariant)
class Sub extends Body implements D {
class Sub extends Body implements D {
class Super implements A, B {
class Super implements A, B {
    }                             // error
  }  // error:  fails to establish both 10 < k and k % 2 == 0
  }  // error:  fails to establish both 10 < k and k % 2 == 0
  }  // error:  fails to establish invariant 0 < k
  }  // error:  fails to establish invariant 10 < k
  }  // error:  fails to establish invariant 10 < k
  }  // error:  fails to establish k % 2 == 0  (superclass establishes ...
  //@ ghost /*@ non_null */ public int[] b;
  //@ ghost public /*@ non_null */ Object y;
  //@ ghost public /*@ non_null */ Object y;
InterfaceInherit.java:40: Warning: Field declared non_null possibly not initialized (NonNullInit)
InterfaceInherit.java:40: Warning: Field declared non_null possibly not initialized (NonNullInit)
InterfaceInherit.java:40: Warning: Field declared non_null possibly not initialized (NonNullInit)
InterfaceInherit.java:40: Warning: Possible violation of object invariant (Invariant)
InterfaceInherit.java:40: Warning: Possible violation of object invariant (Invariant)
InterfaceInherit.java:40: Warning: Possible violation of object invariant (Invariant)
InterfaceInherit.java:40: Warning: Possible violation of object invariant (Invariant)
InterfaceInherit.java:57: Warning: Possible violation of object invariant (Invariant)
InterfaceInherit.java:59: Warning: Possible violation of object invariant (Invariant)
InterfaceInherit.java:68: Warning: Possible violation of object invariant (Invariant)
InterfaceInherit.java:68: Warning: Possible violation of object invariant (Invariant)
InterfaceInherit.java:73: Warning: Possible violation of object invariant (Invariant)
InterfaceInherit.java:79: Warning: Possible assignment of null to variable declared non_null (NonNull)
InterfaceInherit.java:80: Warning: Possible violation of object invariant (Invariant)
InterfaceInherit.java:80: Warning: Possible violation of object invariant (Invariant)
  //@ invariant 0 < k;
    //@ invariant 0 < x;
  //@ invariant 10 <= a;
  //@ invariant -10 < a && a != 0 && a < 10;
  //@ invariant -10 < a && a != 0 && a < 10;
  //@ invariant -10 < a && a != 0 && a < 10;
  //@ invariant 10 <= b;
  //@ invariant 10 <= d;
  //@ invariant 10 <= k;
  //@ invariant 10 <= s;
  //@ invariant 10 < ((Vanilla)this).k;
  //@ invariant 10 < ((Vanilla)this).k;
  //@ invariant 10 < ((Vanilla)this).k;
  //@ invariant 10 <= x && x < 100;
  //@ invariant 10 <= x && x < 100;
  //@ invariant 1 <= z;
  //@ invariant d != 0 && d <= a;
  //@ invariant dZero <= aZero;
  //@ invariant dZero <= aZero;
  //@ invariant dZero <= aZero;
  //@ invariant ((Vanilla)this).k % 2 == 0;
  //@ invariant ((Vanilla)this).k % 2 == 0;
  //@ invariant z < a;
  Object w /*@ non_null */;
      p(a);
    //@ set y = yy;
SuperCallPost.java:13: Warning: Possible violation of object invariant (Invariant)
Test.java:21: Warning: Possible violation of object invariant (Invariant)
Vanilla.java:12: Warning: Possible violation of object invariant (Invariant)
Vanilla.java:30: Warning: Possible violation of object invariant (Invariant)
Vanilla.java:41: Warning: Possible violation of object invariant (Invariant)
Vanilla.java:46: Warning: Possible violation of object invariant (Invariant)
Vanilla.java:46: Warning: Possible violation of object invariant (Invariant)
Vanilla.java:56: Warning: Possible violation of object invariant (Invariant)
