override.java:10: Error: The helper pragma cannot be applied to a method override
    /*@ helper */ final int q() {
        ^
Caution: Turning off extended static checking due to type error(s)
1 caution
1 error
postconditions.java:16: Warning: Postcondition possibly not established (Post)
    }
    ^
Associated declaration is "postconditions.java", line 11, col 8:
    //@ ensures \result == 4;
        ^
Execution trace information:
    Executed call in "postconditions.java", line 19, col 16.
    Executed return in "postconditions.java", line 15, col 1.

1 warning
restrictions.java:16: Error: The helper pragma can only be applied to methods and constructors
    /*@ helper */ int k;
        ^
Caution: Turning off extended static checking due to type error(s)
1 caution
1 error
restrictions2.java:5: Error: The helper pragma cannot be applied to method that can be overridden
    /*@ helper */ int m(int i) {
        ^
Caution: Turning off extended static checking due to type error(s)
1 caution
1 error
Simple0.java:10: Warning: Possible assertion failure (Assert)
    //@ assert y == 5;
        ^
Simple0.java:14: Warning: Possible assertion failure (Assert)
    //@ assert 0 <= x;
        ^
2 warnings
Simple2.java:8: Warning: Precondition possibly not established (Pre)
    int y = n();
             ^
Associated declaration is "Simple2.java", line 12, col 6:
  //@ requires -10 <= x;
      ^
Simple2.java:15: Warning: Possible assertion failure (Assert)
    //@ assert 0 <= x;
        ^
Execution trace information:
    Executed call in "Simple2.java", line 8, col 12.

Simple2.java:9: Warning: Possible assertion failure (Assert)
    //@ assert y == 5;
        ^
Execution trace information:
    Executed call in "Simple2.java", line 8, col 12.
    Executed return in "Simple2.java", line 16, col 4.

Simple2.java:23: Warning: Postcondition possibly not established (Post)
  }
  ^
Associated declaration is "Simple2.java", line 19, col 6:
  //@ ensures x == 5;
      ^
Execution trace information:
    Executed call in "Simple2.java", line 21, col 4.
    Executed implicit return in "Simple2.java", line 27, col 2.
    Executed call in "Simple2.java", line 22, col 4.
    Executed return in "Simple2.java", line 31, col 4.

4 warnings
Constructor.java:18: Warning: Possible assignment of null to variable declared non_null (NonNull)
    s = sp;  // violates non_null
      ^
Associated declaration is "Constructor.java", line 2, col 6:
  /*@ non_null */ String s;
      ^
Constructor.java:20: Warning: Possible violation of object invariant (Invariant)
  }  // violates invariant
  ^
Associated declaration is "Constructor.java", line 5, col 6:
  //@ invariant 0 < x && x <= 10;
      ^
Constructor.java:13: Warning: Possible assignment of null to variable declared non_null (NonNull)
    s = sp;
      ^
Associated declaration is "Constructor.java", line 2, col 6:
  /*@ non_null */ String s;
      ^
Execution trace information:
    Executed call in "Constructor.java", line 23, col 4.

Constructor.java:24: Warning: Possible violation of object invariant (Invariant)
  }  // violates invariant
  ^
Associated declaration is "Constructor.java", line 5, col 6:
  //@ invariant 0 < x && x <= 10;
      ^
Execution trace information:
    Executed call in "Constructor.java", line 23, col 4.
    Executed implicit return in "Constructor.java", line 15, col 2.

Constructor.java:13: Warning: Possible assignment of null to variable declared non_null (NonNull)
    s = sp;
      ^
Associated declaration is "Constructor.java", line 2, col 6:
  /*@ non_null */ String s;
      ^
Execution trace information:
    Executed call in "Constructor.java", line 27, col 4.

Constructor.java:29: Warning: Possible violation of object invariant (Invariant)
  }  // violates x's invariant
  ^
Associated declaration is "Constructor.java", line 5, col 6:
  //@ invariant 0 < x && x <= 10;
      ^
Execution trace information:
    Executed call in "Constructor.java", line 27, col 4.
    Executed implicit return in "Constructor.java", line 15, col 2.

6 warnings
chain0.java:4: Warning: Possible assertion failure (Assert)
    //@ assert x == 18;  // warning, due to finite inlining
        ^
Execution trace information:
    Executed call in "chain0.java", line 3, col 12.
    Executed call in "chain0.java", line 9, col 11.
    Executed return in "chain0.java", line 14, col 4.
    Executed return in "chain0.java", line 9, col 4.

1 warning
chain1.java:7: Warning: Possible assertion failure (Assert)
    //@ assert x == 20;  // error
        ^
Execution trace information:
    Executed call in "chain1.java", line 4, col 8.
    Executed call in "chain1.java", line 12, col 11.
    Executed call in "chain1.java", line 17, col 11.
    Executed return in "chain1.java", line 22, col 4.
    Executed return in "chain1.java", line 17, col 4.
    Executed return in "chain1.java", line 12, col 4.
    Executed call in "chain1.java", line 6, col 8.
    Executed call in "chain1.java", line 12, col 11.
    Executed call in "chain1.java", line 17, col 11.
    Executed return in "chain1.java", line 22, col 4.
    Executed return in "chain1.java", line 17, col 4.
    Executed return in "chain1.java", line 12, col 4.

1 warning
abstract.java:2: Error: The helper pragma cannot be applied to method that can be overridden
  /*@ helper */ abstract void m();
      ^
abstract.java:3: Error: The helper pragma cannot be applied to method without a body
  /*@ helper */ native final void n();
      ^
Caution: Turning off extended static checking due to type error(s)
abstract.java:7: Error: The helper pragma cannot be applied to method that can be overridden
  /*@ helper */ void p();
      ^
1 caution
3 errors
