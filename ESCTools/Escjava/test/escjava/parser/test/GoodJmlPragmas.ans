GoodJmlPragmas.j:3: /*@ pre true; */
GoodJmlPragmas.j:4: /*@ post false; */
GoodJmlPragmas.j:5: /*@ pre a_boolean_expression; */
GoodJmlPragmas.j:9: /*@ modifies x; */
GoodJmlPragmas.j:10: /*@ modifies y; */
GoodJmlPragmas.j:10: /*@ modifies z; */
GoodJmlPragmas.j:11: /*@ modifies a; */
GoodJmlPragmas.j:11: /*@ modifies b; */
GoodJmlPragmas.j:11: /*@ modifies c; */
GoodJmlPragmas.j:12: /*@ assignable x; */
GoodJmlPragmas.j:12: /*@ assignable y; */
GoodJmlPragmas.j:13: /*@ modifiable z; */
GoodJmlPragmas.j:14: /*@ assignable x[0]; */
GoodJmlPragmas.j:14: /*@ modifiable z[0][y]; */
GoodJmlPragmas.j:18: /*@ signals (Exception e) true == false; */
GoodJmlPragmas.j:19: /*@ signals (Throwable t) x < y; */
GoodJmlPragmas.j:20: /*@ signals (TYPE tt) tt == \type(SomeException); */
GoodJmlPragmas.j:24: /*@ maintaining x; */
GoodJmlPragmas.j:25: /*@ decreasing z - 1; */
GoodJmlPragmas.j:29: /*@ also */
GoodJmlPragmas.j:29: /*@ post q; */
GoodJmlPragmas.j:30: /*@ also */
GoodJmlPragmas.j:30: /*@ post q2; */
GoodJmlPragmas.j:31: /*@ also */
GoodJmlPragmas.j:31: /*@ pre x[0]; */
GoodJmlPragmas.j:32: /*@ also */
GoodJmlPragmas.j:32: /*@ modifies z; */
GoodJmlPragmas.j:36: /*@ writable_if x; */
GoodJmlPragmas.j:37: /*@ readable_if y > 0; */
GoodJmlPragmas.j:41: /*@ behavior */
GoodJmlPragmas.j:42: /*@ normal_behavior */
GoodJmlPragmas.j:43: /*@ exceptional_behavior */
GoodJmlPragmas.j:57: /*@ assert_redundantly predicate; */
GoodJmlPragmas.j:60: /*@ assignable_redundantly a; */
GoodJmlPragmas.j:61: /*@ assignable_redundantly a; */
GoodJmlPragmas.j:61: /*@ assignable_redundantly b; */
GoodJmlPragmas.j:61: /*@ assignable_redundantly c; */
GoodJmlPragmas.j:62: /*@ assignable_redundantly a if predicate; */
GoodJmlPragmas.j:63: /*@ assignable_redundantly a if pred1; */
GoodJmlPragmas.j:63: /*@ assignable_redundantly b if pred2; */
GoodJmlPragmas.j:63: /*@ assignable_redundantly c if pred3; */
GoodJmlPragmas.j:66: /*@ assume_redundantly predicate; */
GoodJmlPragmas.j:83: /*@ constraint_redundantly predicate; */
GoodJmlPragmas.j:84: /*@ constraint_redundantly predicate; */
GoodJmlPragmas.j:85: /*@ constraint_redundantly predicate; */
GoodJmlPragmas.j:86: /*@ constraint_redundantly predicate; */
GoodJmlPragmas.j:96: /*@ decreases_redundantly spec_expression; */
GoodJmlPragmas.j:97: /*@ decreasing_redundantly spec_expression; */
GoodJmlPragmas.j:101: /*@ diverges_redundantly \not_specified; */
GoodJmlPragmas.j:102: /*@ diverges_redundantly predicate; */
GoodJmlPragmas.j:104: /*@ duration_redundantly \not_specified; */
GoodJmlPragmas.j:105: /*@ duration_redundantly spec_expression; */
GoodJmlPragmas.j:106: /*@ duration_redundantly spec_expression if predicate; */
GoodJmlPragmas.j:108: /*@ ensures_redundantly \not_specified; */
GoodJmlPragmas.j:109: /*@ ensures_redundantly predicate; */
GoodJmlPragmas.j:111: /*@ exsures_redundantly (Exception e) \not_specified; */
GoodJmlPragmas.j:112: /*@ exsures_redundantly (Exception e) predicate; */
GoodJmlPragmas.j:116: /*@ invariant_redundantly predicate; */
GoodJmlPragmas.j:118: /*@ loop_invariant_redundantly predicate; */
GoodJmlPragmas.j:120: /*@ maintaining_redundantly predicate; */
GoodJmlPragmas.j:122: /*@ measured_by_redundantly \not_specified; */
GoodJmlPragmas.j:123: /*@ measured_by_redundantly spec_expression; */
GoodJmlPragmas.j:124: /*@ measured_by_redundantly spec_expression if predicate; */
GoodJmlPragmas.j:126: /*@ modifiable_redundantly \not_specified; */
GoodJmlPragmas.j:127: /*@ modifiable_redundantly a; */
GoodJmlPragmas.j:128: /*@ modifiable_redundantly a[*]; */
GoodJmlPragmas.j:129: /*@ modifiable_redundantly a; */
GoodJmlPragmas.j:129: /*@ modifiable_redundantly b[*]; */
GoodJmlPragmas.j:129: /*@ modifiable_redundantly c[1]; */
GoodJmlPragmas.j:131: /*@ modifies_redundantly a; */
GoodJmlPragmas.j:132: /*@ modifies_redundantly a[*]; */
GoodJmlPragmas.j:133: /*@ modifies_redundantly a; */
GoodJmlPragmas.j:133: /*@ modifies_redundantly b[*]; */
GoodJmlPragmas.j:133: /*@ modifies_redundantly c[1]; */
GoodJmlPragmas.j:134: /*@ modifies_redundantly a if predicate; */
GoodJmlPragmas.j:135: /*@ modifies_redundantly a if pred1; */
GoodJmlPragmas.j:135: /*@ modifies_redundantly b if pred2; */
GoodJmlPragmas.j:135: /*@ modifies_redundantly c if pred3; */
GoodJmlPragmas.j:137: /*@ post_redundantly predicate; */
GoodJmlPragmas.j:139: /*@ pre_redundantly predicate; */
GoodJmlPragmas.j:144: /*@ requires_redundantly predicate; */
GoodJmlPragmas.j:149: /*@ signals_redundantly (Exception) \not_specified; */
GoodJmlPragmas.j:150: /*@ signals_redundantly (Exception) predicate; */
GoodJmlPragmas.j:151: /*@ signals_redundantly (Exception e) \not_specified; */
GoodJmlPragmas.j:152: /*@ signals_redundantly (Exception e) predicate; */
GoodJmlPragmas.j:154: /*@ when_redundantly \not_specified; */
GoodJmlPragmas.j:155: /*@ when_redundantly predicate; */
GoodJmlPragmas.j:157: /*@ working_space_redundantly \not_specified; */
GoodJmlPragmas.j:158: /*@ working_space_redundantly spec_expression_of_type_int; */
GoodJmlPragmas.j:159: /*@ working_space_redundantly spec_expression_of_type_int if predicate; */
GoodJmlPragmas.j:168: /*@ duration \not_specified; */
GoodJmlPragmas.j:169: /*@ duration spec_expression; */
GoodJmlPragmas.j:170: /*@ duration spec_expression if predicate; */
GoodJmlPragmas.j:172: /*@ working_space \not_specified; */
GoodJmlPragmas.j:173: /*@ working_space spec_expression_of_type_int; */
GoodJmlPragmas.j:174: /*@ working_space spec_expression_of_type_int if predicate; */
