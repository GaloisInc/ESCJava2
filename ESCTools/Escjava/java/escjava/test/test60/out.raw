C.java:32: Warning: Postcondition possibly not established (Post)
  }
  ^
Associated declaration is "C.java", line 29, col 6:
  //@ also_ensures \result < 10;
      ^
C.java:32: Warning: Postcondition possibly not established (Post)
  }
  ^
Associated declaration is "C.java", line 14, col 6:
  //@ ensures \result != x;
      ^
C.java:32: Warning: Postcondition possibly not established (Post)
  }
  ^
Associated declaration is "C.java", line 2, col 6:
  //@ ensures 0 <= \result;
      ^
C.java:44: Warning: Possible assertion failure (Assert)
    //@ assert (x & 3) == 2;
        ^
4 warnings
N.java:25: Warning: Possible assertion failure (Assert)
    //@ assert y != null;
        ^
N.java:39: Warning: Possible assignment of null to variable declared non_null (NonNull)
      case 0:  m0(x);  break;
                  ^
Associated declaration is "N.java", line 2, col 21:
  public void m0(/*@ non_null */ int[] x) {
                     ^
N.java:40: Warning: Possible assignment of null to variable declared non_null (NonNull)
      case 1:  m1(x, x);  break;
                  ^
Associated declaration is "N.java", line 14, col 21:
  public void m1(/*@ non_null */ int[] x, int[] y);
                     ^
N.java:41: Warning: Possible assignment of null to variable declared non_null (NonNull)
      case 2:  m2(x);  break;
                  ^
Associated declaration is "N.java", line 15, col 21:
  public void m2(/*@ non_null */ int[] x);
                     ^
N.java:42: Warning: Possible assignment of null to variable declared non_null (NonNull)
      case 3:  m3(x);  break;
                  ^
Associated declaration is "N.java", line 8, col 21:
  public void m3(/*@ non_null */ int[] x) {
                     ^
N.java:43: Warning: Possible assignment of null to variable declared non_null (NonNull)
      case 4:  m4(x);  break;
                  ^
Associated declaration is "N.java", line 16, col 21:
  public void m4(/*@ non_null */ int[] x);
                     ^
6 warnings
Typecheck.java:33: Error: also_requires can only be used on method overrides; use requires instead
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
      ^
Caution: Turning off extended static checking due to type error(s)
Typecheck.java:49: Error: also_requires can only be used on method overrides; use requires instead
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
      ^
Typecheck.java:51: Error: also_requires can only be used on method overrides; use requires instead
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
      ^
Typecheck.java:57: Error: non_null cannot be applied to parameters of a method override
  public void m0(/*@ non_null */ int[] x) { // error: method is not ne ...
                     ^
Typecheck.java:59: Error: non_null cannot be applied to parameters of a method override
  public void m1(/*@ non_null */ int[] x) { // error: method is not ne ...
                     ^
Typecheck.java:61: Error: non_null cannot be applied to parameters of a method override
  public void m2(/*@ non_null */ int[] x) { // error: method is not ne ...
                     ^
Typecheck.java:65: Error: non_null cannot be applied to parameters of a method override
  public void m4(/*@ non_null */ int[] x) { // error:  method is class ...
                     ^
Typecheck.java:67: Error: non_null cannot be applied to parameters of a method override
  public void m5(/*@ non_null */ int[] x) { // error:  method is class ...
                     ^
Typecheck.java:70: Error: requires cannot be used on method overrides
  /*@ requires 0 <= k; */   // error: cannot put "requires" here
      ^
Typecheck.java:75: Error: also_requires can only be used on class-new method overrides
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
      ^
Typecheck.java:81: Error: requires cannot be used on method overrides; declare in supertype or use also_requires
  /*@ requires 0 <= k; */   // error: cannot put "requires" here (but  ...
      ^
Typecheck.java:88: Error: non_null cannot be applied to parameters of a method override
  public void m0(/*@ non_null */ int[] x);  // error:  method is not n ...
                     ^
Typecheck.java:89: Error: non_null cannot be applied to parameters of a method override
  public void m2(/*@ non_null */ int[] x);  // error:  method is not n ...
                     ^
Typecheck.java:91: Error: requires cannot be used on method overrides
  /*@ requires 0 <= k; */   // error: cannot put "requires" here
      ^
Typecheck.java:94: Error: also_requires can only be used on class-new method overrides
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
      ^
Typecheck.java:96: Error: also_requires can only be used on class-new method overrides
  /*@ also_requires 0 <= k; */  // error: cannot put "also_requires" h ...
      ^
1 caution
16 errors
