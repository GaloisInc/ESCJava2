// Generated by jmlspec from the .class file

package java.io;

public class FilterInputStream extends java.io.InputStream {

    // FIXME: The underlying stream is allowed to be null.
    // Need to write specs that connect the stream to the underlying
    // stream, but I'm not sure that the documentation actually requires
    // that, only allows it.

    // FIXME: Lots of room for specs using 'code'

    // CLASS SPECIFICATIONS
    /*@
      @*/

    // This is allowed to be created with in==null, but then no method
    // may be called.  Since 'in' is protected, subclasses may modify it
    // after construction.

    // FIELDS
    protected java.io.InputStream in;

    // METHODS AND CONSTRUCTORS

    /*@
      @ 
      @*/
    public int available()
        throws java.io.IOException;

    /*@
      @ 
      @*/
    public int read()
        throws java.io.IOException;

    /*@
      @ 
      @*/
    public void close()
        throws java.io.IOException;

    /*@
      @ 
      @*/
    public synchronized void reset()
        throws java.io.IOException;

    /*@
      @ 
      @*/
    public boolean markSupported();

    /*@
      @ 
      @*/
    public synchronized void mark(int pos);

    /*@
      @ 
      @*/
    public long skip(long number)
        throws java.io.IOException;

    /*@
      @ 
      @*/
    public int read(byte[] bytes)
        throws java.io.IOException;

    /*@
      @ 
      @*/
    public int read(byte[] bytes, int off, int len)
        throws java.io.IOException;

    /*@
      @ requires stream != null ==> stream.isOpen;
      @ ensures initialInputStream();
      @*/
    protected FilterInputStream(InputStream stream);
}
