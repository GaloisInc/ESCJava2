stdin:1: ,
stdin:3: =
stdin:5: ;
stdin:7: {
stdin:9: }
stdin:11: (
stdin:13: )
stdin:15: [
stdin:17: ]
stdin:19: ||
stdin:22: &&
stdin:25: |
stdin:27: ^
stdin:29: &
stdin:31: !=
stdin:34: ==
stdin:37: >=
stdin:40: >
stdin:42: <=
stdin:45: <
stdin:47: <<
stdin:50: >>
stdin:53: >>>
stdin:57: +
stdin:59: -
stdin:61: /
stdin:63: %
stdin:65: *
stdin:67: !
stdin:69: ~
stdin:71: .
stdin:73: ++
stdin:76: --
stdin:79: ?
stdin:81: :
stdin:83: *=
stdin:86: /=
stdin:89: %=
stdin:92: +=
stdin:95: -=
stdin:98: <<=
stdin:102: >>=
stdin:106: >>>=
stdin:111: &=
stdin:114: |=
stdin:117: ^=
stdin:120: abstract
stdin:129: boolean
stdin:137: break
stdin:143: byte
stdin:148: case
stdin:153: catch
stdin:159: char
stdin:164: class
stdin:170: const
stdin:176: continue
stdin:185: default
stdin:193: do
stdin:196: double
stdin:203: else
stdin:208: extends
stdin:216: final
stdin:222: finally
stdin:230: float
stdin:236: for
stdin:240: goto
stdin:245: if
stdin:248: implements
stdin:259: import
stdin:266: instanceof
stdin:277: int
stdin:281: interface
stdin:291: long
stdin:296: native
stdin:303: new
stdin:307: package
stdin:315: private
stdin:323: protected
stdin:333: public
stdin:340: return
stdin:347: short
stdin:353: static
stdin:360: super
stdin:366: switch
stdin:373: synchronized
stdin:386: this
stdin:391: throw
stdin:397: throws
stdin:404: transient
stdin:414: try
stdin:418: void
stdin:423: volatile
stdin:432: while
stdin:438: }
stdin:438: EOF
