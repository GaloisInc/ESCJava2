****									 ****
**** This file is automatically generated by make_summary; do not hand   ****
**** edit it!								 ****
****									 ****

1:	 Test multiple definitions of the same type in a single cmd-line
	 source file
2:	 Ensure cmd-line source files that contain no types are not
	 problematic
3:	 Test duplicate definitions of a type in two different cmd-line
	 source files.
4:	 Test that indirectly-loaded source files have their package
	 names checked for validity.
5:	 Check that indirectly-loaded source files are checked to make
	 sure they contain the type they are named after.
6:	 Check error reporting for I/O errors when reading source files
7:	 Check handling of missing required Java language classes
8:	 Check references to nonexistant supertypes
9:	 Check that loading the same source file twice does not cause an
	 error
10:	 Check that superclasses from java.lang work properly
11:	 Check that superclasses defined in the same package work
12:	 Check that superclasses referenced via import statements work
13:	 Check use of duplicate import statements
14:	 Check import statements involving nonexistent classes/packages
	    [checking of package accessability intentionally disabled]
15:	 Check ambigous superclass name references
16:	 A strange example from 7.5.4 (p. 123) of Java lang spec
17:	 Check access control of superclass and import references
18:	 Check for detection of cycles
19:	 Make sure can't inherit from final class or interface
20:	 Make sure we generate a warning if make a local class public
21:	 Test misc. bugs uncovered by typechecking JDK 1.2
22:	 Check error messages for inheriting incompatible methods   [disabled]
100:	 Test parsing and type checking of class literals [1.1]
101:	 Test checking of modifiers of type declarations [1.1]
102:	 Test the use of modifiers on local variables & formal parameters [1.1]
103:	 This file tests the various type checks needed specifically for
	 user inserted C.this expressions.                                [1.1]
104:	 Test type checking of initializer bodies (static & instance)     [1.1]
105:	 Test access control between nested classes         [1.1]
106:	 Test scoping of Expr names (includes TypeNames and method
	 invocations)                                                     [1.1]
107:	 Check that references to instance&static members work right      [1.1]
108:	 Test that we check that inner classes members may not be static  [1.1]
109:	 Test that we make sure that a type cannot have the same simple   [1.1]
	 name as an enclosing type
110:	 Test the use of super constructors under 1.1
111:	 Test the use of new under 1.1
112:	 Test that we enforce static contexts correctly in 1.1
113:	 Test anonymous array initializers                                [1.1]
114:	 Test local class declarations contained in static members        [1.1]
115:	 Test anonymous classes declared inside superclass constr. calls  [1.1]
200:	 Test that we use the correct root interface [correction to Java 1.0 spec]
1000:	 Misc tests on labels from Rustan and Jim, implemented by Cormac
1001:	 Generates all flow insensitive type errors and recoverable parser errors
1002:	 Checks casts, conversions and constant expressions
1003:	 Test flow-sensitive checks   [disabled]
1004:	 Checks that erroneous var decls in an if branch are detected
1005:	 Checks that formal paras hide fields
1006:	 Check that equality on arrays works
1007:	 Test loading "spec only" type decl's from nested class files
1100:	 Test binary class file reader.
1101:	 Test binary class file reader.
1102:	 Test binary class file reader with all sources in front end.
1103:	 Test source file reader with all sources in front end.
1104:	 Removed because redundant
1105:	 Not in use
