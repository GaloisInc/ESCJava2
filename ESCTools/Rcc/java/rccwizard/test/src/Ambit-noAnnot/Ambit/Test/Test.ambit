new n. n[]

(* Single move *)
new z. z[new w. w[do out z]]
new w z. z[] | w[do in z]

(* Double moves *)
new z.  z[new w. w[do out z. do in z]]
new w z. z[] | w[do in z. do out z]

(* Hanging moves *)
new n m. n[do in m | m[do out n] ]
new n m p. n[do in m] | m[p[do in n]]

(* Same name, different ambients *)
new n. n[new n. n[new m. m[do out n. do out n]]]
(* Same name, same ambients *)
new n. n[n[new m. m[do out n. do out n]]]

(* Implode *)
new n. n["Death!".#]

(* Entering "itself" *)
new n. n[do in n]
new n a. n[do in n | a[]] | n[]

(* Exiting "itself" *)
new n. n[do out n]
new n. n[n[do out n]]

(* Interleaving *)
new n m.
  n["1"."2"."3"."4"."5"."6"."7"."8"."9"] | 
  m["a"."b"."c"."d"."e"."f"."g"."h"."i"]

(* Down-down agent race *)
new n p q. n[ do in p | do in q ] | p[] | q[]

(* Up-down agent race *)
new n m p. n[ m[ do in p | do out n ] | p[]]

(* Up-up agent race *)
new n m. n[ m[ do out n."a" | do out n."b" ]]

(* Dn-dn ambient race *)
new n m. n[do in m] | m[do in n]

(* Up-dn ambient race *)
new n m p. n[ m[do in p] | p[do out n] ]

(* Up-up ambient race *)
new n m p. n[ m[do out n] | p[do out n] ]


new n m p. n[ do in m | do in p | m[do out n] | p["a"."b".do out n] ]

Liveness problem in some versions where there were missing notifyAll:
Ambient m: Moved out n  @847223230441
Agent of p: a  @847223230437
Ambient n: Moved in m  @847223230488
Agent of p: b  @847223230484
Ambient p: Moved out n  @847223230599
State: root[m[n[<do in p.->] | p[]]]

new n m. n[ n[ m[ do out n."a" | do out n."b" ]]]

new n p m. p[ n[ m[ do out n | do out p ]]]


(* Intersecting down-up-down-up *)
new n m. n[do in m. do out m] | m[go in n. do out n]
new n m. n[do in m. do out m.#] | m[do in n. do out n.#]


new n m p. n[ m[ do in p. do out p | do out n. do in n ] | p[]]

(* Two ambients named n *)
new n m p q. m[do in n] | n[do in p] | n[do in q]

(* do down here or do down there *)
new m p q. m[do in p. do out p | do in q. do out q] | p[] | q[]
Intermittent liveness problem in some versions:
Ambient m: Moved in p  @847282986210
Ambient m: Moved out p  @847282986244
State: root[p[] | q[] | m[do in q.do out q.-]]

new n m.
  n["in m". do in m. "out m". do out m] | 
  m["in n". do in n. "out n". do out n]

------------------------------------------------------

(* Open *)

new w.  do open w | w[]

Parsed: new w.(do open w.-|w[-])
root: Spawning agent w[-]
root: Spawning ambient w
State: root[w[]]

new w a.  do open w | w[a[]]
new w a b.  do open w | w[a[]|b[]]

new w a b c d.  do open w.a[] | b[] | w[c[]|d[]]

new n m p. do open n | n[m[do in p]] | p[]

new n m p. n[do in m] | m[do open n]

new n m p. n[do in m] | m[do open n] | do open m

-------------------------------------------------------

new n. n[say n | ask x.x[]]

new n m p. n[ask x | wait 2.0. do open m | m[say p]]
new n m p. n[ask x | do open m | m[wait 2.0. say p]]

new n m. ask x. n[do in m & x] | say stay | m[]

------------------------------------------------------

(* No cross-chat *)
new n. n[give n | take x]
new n. n[say n | ask x]
new n m p. n[m[say n] | p[ask x]]

(* Give and ask *)
new m. give m | m[ask x]

(* Take and say *)
new m. take x | m[say m]

(* Output reconnects after move *)
new n m p. take x | n[ m[say n | do out n] ]

(* Input reconnects after move *)
new n m p. give n | n[ m[ask x | do out n] ]

(* talk and move *)
new n m p. n[take x. do in x | m[say p]] | p[]
new n m. n[give n | m[ask x. do out x]]

(* move and talk *)
new m. (new n. n[do in m. say n]) | m[take x]

new n m p. p[take x. give x | n[ask x. do in x. ask y] | m[say m. give p]]
new n m p. p[take x. give x | n[ask x. do in x. ask y. do out x. do out y] | m[say m. give p]]

new n m p. p[rec P. take x. give x. P | n[ask x. ask y] | m[say m. say n]]

new n m. give out n | n[ask x. m[do x]]

(new m. give in m | m[give out m]) | (new n. n[ask inm. do inm. ask outm. do outm])

--------------------------------------------------------------

