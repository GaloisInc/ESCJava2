              Review form for
          LNCS proceedings of FMCO 2005

Title: 
Beyond Assertions: Advanced Specification and Verification 
with JML and ESC/Java2

 
Authors: 
Erik Poll, Patrice Chalin, David Cok, Joe Kiniry, and Gary 
T. Leavens
********************************************************
 
Judgment:
 
1) Soundness and validity of contents: Good
 
2) Originality:                        Average
 
3) Clarity of presentation:            Average
   
 
Overall recommendations:               Accept
 
 
********************************************************
> Comments to the authors:
>  
> 
> The paper presents some constructs for specifying object-oriented 
> modules that permit formal modular verification of programs 
> written in modern OO languages. The constructs are frame properties, 
> datagroups, and ghost and model fields. The advantage of the 
> constructs is that they (in contrast to traditionally used 
> assertions, pre- and post-conditions) make it possible to deal 
> with potential problems related to aliasing, class invariants, 
> inheritance, and lack of information hiding.
> 
>  
> The paper is well written and it seems to provide a view on 
> some OO features in a technically sound manner.   Here are some 
> specific comments and questions that can be helpful to 
> further improve the paper.
> 
> The concepts presented in the paper are defined using JML 
> and target Java programming language. It is not clear if the 
> same concepts could be ported to other OO notations. Would 
> the same ideas be suitable for C++? 
> 
> There is no a related work section. Even though there are 
> multiple references throughout the paper to some related 
> projects, it would be more useful to have a separate section 
> that not only points to the related work but also clearly 
> provides the comparative analysis with the content of the 
> paper. For example, the conclusion mentions Spec# and that 
> is shares some language constructs. Does it mean that the
> concepts presented in the paper would work for Spec#? If 
> so, how?  Once again, how does it transfer to other OO 
> notations?

[[[Need to do this...]]]

> Writing: p. 3, last paragraph, last sentence does not parse. 
> What does it mean "escaping from formalism"?

Done

> p. 13, section 6, 1st sentence. Remove "in" in front of 
> java code. 

We rewrote this to clarify.

> p. 14, first paragraph. The alarm could be turned on twice 
> in a row (this statement is repeated twice) Did you mean 
> "turned off" for the second time? The next sentence: ... if 
> one of these times IS (not are) changed ....

Changed as indicated.
