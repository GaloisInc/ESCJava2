//@ refine "BagOfInt.jml-refined";
public class BagOfInt {

  /** Elements. */
  private /*@ spec_public @*/ int[] a;
  /** Number of active elements in a. */
  private /*@ spec_public @*/ int n;

  //@ public invariant n <= a.length;

  /** Initialize to contain input's elements. */
  /*@ also
    @ assignable a, n;
    @ ensures (\forall int i; 0 <= i && i < n;
    @             a[i] == input[i]);
    @ ensures n == input.length;   @*/
  public BagOfInt(int[] input);

  /** Return the multiplicity of i. */
  /*@ also
    @ ensures \result
    @     == (\num_of int j; 0 <= j && j < n;
    @                   a[j] == i);       @*/
  public /*@ pure @*/ int occurrences(int i);

  /** Return and delete the minimum element. */
  /*@ also
    @ requires 0 < n;
    @ assignable n, a; 
    @ ensures n == \old(n-1);
    @ ensures \result 
    @     == \old((\min int j; 0 <= j && j < n;
    @                   a[j]));       @*/
  public int extractMin();
}
