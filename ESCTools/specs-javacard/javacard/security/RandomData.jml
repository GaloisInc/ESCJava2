/*
 * JML/ESC/Java2 specs for the Java Card API 2.2.1
 * by Wojciech Mostowski, woj@cs.ru.nl
 * Copyright (C) 2006 Radboud University Nijmegen, the Netherlands 
 *
 * The Java Card API 2.2.1 itself is Copyright (c) 2000 Sun Microsystems, Inc.
 *
 * These specs are based on Erik Poll's and Engelbert Hubbers' specs
 * for Java Card API 2.1.1, see
 * http://www.sos.cs.ru.nl/research/escjava/esc2jcapi.html
 *
 * $Id: RandomData.jml,v 1.5 2006/05/24 15:38:12 woj Exp $
 *
 */

package javacard.security;

public abstract class RandomData {

  public static final byte ALG_PSEUDO_RANDOM;
  public static final byte ALG_SECURE_RANDOM;

  //@ public static invariant ALG_PSEUDO_RANDOM == 1;
  //@ public static invariant ALG_SECURE_RANDOM == 2;

  //@ public ghost byte _algorithm;
  /*@ public invariant _algorithm == ALG_PSEUDO_RANDOM ||
                _algorithm == ALG_SECURE_RANDOM; @*/

  /*@
     public normal_behavior 
       requires algorithm == ALG_PSEUDO_RANDOM ||
                algorithm == ALG_SECURE_RANDOM;
       ensures \result != null && \result._algorithm == algorithm ;
       assignable \nothing;
  @*/
  public static final RandomData getInstance(byte algorithm)
    throws CryptoException;
  
  /*@
     public normal_behavior 
       requires buffer != null;
       requires offset >= 0 && offset + length <= buffer.length &&
		length >= 0 ;
       ensures true;
       assignable buffer[offset..offset+length-1];
  @*/
  public abstract void generateData(
    byte[] buffer, short offset, short length)
      throws CryptoException;

  /*@
     public normal_behavior 
       requires buffer != null;
       requires offset >= 0 && offset + length <= buffer.length &&
		length >= 0 ;
       ensures true;
       assignable buffer[offset..offset+length-1];
  @*/
  public abstract void setSeed(
    byte[] buffer, short offset, short length);

}
