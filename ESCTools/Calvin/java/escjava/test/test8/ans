switch.java:63: Warning: Possible assertion failure (Assert)
    //@ assert x==2;
        ^
switch.java:74: Warning: Possible assertion failure (Assert)
    //@ assert x==0;
        ^
switch.java:85: Warning: Possible assertion failure (Assert)
    //@ assert x==2;
        ^
3 warnings
sync.java:30: Warning: Possible deadlock (Deadlock)
  synchronized void m4() {
                         ^
sync.java:37: Warning: Possible deadlock (Deadlock)
  static synchronized void m5() {
                                ^
sync.java:41: Warning: Possible deadlock (Deadlock)
  synchronized void m6() {
                         ^
sync.java:42: Warning: Possible assertion failure (Assert)
    /*@ assert \lockset[Sync.class]; */  // no way, Jose
        ^
sync.java:64: Warning: Possible deadlock (Deadlock)
  synchronized int m0() { // fails (Deadlock)
                        ^
sync.java:65: Warning: Possible null dereference (Null)
    synchronized (mu) { // fails (Null)
                 ^
sync.java:65: Warning: Possible deadlock (Deadlock)
    synchronized (mu) { // fails (Null)
                 ^
sync.java:66: Warning: Possible deadlock (Deadlock)
      synchronized (nu) {
                   ^
sync.java:75: Warning: Possible deadlock (Deadlock)
    synchronized (mu) { // fails (Deadlock)
                 ^
sync.java:76: Warning: Possible deadlock (Deadlock)
      synchronized (nu) {
                   ^
sync.java:110: Warning: Possible race condition (Race)
        return i + x;  // fails on reading x
                   ^
Associated declaration is "sync.java", line 57, col 6:
  /*@ monitored */ int x;
      ^
sync.java:128: Warning: Possible race condition (Race)
        w = i + 1; // fails
          ^
Associated declaration is "sync.java", line 60, col 6:
  /*@ monitored_by mu, nu; */ int w;
      ^
sync.java:145: Warning: Possible race condition (Race)
          w = i + 1; // fails
            ^
Associated declaration is "sync.java", line 60, col 6:
  /*@ monitored_by mu, nu; */ int w;
      ^
sync.java:152: Warning: Possible race condition (Race)
    return u;  // fails
           ^
Associated declaration is "sync.java", line 62, col 6:
  /*@ monitored_by this, mu; */ int u;
      ^
sync.java:156: Warning: Possible race condition (Race)
    u = 8;  // fails
      ^
Associated declaration is "sync.java", line 62, col 6:
  /*@ monitored_by this, mu; */ int u;
      ^
sync.java:161: Warning: Possible race condition (Race)
      return w;  // fails
             ^
Associated declaration is "sync.java", line 60, col 6:
  /*@ monitored_by mu, nu; */ int w;
      ^
sync.java:169: Warning: Possible race condition (Race)
        v = 4;  // fails
          ^
Associated declaration is "sync.java", line 61, col 6:
  /*@ monitored_by this; */ int v;
      ^
sync.java:178: Warning: Possible race condition (Race)
        return v;  // fails
               ^
Associated declaration is "sync.java", line 61, col 6:
  /*@ monitored_by this; */ int v;
      ^
18 warnings
SyncConstructor.java:14: Warning: Possible race condition (Race)
    that.x = 5;  // race, since this != that
           ^
Associated declaration is "SyncConstructor.java", line 6, col 6:
  /*@ monitored */ int x;
      ^
SyncConstructor.java:19: Warning: Possible race condition (Race)
    o.y = 5;  // race
        ^
Associated declaration is "SyncConstructor.java", line 7, col 6:
  /*@ monitored_by mu; */ int y;
      ^
SyncConstructor.java:21: Warning: Possible race condition (Race)
    g = 5;  // race, because the special rule applies only to instance ...
      ^
Associated declaration is "SyncConstructor.java", line 8, col 6:
  /*@ monitored_by nu; */ static int g;
      ^
SyncConstructor.java:25: Warning: Possible race condition (Race)
    this.g = 5;  // race (the "this" is irrelevant to static fields)
           ^
Associated declaration is "SyncConstructor.java", line 8, col 6:
  /*@ monitored_by nu; */ static int g;
      ^
SyncConstructor.java:29: Warning: Possible race condition (Race)
    x = 5;       // race
      ^
Associated declaration is "SyncConstructor.java", line 6, col 6:
  /*@ monitored */ int x;
      ^
SyncConstructor.java:30: Warning: Possible race condition (Race)
    that.x = 5;  // race
           ^
Associated declaration is "SyncConstructor.java", line 6, col 6:
  /*@ monitored */ int x;
      ^
SyncConstructor.java:33: Warning: Possible race condition (Race)
    o.y = 6;  // race
        ^
Associated declaration is "SyncConstructor.java", line 7, col 6:
  /*@ monitored_by mu; */ int y;
      ^
SyncConstructor.java:35: Warning: Possible race condition (Race)
    o.y = 5;  // race
        ^
Associated declaration is "SyncConstructor.java", line 7, col 6:
  /*@ monitored_by mu; */ int y;
      ^
SyncConstructor.java:37: Warning: Possible race condition (Race)
    g = 5;  // race
      ^
Associated declaration is "SyncConstructor.java", line 8, col 6:
  /*@ monitored_by nu; */ static int g;
      ^
SyncConstructor.java:45: Warning: Possible race condition (Race)
    k = that.x;  // race, since this != that
             ^
Associated declaration is "SyncConstructor.java", line 6, col 6:
  /*@ monitored */ int x;
      ^
SyncConstructor.java:50: Warning: Possible race condition (Race)
    k = o.y;  // race
          ^
Associated declaration is "SyncConstructor.java", line 7, col 6:
  /*@ monitored_by mu; */ int y;
      ^
SyncConstructor.java:52: Warning: Possible race condition (Race)
    k = g;  // race, because the special rule applies only to instance ...
        ^
Associated declaration is "SyncConstructor.java", line 8, col 6:
  /*@ monitored_by nu; */ static int g;
      ^
SyncConstructor.java:57: Warning: Possible race condition (Race)
    k = this.g;  // race (the "this" is irrelevant to static fields)
             ^
Associated declaration is "SyncConstructor.java", line 8, col 6:
  /*@ monitored_by nu; */ static int g;
      ^
SyncConstructor.java:62: Warning: Possible race condition (Race)
    k = x;       // race
        ^
Associated declaration is "SyncConstructor.java", line 6, col 6:
  /*@ monitored */ int x;
      ^
SyncConstructor.java:63: Warning: Possible race condition (Race)
    k = that.x;  // race
             ^
Associated declaration is "SyncConstructor.java", line 6, col 6:
  /*@ monitored */ int x;
      ^
SyncConstructor.java:66: Warning: Possible race condition (Race)
    k = o.y+1;  // race
          ^
Associated declaration is "SyncConstructor.java", line 7, col 6:
  /*@ monitored_by mu; */ int y;
      ^
SyncConstructor.java:68: Warning: Possible race condition (Race)
    k = o.y;  // race
          ^
Associated declaration is "SyncConstructor.java", line 7, col 6:
  /*@ monitored_by mu; */ int y;
      ^
SyncConstructor.java:70: Warning: Possible race condition (Race)
    k = g;  // race
        ^
Associated declaration is "SyncConstructor.java", line 8, col 6:
  /*@ monitored_by nu; */ static int g;
      ^
18 warnings
