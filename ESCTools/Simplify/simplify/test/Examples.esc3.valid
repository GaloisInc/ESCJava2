(BG_PUSH
(AND
(< 1000000 |INTEGER.LAST|)
(< |INTEGER.FIRST| -1000000)
(DISTINCT |Test54.T.TYPECODE| |Test54.U.TYPECODE| |Test54.V.TYPECODE| |MUTEX.TYPECODE| |TEXT.TYPECODE| |REFANY.TYPECODE| |ROOT.TYPECODE| |NULL.TYPECODE|)
(DISTINCT RETURN EXIT)
(EQ |BOOLEAN.FALSE| |@false|)
(EQ |BOOLEAN.TRUE| |@true|)
(EQ (SUBSET VIRGIN VIRGIN) |@true|)
(EQ (SUBSET ALLOCATED ALLOCATED) |@true|)
(FORALL (v dum) (IMPLIES (EQ (|Is$INTEGER| v dum) |@true|) (AND (>= v |INTEGER.FIRST|) (<= v |INTEGER.LAST|))))
(EQ (SUBTYPE1 |ROOT.TYPECODE| |REFANY.TYPECODE|) |@true|)
(EQ (SUBTYPE1 |MUTEX.TYPECODE| |ROOT.TYPECODE|) |@true|)
(< |INTEGER.FIRST| 0)
(> |INTEGER.LAST| 0)
(NOT (EQ (MEMBER |$NIL| LL) |@true|))
(EQ (|Is$VDCL| |$NIL| VIRGIN) |@true|)
(EQ (|Is$DCL| |$NIL| ALLOCATED) |@true|)
(NEQ |@true| |@false|)
(EQ (|Is$VIRGIN_TYPE| VIRGIN |@DUMMY|) |@true|)
(FORALL (q dummy1) (IMPLIES (EQ (|Is$VIRGIN_TYPE| q dummy1) |@true|) (FORALL (i) (EQ (|Is$BOOLEAN| (select q i |@SPECIAL|) dummy1) |@true|))))
(FORALL (map) (PATS (|Is$VIRGIN_TYPE| map |@DUMMY|)) (IMPLIES (EQ (|Is$VIRGIN_TYPE| map |@DUMMY|) |@true|) (FORALL (ind val) (PATS (store map ind val)) (IMPLIES (EQ (|Is$BOOLEAN| val |@DUMMY|) |@true|) (EQ (|Is$VIRGIN_TYPE| (store map ind val) |@DUMMY|) |@true|)))))
(FORALL (|q$1| dummy) (IMPLIES (EQ (|Is$BOOLEAN| |q$1| dummy) |@true|) (AND (<= 0 (ORD |q$1|)) (< (ORD |q$1|) 2) (EQ (TYPECODE |q$1| |@DUMMY|) |BOOLEAN.TYPECODE|) (OR (EQ |q$1| |BOOLEAN.FALSE|) (EQ |q$1| |BOOLEAN.TRUE|)))))
(FORALL (|q$2| |dummy$1|) (IMPLIES (EQ (|Is$BOOLEAN| |q$2| |dummy$1|) |@true|) (EQ (|Is$ORDINAL| |q$2| |@DUMMY|) |@true|)))
(FORALL (|q$3| |dummy$2|) (IMPLIES (EQ (|Is$CHAR| |q$3| |dummy$2|) |@true|) (AND (<= 0 (ORD |q$3|)) (< (ORD |q$3|) 256) (EQ (TYPECODE |q$3| |@DUMMY|) |CHAR.TYPECODE|))))
(FORALL (|q$4| |dummy$3|) (IMPLIES (EQ (|Is$CHAR| |q$4| |dummy$3|) |@true|) (EQ (|Is$ORDINAL| |q$4| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |TEXT.TYPECODE|) |@true|)
(FORALL (|q$5|) (PATS (|Is$TEXT| |q$5| |@DUMMY|)) (IMPLIES (EQ (|Is$TEXT| |q$5| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$5| |@DUMMY|) |TEXT.TYPECODE|) |@true|)))
(FORALL (|q$6|) (PATS (SUBTYPE (TYPECODE |q$6| |@DUMMY|) |TEXT.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$6| |@DUMMY|) |TEXT.TYPECODE|) |@true|) (EQ (|Is$TEXT| |q$6| |@DUMMY|) |@true|)))
(FORALL (|q$7|) (PATS (|Is$CARDINAL| |q$7| |@DUMMY|)) (IMPLIES (EQ (|Is$CARDINAL| |q$7| |@DUMMY|) |@true|) (AND (<= 0 |q$7|) (<= |q$7| |INTEGER.LAST|) (EQ (|Is$INTEGER| |q$7| |@DUMMY|) |@true|))))
(FORALL (|q$8|) (PATS (|Is$MATHINT| |q$8| |@DUMMY|)) (IMPLIES (AND (<= 0 |q$8|) (<= |q$8| |INTEGER.LAST|) (EQ (|Is$MATHINT| |q$8| |@DUMMY|) |@true|)) (EQ (|Is$CARDINAL| |q$8| |@DUMMY|) |@true|)))
(FORALL (|q$9|) (PATS (|Is$CARDINAL| |q$9| |@DUMMY|)) (IMPLIES (EQ (|Is$CARDINAL| |q$9| |@DUMMY|) |@true|) (EQ (|Is$ORDINAL| |q$9| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |MUTEX.TYPECODE|) |@true|)
(FORALL (|q$10|) (PATS (|Is$MUTEX| |q$10| |@DUMMY|)) (IMPLIES (EQ (|Is$MUTEX| |q$10| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$10| |@DUMMY|) |MUTEX.TYPECODE|) |@true|)))
(FORALL (|q$11|) (PATS (SUBTYPE (TYPECODE |q$11| |@DUMMY|) |MUTEX.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$11| |@DUMMY|) |MUTEX.TYPECODE|) |@true|) (EQ (|Is$MUTEX| |q$11| |@DUMMY|) |@true|)))
(FORALL (|q$12|) (PATS (|Is$MUTEX| |q$12| |@DUMMY|)) (IMPLIES (EQ (|Is$MUTEX| |q$12| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$12| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |REFANY.TYPECODE|) |@true|)
(FORALL (|q$13|) (PATS (|Is$REFANY| |q$13| |@DUMMY|)) (IMPLIES (EQ (|Is$REFANY| |q$13| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$13| |@DUMMY|) |REFANY.TYPECODE|) |@true|)))
(FORALL (|q$14|) (PATS (SUBTYPE (TYPECODE |q$14| |@DUMMY|) |REFANY.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$14| |@DUMMY|) |REFANY.TYPECODE|) |@true|) (EQ (|Is$REFANY| |q$14| |@DUMMY|) |@true|)))
(FORALL (|RESIDUE.Text.Value'| |RESIDUE.Text.Value| |i$1|) (PATS (MPAT (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |i$1| |@ARRAY|) (select (|FUNC.Text.Value| |RESIDUE.Text.Value'|) |i$1| |@ARRAY|))) (IMPLIES (AND (EQ (|Is$TEXT| |i$1| |@DUMMY|) |@true|) (EQ (select |RESIDUE.Text.Value| |i$1| |@ARRAY|) (select |RESIDUE.Text.Value'| |i$1| |@ARRAY|))) (EQ (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |i$1| |@ARRAY|) (select (|FUNC.Text.Value| |RESIDUE.Text.Value'|) |i$1| |@ARRAY|))))
(EQ (SUBTYPE |NULL.TYPECODE| |Test54.V.TYPECODE|) |@true|)
(FORALL (|q$15|) (PATS (|Is$Test54.V| |q$15| |@DUMMY|)) (IMPLIES (EQ (|Is$Test54.V| |q$15| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$15| |@DUMMY|) |Test54.V.TYPECODE|) |@true|)))
(FORALL (|q$16|) (PATS (SUBTYPE (TYPECODE |q$16| |@DUMMY|) |Test54.V.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$16| |@DUMMY|) |Test54.V.TYPECODE|) |@true|) (EQ (|Is$Test54.V| |q$16| |@DUMMY|) |@true|)))
(EQ (|Is$Test54.V.i$MAP| |Test54.V.i| |@DUMMY|) |@true|)
(FORALL (ofm) (IMPLIES (EQ (|Is$Test54.V.i$MAP| ofm |@DUMMY|) |@true|) (FORALL (|q$17|) (EQ (|Is$INTEGER| (select ofm |q$17| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (SUBTYPE1 |Test54.V.TYPECODE| |ROOT.TYPECODE|) |@true|)
(FORALL (|q$18|) (PATS (|Is$Test54.V| |q$18| |@DUMMY|)) (IMPLIES (EQ (|Is$Test54.V| |q$18| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$18| |@DUMMY|) |@true|)))
(FORALL (s) (IMPLIES (NOT (EQ (select ALLOCATED s |@SPECIAL|) |@true|)) (EQ (select |Test54.U.v| s |@OBJECT|) |$NIL|)))
(EQ (SUBTYPE |NULL.TYPECODE| |Test54.U.TYPECODE|) |@true|)
(FORALL (|q$19|) (PATS (|Is$Test54.U| |q$19| |@DUMMY|)) (IMPLIES (EQ (|Is$Test54.U| |q$19| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$19| |@DUMMY|) |Test54.U.TYPECODE|) |@true|)))
(FORALL (|q$20|) (PATS (SUBTYPE (TYPECODE |q$20| |@DUMMY|) |Test54.U.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$20| |@DUMMY|) |Test54.U.TYPECODE|) |@true|) (EQ (|Is$Test54.U| |q$20| |@DUMMY|) |@true|)))
(EQ (|Is$Test54.U.v$MAP| |Test54.U.v| |@DUMMY|) |@true|)
(FORALL (|ofm$1|) (IMPLIES (EQ (|Is$Test54.U.v$MAP| |ofm$1| |@DUMMY|) |@true|) (FORALL (|q$21|) (EQ (|Is$Test54.V| (select |ofm$1| |q$21| |@OBJECT|) |@DUMMY|) |@true|))))
(FORALL (m |q$22|) (PATS (MPAT (|Is$Test54.U| |q$22| |@DUMMY|) (|Is$Test54.U.v$MAP| m |@DUMMY|))) (IMPLIES (AND (EQ (|Is$Test54.U.v$MAP| m |@DUMMY|) |@true|) (EQ (|Is$Test54.U| |q$22| |@DUMMY|) |@true|)) (FORALL (al) (PATS (MPAT (|Is$DCL| |q$22| al) (select m |q$22| |@OBJECT|))) (IMPLIES (EQ (|Is$DCL| |q$22| al) |@true|) (EQ (|Is$DCL| (select m |q$22| |@OBJECT|) al) |@true|)))))
(FORALL (|m$1|) (PATS (|Is$Test54.U.v$MAP| |m$1| |@DUMMY|)) (IMPLIES (EQ (|Is$Test54.U.v$MAP| |m$1| |@DUMMY|) |@true|) (FORALL (r |VIRGIN$1|) (PATS (select |VIRGIN$1| (select |m$1| r |@OBJECT|) |@SPECIAL|)) (IMPLIES (AND (EQ (|Is$Test54.U| r |@DUMMY|) |@true|) (EQ (|Is$VDCL| r |VIRGIN$1|) |@true|)) (NOT (EQ (select |VIRGIN$1| (select |m$1| r |@OBJECT|) |@SPECIAL|) |@true|))))))
(EQ (SUBTYPE1 |Test54.U.TYPECODE| |ROOT.TYPECODE|) |@true|)
(FORALL (|q$23|) (PATS (|Is$Test54.U| |q$23| |@DUMMY|)) (IMPLIES (EQ (|Is$Test54.U| |q$23| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$23| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |Test54.T.TYPECODE|) |@true|)
(FORALL (|q$24|) (PATS (|Is$Test54.T| |q$24| |@DUMMY|)) (IMPLIES (EQ (|Is$Test54.T| |q$24| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$24| |@DUMMY|) |Test54.T.TYPECODE|) |@true|)))
(FORALL (|q$25|) (PATS (SUBTYPE (TYPECODE |q$25| |@DUMMY|) |Test54.T.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$25| |@DUMMY|) |Test54.T.TYPECODE|) |@true|) (EQ (|Is$Test54.T| |q$25| |@DUMMY|) |@true|)))
(FORALL (|q$26|) (PATS (|Is$Test54.T| |q$26| |@DUMMY|)) (IMPLIES (EQ (|Is$Test54.T| |q$26| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$26| |@DUMMY|) |@true|)))
)
)

(IMPLIES
 (NEQ |v$1| |$NIL|)
 (FORALL
     (|Test54.U.v`| |v`| |ALLOCATED`| |LL`| |VIRGIN`|)
   (IMPLIES
    (AND (EQ (|Is$Test54.V| |v$1| |@DUMMY|) |@true|) (EQ (|Is$DCL| |v$1| ALLOCATED) |@true|) (EQ (|Is$VDCL| |v$1| VIRGIN) |@true|))
    (FORALL
	(res)
      (FORALL
	  (|res$1|)
	(IMPLIES
	 (EQ (|Is$Test54.U| (NEW ALLOCATED LL VIRGIN |Test54.U.TYPECODE| |POS$37$11|) |@DUMMY|) |@true|)
	 (FORALL (sss)
	   (IMPLIES
	    (NOT (EQ 
		  (select 
		   (store ALLOCATED
			  (NEW ALLOCATED LL VIRGIN |Test54.U.TYPECODE| |POS$37$11|)
			  |@true|)
		   sss |@SPECIAL|)
		  |@true|))
	    (EQ 
	     (select (store |Test54.U.v| (NEW ALLOCATED LL VIRGIN |Test54.U.TYPECODE| |POS$37$11|) |v$1|) sss |@OBJECT|)
	     |$NIL|)
	    ))))))))
(BG_POP)


;; Exposed a 64-bit dependency.
(BG_PUSH
(AND
(< 1000000 |INTEGER.LAST|)
(< |INTEGER.FIRST| -1000000)
(DISTINCT |TextWriter.T.TYPECODE| |TYPE@39.TYPECODE| |Writer.T.TYPECODE| |Thread.SizedClosure.TYPECODE| |Thread.Closure.TYPECODE| |Thread.Condition.TYPECODE| |Thread.T.TYPECODE| |MUTEX.TYPECODE| |TEXT.TYPECODE| |REFANY.TYPECODE| |ROOT.TYPECODE| |NULL.TYPECODE|)
(DISTINCT |Writer.Failure| |Thread.Alerted| RETURN EXIT)
(FORALL (m1 m2) (NOPATS (|Is$MUTEX| m1 |@DUMMY|) (|Is$MUTEX| m2 |@DUMMY|)) (IMPLIES (AND (EQ (|Is$MUTEX| m2 |@DUMMY|) |@true|) (EQ (|Is$MUTEX| m1 |@DUMMY|) |@true|)) (IMPLIES (AND (NOT (EQ (|Thread.MaxLL| m1) |@true|)) (EQ (|Thread.MaxLL| m2) |@true|) (NEQ m1 |$NIL|) (NEQ m2 |$NIL|)) (EQ (MUT_LT m1 m2) |@true|))))
(EQ |BOOLEAN.FALSE| |@false|)
(EQ |BOOLEAN.TRUE| |@true|)
(EQ (SUBSET VIRGIN VIRGIN) |@true|)
(EQ (SUBSET ALLOCATED ALLOCATED) |@true|)
(FORALL (v dum) (IMPLIES (EQ (|Is$INTEGER| v dum) |@true|) (AND (>= v |INTEGER.FIRST|) (<= v |INTEGER.LAST|))))
(EQ (SUBTYPE1 |ROOT.TYPECODE| |REFANY.TYPECODE|) |@true|)
(EQ (SUBTYPE1 |MUTEX.TYPECODE| |ROOT.TYPECODE|) |@true|)
(< |INTEGER.FIRST| 0)
(> |INTEGER.LAST| 0)
(NOT (EQ (MEMBER |$NIL| LL) |@true|))
(EQ (|Is$VDCL| |$NIL| VIRGIN) |@true|)
(EQ (|Is$DCL| |$NIL| ALLOCATED) |@true|)
(NEQ |@true| |@false|)
(EQ (|Is$VIRGIN_TYPE| VIRGIN |@DUMMY|) |@true|)
(FORALL (q dummy1) (IMPLIES (EQ (|Is$VIRGIN_TYPE| q dummy1) |@true|) (FORALL (i) (EQ (|Is$BOOLEAN| (select q i |@SPECIAL|) dummy1) |@true|))))
(FORALL (map) (PATS (|Is$VIRGIN_TYPE| map |@DUMMY|)) (IMPLIES (EQ (|Is$VIRGIN_TYPE| map |@DUMMY|) |@true|) (FORALL (ind val) (PATS (store map ind val)) (IMPLIES (EQ (|Is$BOOLEAN| val |@DUMMY|) |@true|) (EQ (|Is$VIRGIN_TYPE| (store map ind val) |@DUMMY|) |@true|)))))
(FORALL (|q$1| dummy) (IMPLIES (EQ (|Is$BOOLEAN| |q$1| dummy) |@true|) (AND (<= 0 (ORD |q$1|)) (< (ORD |q$1|) 2) (EQ (TYPECODE |q$1| |@DUMMY|) |BOOLEAN.TYPECODE|) (OR (EQ |q$1| |BOOLEAN.FALSE|) (EQ |q$1| |BOOLEAN.TRUE|)))))
(FORALL (|q$2| |dummy$1|) (IMPLIES (EQ (|Is$BOOLEAN| |q$2| |dummy$1|) |@true|) (EQ (|Is$ORDINAL| |q$2| |@DUMMY|) |@true|)))
(FORALL (|q$3| |dummy$2|) (IMPLIES (EQ (|Is$CHAR| |q$3| |dummy$2|) |@true|) (AND (<= 0 (ORD |q$3|)) (< (ORD |q$3|) 256) (EQ (TYPECODE |q$3| |@DUMMY|) |CHAR.TYPECODE|))))
(FORALL (|q$4| |dummy$3|) (IMPLIES (EQ (|Is$CHAR| |q$4| |dummy$3|) |@true|) (EQ (|Is$ORDINAL| |q$4| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |TEXT.TYPECODE|) |@true|)
(FORALL (|q$5|) (PATS (|Is$TEXT| |q$5| |@DUMMY|)) (IMPLIES (EQ (|Is$TEXT| |q$5| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$5| |@DUMMY|) |TEXT.TYPECODE|) |@true|)))
(FORALL (|q$6|) (PATS (SUBTYPE (TYPECODE |q$6| |@DUMMY|) |TEXT.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$6| |@DUMMY|) |TEXT.TYPECODE|) |@true|) (EQ (|Is$TEXT| |q$6| |@DUMMY|) |@true|)))
(FORALL (|q$7|) (PATS (|Is$CARDINAL| |q$7| |@DUMMY|)) (IMPLIES (EQ (|Is$CARDINAL| |q$7| |@DUMMY|) |@true|) (AND (<= 0 |q$7|) (<= |q$7| |INTEGER.LAST|) (EQ (|Is$INTEGER| |q$7| |@DUMMY|) |@true|))))
(FORALL (|q$8|) (PATS (|Is$MATHINT| |q$8| |@DUMMY|)) (IMPLIES (AND (<= 0 |q$8|) (<= |q$8| |INTEGER.LAST|) (EQ (|Is$MATHINT| |q$8| |@DUMMY|) |@true|)) (EQ (|Is$CARDINAL| |q$8| |@DUMMY|) |@true|)))
(FORALL (|q$9|) (PATS (|Is$CARDINAL| |q$9| |@DUMMY|)) (IMPLIES (EQ (|Is$CARDINAL| |q$9| |@DUMMY|) |@true|) (EQ (|Is$ORDINAL| |q$9| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |MUTEX.TYPECODE|) |@true|)
(FORALL (|q$10|) (PATS (|Is$MUTEX| |q$10| |@DUMMY|)) (IMPLIES (EQ (|Is$MUTEX| |q$10| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$10| |@DUMMY|) |MUTEX.TYPECODE|) |@true|)))
(FORALL (|q$11|) (PATS (SUBTYPE (TYPECODE |q$11| |@DUMMY|) |MUTEX.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$11| |@DUMMY|) |MUTEX.TYPECODE|) |@true|) (EQ (|Is$MUTEX| |q$11| |@DUMMY|) |@true|)))
(FORALL (|q$12|) (PATS (|Is$MUTEX| |q$12| |@DUMMY|)) (IMPLIES (EQ (|Is$MUTEX| |q$12| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$12| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |REFANY.TYPECODE|) |@true|)
(FORALL (|q$13|) (PATS (|Is$REFANY| |q$13| |@DUMMY|)) (IMPLIES (EQ (|Is$REFANY| |q$13| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$13| |@DUMMY|) |REFANY.TYPECODE|) |@true|)))
(FORALL (|q$14|) (PATS (SUBTYPE (TYPECODE |q$14| |@DUMMY|) |REFANY.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$14| |@DUMMY|) |REFANY.TYPECODE|) |@true|) (EQ (|Is$REFANY| |q$14| |@DUMMY|) |@true|)))
(FORALL (|RESIDUE.Text.Value'| |RESIDUE.Text.Value| |i$1|) (PATS (MPAT (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |i$1| |@ARRAY|) (select (|FUNC.Text.Value| |RESIDUE.Text.Value'|) |i$1| |@ARRAY|))) (IMPLIES (AND (EQ (|Is$TEXT| |i$1| |@DUMMY|) |@true|) (EQ (select |RESIDUE.Text.Value| |i$1| |@ARRAY|) (select |RESIDUE.Text.Value'| |i$1| |@ARRAY|))) (EQ (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |i$1| |@ARRAY|) (select (|FUNC.Text.Value| |RESIDUE.Text.Value'|) |i$1| |@ARRAY|))))
(FORALL (|RESIDUE.Writer.state'| |RESIDUE.Writer.state| |i$2|) (PATS (MPAT (select (|FUNC.Writer.state| |RESIDUE.Writer.state|) |i$2| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'|) |i$2| |@OBJECT|))) (IMPLIES (AND (EQ (|Is$Writer.T| |i$2| |@DUMMY|) |@true|) (EQ (select |RESIDUE.Writer.state| |i$2| |@OBJECT|) (select |RESIDUE.Writer.state'| |i$2| |@OBJECT|))) (EQ (select (|FUNC.Writer.state| |RESIDUE.Writer.state|) |i$2| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'|) |i$2| |@OBJECT|))))
(FORALL (|RESIDUE.Writer.valid'| |RESIDUE.Writer.valid| |i$3|) (PATS (MPAT (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid|) |i$3| |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'|) |i$3| |@OBJECT|))) (IMPLIES (AND (EQ (|Is$Writer.T| |i$3| |@DUMMY|) |@true|) (EQ (select |RESIDUE.Writer.valid| |i$3| |@OBJECT|) (select |RESIDUE.Writer.valid'| |i$3| |@OBJECT|))) (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid|) |i$3| |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'|) |i$3| |@OBJECT|))))
(EQ (SUBTYPE |NULL.TYPECODE| |Thread.T.TYPECODE|) |@true|)
(FORALL (|q$15|) (PATS (|Is$Thread.T| |q$15| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.T| |q$15| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$15| |@DUMMY|) |Thread.T.TYPECODE|) |@true|)))
(FORALL (|q$16|) (PATS (SUBTYPE (TYPECODE |q$16| |@DUMMY|) |Thread.T.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$16| |@DUMMY|) |Thread.T.TYPECODE|) |@true|) (EQ (|Is$Thread.T| |q$16| |@DUMMY|) |@true|)))
(FORALL (|q$17|) (PATS (|Is$Thread.T| |q$17| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.T| |q$17| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$17| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |Thread.Condition.TYPECODE|) |@true|)
(FORALL (|q$18|) (PATS (|Is$Thread.Condition| |q$18| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.Condition| |q$18| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$18| |@DUMMY|) |Thread.Condition.TYPECODE|) |@true|)))
(FORALL (|q$19|) (PATS (SUBTYPE (TYPECODE |q$19| |@DUMMY|) |Thread.Condition.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$19| |@DUMMY|) |Thread.Condition.TYPECODE|) |@true|) (EQ (|Is$Thread.Condition| |q$19| |@DUMMY|) |@true|)))
(FORALL (|q$20|) (PATS (|Is$Thread.Condition| |q$20| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.Condition| |q$20| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$20| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |Thread.Closure.TYPECODE|) |@true|)
(FORALL (|q$21|) (PATS (|Is$Thread.Closure| |q$21| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.Closure| |q$21| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$21| |@DUMMY|) |Thread.Closure.TYPECODE|) |@true|)))
(FORALL (|q$22|) (PATS (SUBTYPE (TYPECODE |q$22| |@DUMMY|) |Thread.Closure.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$22| |@DUMMY|) |Thread.Closure.TYPECODE|) |@true|) (EQ (|Is$Thread.Closure| |q$22| |@DUMMY|) |@true|)))
(EQ (SUBTYPE1 |Thread.Closure.TYPECODE| |ROOT.TYPECODE|) |@true|)
(FORALL (|q$23|) (PATS (|Is$Thread.Closure| |q$23| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.Closure| |q$23| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$23| |@DUMMY|) |@true|)))
(FORALL (s) (IMPLIES (NOT (EQ (select ALLOCATED s |@SPECIAL|) |@true|)) (EQ (select |Thread.SizedClosure.stackSize| s |@OBJECT|) 0)))
(EQ (|Is$INTEGER| 0 |@DUMMY|) |@true|)
(EQ (SUBTYPE |NULL.TYPECODE| |Thread.SizedClosure.TYPECODE|) |@true|)
(FORALL (|q$24|) (PATS (|Is$Thread.SizedClosure| |q$24| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.SizedClosure| |q$24| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$24| |@DUMMY|) |Thread.SizedClosure.TYPECODE|) |@true|)))
(FORALL (|q$25|) (PATS (SUBTYPE (TYPECODE |q$25| |@DUMMY|) |Thread.SizedClosure.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$25| |@DUMMY|) |Thread.SizedClosure.TYPECODE|) |@true|) (EQ (|Is$Thread.SizedClosure| |q$25| |@DUMMY|) |@true|)))
(EQ (|Is$Thread.SizedClosure.stackSize$MAP| |Thread.SizedClosure.stackSize| |@DUMMY|) |@true|)
(FORALL (ofm) (IMPLIES (EQ (|Is$Thread.SizedClosure.stackSize$MAP| ofm |@DUMMY|) |@true|) (FORALL (|q$26|) (EQ (|Is$CARDINAL| (select ofm |q$26| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (SUBTYPE1 |Thread.SizedClosure.TYPECODE| |Thread.Closure.TYPECODE|) |@true|)
(FORALL (|q$27|) (PATS (|Is$Thread.SizedClosure| |q$27| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.SizedClosure| |q$27| |@DUMMY|) |@true|) (EQ (|Is$Thread.Closure| |q$27| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |Writer.T.TYPECODE|) |@true|)
(FORALL (|q$28|) (PATS (|Is$Writer.T| |q$28| |@DUMMY|)) (IMPLIES (EQ (|Is$Writer.T| |q$28| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$28| |@DUMMY|) |Writer.T.TYPECODE|) |@true|)))
(FORALL (|q$29|) (PATS (SUBTYPE (TYPECODE |q$29| |@DUMMY|) |Writer.T.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$29| |@DUMMY|) |Writer.T.TYPECODE|) |@true|) (EQ (|Is$Writer.T| |q$29| |@DUMMY|) |@true|)))
(FORALL (|q$30|) (PATS (|Is$Writer.T| |q$30| |@DUMMY|)) (IMPLIES (EQ (|Is$Writer.T| |q$30| |@DUMMY|) |@true|) (EQ (|Is$MUTEX| |q$30| |@DUMMY|) |@true|)))
(FORALL (|q$31| |dummy1$1|) (IMPLIES (EQ (|Is$TYPE@54| |q$31| |dummy1$1|) |@true|) (FORALL (|i$4|) (EQ (|Is$CHAR| (select |q$31| |i$4| |@ARRAY|) |dummy1$1|) |@true|))))
(FORALL (|map$1| start num) (PATS (|Is$TYPE@54| (SUBARRAY |map$1| start num) |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@54| |map$1| |@DUMMY|) |@true|) (EQ (|Is$TYPE@54| (SUBARRAY |map$1| start num) |@DUMMY|) |@true|)))
(FORALL (|map$2|) (PATS (|Is$TYPE@54| |map$2| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@54| |map$2| |@DUMMY|) |@true|) (FORALL (|start$1| |num$1| map2) (PATS (storeSub |map$2| |start$1| |num$1| map2)) (IMPLIES (EQ (|Is$TYPE@54| map2 |@DUMMY|) |@true|) (EQ (|Is$TYPE@54| (storeSub |map$2| |start$1| |num$1| map2) |@DUMMY|) |@true|)))))
(FORALL (|map$3|) (PATS (|Is$TYPE@54| |map$3| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@54| |map$3| |@DUMMY|) |@true|) (FORALL (|ind$1| |val$1|) (PATS (store |map$3| |ind$1| |val$1|)) (IMPLIES (EQ (|Is$CHAR| |val$1| |@DUMMY|) |@true|) (EQ (|Is$TYPE@54| (store |map$3| |ind$1| |val$1|) |@DUMMY|) |@true|)))))
(EQ (|Is$TEXT| |Writer.EOL| |@DUMMY|) |@true|)
(EQ (|Is$DCL| |Writer.EOL| ALLOCATED) |@true|)
(EQ (|Is$VDCL| |Writer.EOL| VIRGIN) |@true|)
(NOT (EQ (select VIRGIN |Writer.EOL| |@SPECIAL|) |@true|))
(EQ (SUBTYPE |Writer.T.TYPECODE| |MUTEX.TYPECODE|) |@true|)
(EQ (SUBTYPE |NULL.TYPECODE| |TYPE@39.TYPECODE|) |@true|)
(FORALL (|q$32|) (PATS (|Is$TYPE@39| |q$32| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@39| |q$32| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$32| |@DUMMY|) |TYPE@39.TYPECODE|) |@true|)))
(FORALL (|q$33|) (PATS (SUBTYPE (TYPECODE |q$33| |@DUMMY|) |TYPE@39.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$33| |@DUMMY|) |TYPE@39.TYPECODE|) |@true|) (EQ (|Is$TYPE@39| |q$33| |@DUMMY|) |@true|)))
(EQ (SUBTYPE1 |TYPE@39.TYPECODE| |Writer.T.TYPECODE|) |@true|)
(FORALL (|q$34|) (PATS (|Is$TYPE@39| |q$34| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@39| |q$34| |@DUMMY|) |@true|) (EQ (|Is$Writer.T| |q$34| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |TextWriter.T.TYPECODE|) |@true|)
(FORALL (|q$35|) (PATS (|Is$TextWriter.T| |q$35| |@DUMMY|)) (IMPLIES (EQ (|Is$TextWriter.T| |q$35| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$35| |@DUMMY|) |TextWriter.T.TYPECODE|) |@true|)))
(FORALL (|q$36|) (PATS (SUBTYPE (TYPECODE |q$36| |@DUMMY|) |TextWriter.T.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$36| |@DUMMY|) |TextWriter.T.TYPECODE|) |@true|) (EQ (|Is$TextWriter.T| |q$36| |@DUMMY|) |@true|)))
(FORALL (|q$37|) (PATS (|Is$TextWriter.T| |q$37| |@DUMMY|)) (IMPLIES (EQ (|Is$TextWriter.T| |q$37| |@DUMMY|) |@true|) (EQ (|Is$TYPE@39| |q$37| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |TextWriter.T.TYPECODE| |TYPE@39.TYPECODE|) |@true|)
(FORALL (|q$38| |dummy1$2|) (IMPLIES (EQ (|Is$TYPE@58| |q$38| |dummy1$2|) |@true|) (FORALL (|i$5|) (EQ (|Is$INTEGER| (select |q$38| |i$5| |@ARRAY|) |dummy1$2|) |@true|))))
(FORALL (|map$4| |start$2| |num$2|) (PATS (|Is$TYPE@58| (SUBARRAY |map$4| |start$2| |num$2|) |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@58| |map$4| |@DUMMY|) |@true|) (EQ (|Is$TYPE@58| (SUBARRAY |map$4| |start$2| |num$2|) |@DUMMY|) |@true|)))
(FORALL (|map$5|) (PATS (|Is$TYPE@58| |map$5| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@58| |map$5| |@DUMMY|) |@true|) (FORALL (|start$3| |num$3| |map2$1|) (PATS (storeSub |map$5| |start$3| |num$3| |map2$1|)) (IMPLIES (EQ (|Is$TYPE@58| |map2$1| |@DUMMY|) |@true|) (EQ (|Is$TYPE@58| (storeSub |map$5| |start$3| |num$3| |map2$1|) |@DUMMY|) |@true|)))))
(FORALL (|map$6|) (PATS (|Is$TYPE@58| |map$6| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@58| |map$6| |@DUMMY|) |@true|) (FORALL (|ind$2| |val$2|) (PATS (store |map$6| |ind$2| |val$2|)) (IMPLIES (EQ (|Is$INTEGER| |val$2| |@DUMMY|) |@true|) (EQ (|Is$TYPE@58| (store |map$6| |ind$2| |val$2|) |@DUMMY|) |@true|)))))
)
)

(FORALL (|RESIDUE.Writer.valid`| |RESIDUE.Text.Value`| |RESIDUE.Writer.state`| |a`| |ALLOCATED`| |LL`| |VIRGIN`|) (OR (NOT (EQ (|Is$TYPE@58| a |@DUMMY|) |@true|)) (FORALL (wr) (IMPLIES (AND (EQ (|Is$TextWriter.T| wr |@DUMMY|) |@true|) (EQ (|Is$DCL| wr ALLOCATED) |@true|) (EQ (|Is$VDCL| wr VIRGIN) |@true|)) (FORALL (res) (FORALL (|res$1|) (IMPLIES (EQ (|Is$TextWriter.T| (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) |@DUMMY|) |@true|) (AND (LBL |ERROR.deref.7.29| (NEQ (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) |$NIL|)) (FORALL (|EXCEPTION.code| |RES(TextWriter.init@7.29)| self |ALLOCATED$1| |ALLOCATED'| |RESIDUE.Writer.state$2| |RESIDUE.Writer.state'$1| |RESIDUE.Writer.valid$2| |RESIDUE.Writer.valid'$1|) (AND (LBL |ERROR.pre.7.29| TRUE) (IMPLIES (AND (IMPLIES (EQ |EXCEPTION.code| RETURN) (AND (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) |@OBJECT|) |@true|) (EQ (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) |RES(TextWriter.init@7.29)|))) (EQ |EXCEPTION.code| RETURN) (FORALL (s0) (PATS (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid$1|) s0 |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) s0 |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| s0 |@DUMMY|) |@true|) (EQ (|Is$DCL| s0 (store ALLOCATED (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) |@true|)) |@true|) (EQ (|Is$VDCL| s0 VIRGIN) |@true|) (NEQ s0 |$NIL|)) (OR (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid$1|) s0 |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) s0 |@OBJECT|)) (EQ s0 (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|))))) (FORALL (|s0$1|) (PATS (select (|FUNC.Writer.state| |RESIDUE.Writer.state$1|) |s0$1| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$1|) |s0$1| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$1| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$1| (store ALLOCATED (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) |@true|)) |@true|) (EQ (|Is$VDCL| |s0$1| VIRGIN) |@true|) (NEQ |s0$1| |$NIL|)) (OR (EQ (select (|FUNC.Writer.state| |RESIDUE.Writer.state$1|) |s0$1| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$1|) |s0$1| |@OBJECT|)) (EQ |s0$1| (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|))))) (EQ |RESIDUE.Writer.valid'$1| (store |RESIDUE.Writer.valid$1| (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) (select |RESIDUE.Writer.valid'$1| (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) |@OBJECT|))) (EQ (select |RESIDUE.Writer.valid'$1| |$NIL| |@OBJECT|) (select |RESIDUE.Writer.valid$1| |$NIL| |@OBJECT|)) (EQ |RESIDUE.Writer.state'$1| (store |RESIDUE.Writer.state$1| (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) (select |RESIDUE.Writer.state'$1| (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) |@OBJECT|))) (EQ (select |RESIDUE.Writer.state'$1| |$NIL| |@OBJECT|) (select |RESIDUE.Writer.state$1| |$NIL| |@OBJECT|)) (EQ (SUBSET (store ALLOCATED (NEW ALLOCATED LL VIRGIN |TextWriter.T.TYPECODE| |POS$7$12|) |@true|) |ALLOCATED'|) |@true|) TRUE (EQ (|Is$NULL| |RESIDUE.Writer.state'$1| |@DUMMY|) |@true|) (EQ (|Is$NULL| |RESIDUE.Writer.valid'$1| |@DUMMY|) |@true|) (EQ (|Is$TextWriter.T| |RES(TextWriter.init@7.29)| |@DUMMY|) |@true|) (EQ (|Is$DCL| |RES(TextWriter.init@7.29)| |ALLOCATED'|) |@true|) (EQ (|Is$VDCL| |RES(TextWriter.init@7.29)| VIRGIN) |@true|)) (AND (FORALL (|i$6|) (OR (NOT (<= 0 (- (NUMBER (ADDR a) 0) 1))) (FORALL (|ALLOCATED$2|) (LBL |ERROR.loop-init.8.4| (AND (<= 0 0) (<= 0 (+ (- (NUMBER (ADDR a) 0) 1) 1))))))) (FORALL (|i$6|) (OR (NOT (<= 0 (- (NUMBER (ADDR a) 0) 1))) (FORALL (|ALLOCATED$2|) (OR (NOT (<= 0 (- (NUMBER (ADDR a) 0) 1))) (FORALL (|res$2|) (AND (LBL |ERROR.index.9.26| (AND (<= 0 0) (< 0 (NUMBER (ADDR a) 0)))) (FORALL (|EXCEPTION.code$1| |wr$1| |i$7| |ALLOCATED$3| |ALLOCATED'$1| |RESIDUE.Writer.state$3| |RESIDUE.Writer.state'$2|) (AND (LBL |ERROR.pre.9.12| (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |RES(TextWriter.init@7.29)| |@OBJECT|) |@true|)) (IMPLIES (AND (OR (EQ |EXCEPTION.code$1| RETURN) (EQ |EXCEPTION.code$1| |Writer.Failure|) (EQ |EXCEPTION.code$1| |Thread.Alerted|)) (FORALL (|s0$2|) (PATS (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$1|) |s0$2| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$2|) |s0$2| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$2| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$2| |ALLOCATED'|) |@true|) (EQ (|Is$VDCL| |s0$2| VIRGIN) |@true|) (NEQ |s0$2| |$NIL|)) (OR (EQ (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$1|) |s0$2| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$2|) |s0$2| |@OBJECT|)) (EQ |s0$2| |RES(TextWriter.init@7.29)|)))) (EQ |RESIDUE.Writer.state'$2| (store |RESIDUE.Writer.state'$1| |RES(TextWriter.init@7.29)| (select |RESIDUE.Writer.state'$2| |RES(TextWriter.init@7.29)| |@OBJECT|))) (EQ (select |RESIDUE.Writer.state'$2| |$NIL| |@OBJECT|) (select |RESIDUE.Writer.state'$1| |$NIL| |@OBJECT|)) (EQ (SUBSET |ALLOCATED'| |ALLOCATED'$1|) |@true|) TRUE (EQ (|Is$NULL| |RESIDUE.Writer.state'$2| |@DUMMY|) |@true|)) (AND (OR (NOT (EQ |EXCEPTION.code$1| RETURN)) (FORALL (|res$3|) (FORALL (|res$4|) (OR (NOT (AND (NEQ |res$4| |$NIL|) (EQ (select |ALLOCATED'$1| |res$4| |@SPECIAL|) |@true|) (EQ (|Is$TEXT| |res$4| |@DUMMY|) |@true|) (EQ (NUMBER (select (|FUNC.Text.Value| |RESIDUE.Text.Value$1|) |res$4| |@ARRAY|) 0) 2) (EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value$1|) |res$4| |@ARRAY|) 0 |@ARRAY|) (VAL 92 |CHAR.TYPECODE|)) (EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value$1|) |res$4| |@ARRAY|) 1 |@ARRAY|) (VAL 110 |CHAR.TYPECODE|)))) (FORALL (|EXCEPTION.code$2| |wr$2| t |ALLOCATED$4| |ALLOCATED'$2| |RESIDUE.Writer.state$4| |RESIDUE.Writer.state'$3|) (AND (LBL |ERROR.pre.10.12| (AND (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |RES(TextWriter.init@7.29)| |@OBJECT|) |@true|) (NEQ |res$4| |$NIL|))) (IMPLIES (AND (OR (EQ |EXCEPTION.code$2| RETURN) (EQ |EXCEPTION.code$2| |Writer.Failure|) (EQ |EXCEPTION.code$2| |Thread.Alerted|)) (FORALL (|s0$3|) (PATS (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$2|) |s0$3| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$3|) |s0$3| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$3| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$3| |ALLOCATED'$1|) |@true|) (EQ (|Is$VDCL| |s0$3| VIRGIN) |@true|) (NEQ |s0$3| |$NIL|)) (OR (EQ (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$2|) |s0$3| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$3|) |s0$3| |@OBJECT|)) (EQ |s0$3| |RES(TextWriter.init@7.29)|)))) (EQ |RESIDUE.Writer.state'$3| (store |RESIDUE.Writer.state'$2| |RES(TextWriter.init@7.29)| (select |RESIDUE.Writer.state'$3| |RES(TextWriter.init@7.29)| |@OBJECT|))) (EQ (select |RESIDUE.Writer.state'$3| |$NIL| |@OBJECT|) (select |RESIDUE.Writer.state'$2| |$NIL| |@OBJECT|)) (EQ (SUBSET |ALLOCATED'$1| |ALLOCATED'$2|) |@true|) TRUE (EQ (|Is$NULL| |RESIDUE.Writer.state'$3| |@DUMMY|) |@true|)) (AND (OR (NOT (EQ |EXCEPTION.code$2| RETURN)) (<= (+ 0 1) (- (NUMBER (ADDR a) 0) 1)) (FORALL (|res$5|) (FORALL (|EXCEPTION.code$3| |RES(TextWriter.ToText@12.21)| |wr$3| |ALLOCATED$5| |ALLOCATED'$3| |RESIDUE.Writer.state$5| |RESIDUE.Writer.state'$4|) (AND (LBL |ERROR.pre.12.21| (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |RES(TextWriter.init@7.29)| |@OBJECT|) |@true|)) (IMPLIES (AND (EQ |EXCEPTION.code$3| RETURN) (FORALL (|s0$4|) (PATS (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$3|) |s0$4| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$4|) |s0$4| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$4| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$4| |ALLOCATED'$2|) |@true|) (EQ (|Is$VDCL| |s0$4| VIRGIN) |@true|) (NEQ |s0$4| |$NIL|)) (OR (EQ (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$3|) |s0$4| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$4|) |s0$4| |@OBJECT|)) (EQ |s0$4| |RES(TextWriter.init@7.29)|)))) (EQ |RESIDUE.Writer.state'$4| (store |RESIDUE.Writer.state'$3| |RES(TextWriter.init@7.29)| (select |RESIDUE.Writer.state'$4| |RES(TextWriter.init@7.29)| |@OBJECT|))) (EQ (select |RESIDUE.Writer.state'$4| |$NIL| |@OBJECT|) (select |RESIDUE.Writer.state'$3| |$NIL| |@OBJECT|)) (EQ (SUBSET |ALLOCATED'$2| |ALLOCATED'$3|) |@true|) TRUE (EQ (|Is$NULL| |RESIDUE.Writer.state'$4| |@DUMMY|) |@true|) (EQ (|Is$TEXT| |RES(TextWriter.ToText@12.21)| |@DUMMY|) |@true|) (EQ (|Is$DCL| |RES(TextWriter.ToText@12.21)| |ALLOCATED'$3|) |@true|) (EQ (|Is$VDCL| |RES(TextWriter.ToText@12.21)| VIRGIN) |@true|)) (AND (LBL |ERROR.post.5.0.RAISES| (OR (EQ RETURN RETURN) (EQ RETURN |Writer.Failure|) (EQ RETURN |Thread.Alerted|))) (LBL |ERROR.inv.5.0| TRUE) (LBL |ERROR.mod.5.10.RESIDUE.Writer.state| (FORALL (|s0$5|) (PATS (select |RESIDUE.Writer.state'$4| |s0$5| |@OBJECT|) (select |RESIDUE.Writer.state$1| |s0$5| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$5| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$5| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$5| VIRGIN) |@true|) (NEQ |s0$5| |$NIL|)) (EQ (select |RESIDUE.Writer.state$1| |s0$5| |@OBJECT|) (select |RESIDUE.Writer.state'$4| |s0$5| |@OBJECT|))))) (LBL |ERROR.mod.5.10.Writer.state| (FORALL (|s0$6|) (PATS (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$4|) |s0$6| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state$1|) |s0$6| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$6| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$6| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$6| VIRGIN) |@true|) (NEQ |s0$6| |$NIL|)) (EQ (select (|FUNC.Writer.state| |RESIDUE.Writer.state$1|) |s0$6| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$4|) |s0$6| |@OBJECT|))))) (LBL |ERROR.mod.5.10.RESIDUE.Writer.valid| (FORALL (|s0$7|) (PATS (select |RESIDUE.Writer.valid'$1| |s0$7| |@OBJECT|) (select |RESIDUE.Writer.valid$1| |s0$7| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$7| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$7| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$7| VIRGIN) |@true|) (NEQ |s0$7| |$NIL|)) (EQ (select |RESIDUE.Writer.valid$1| |s0$7| |@OBJECT|) (select |RESIDUE.Writer.valid'$1| |s0$7| |@OBJECT|))))) (LBL |ERROR.mod.5.10.Writer.valid| (FORALL (|s0$8|) (PATS (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |s0$8| |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid$1|) |s0$8| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$8| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$8| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$8| VIRGIN) |@true|) (NEQ |s0$8| |$NIL|)) (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid$1|) |s0$8| |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |s0$8| |@OBJECT|))))))))))) (OR (EQ |EXCEPTION.code$2| RETURN) (EQ |EXCEPTION.code$2| EXIT) (AND (LBL |ERROR.post.5.0.RAISES| (OR (EQ |EXCEPTION.code$2| RETURN) (EQ |EXCEPTION.code$2| |Writer.Failure|) (EQ |EXCEPTION.code$2| |Thread.Alerted|))) (LBL |ERROR.inv.5.0| TRUE) (LBL |ERROR.mod.5.10.RESIDUE.Writer.state| (FORALL (|s0$5|) (PATS (select |RESIDUE.Writer.state'$3| |s0$5| |@OBJECT|) (select |RESIDUE.Writer.state$1| |s0$5| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$5| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$5| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$5| VIRGIN) |@true|) (NEQ |s0$5| |$NIL|)) (EQ (select |RESIDUE.Writer.state$1| |s0$5| |@OBJECT|) (select |RESIDUE.Writer.state'$3| |s0$5| |@OBJECT|))))) (LBL |ERROR.mod.5.10.Writer.state| (FORALL (|s0$6|) (PATS (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$3|) |s0$6| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state$1|) |s0$6| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$6| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$6| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$6| VIRGIN) |@true|) (NEQ |s0$6| |$NIL|)) (EQ (select (|FUNC.Writer.state| |RESIDUE.Writer.state$1|) |s0$6| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$3|) |s0$6| |@OBJECT|))))) (LBL |ERROR.mod.5.10.RESIDUE.Writer.valid| (FORALL (|s0$7|) (PATS (select |RESIDUE.Writer.valid'$1| |s0$7| |@OBJECT|) (select |RESIDUE.Writer.valid$1| |s0$7| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$7| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$7| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$7| VIRGIN) |@true|) (NEQ |s0$7| |$NIL|)) (EQ (select |RESIDUE.Writer.valid$1| |s0$7| |@OBJECT|) (select |RESIDUE.Writer.valid'$1| |s0$7| |@OBJECT|))))) (LBL |ERROR.mod.5.10.Writer.valid| (FORALL (|s0$8|) (PATS (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |s0$8| |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid$1|) |s0$8| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$8| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$8| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$8| VIRGIN) |@true|) (NEQ |s0$8| |$NIL|)) (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid$1|) |s0$8| |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |s0$8| |@OBJECT|))))))))))))))) (OR (EQ |EXCEPTION.code$1| RETURN) (EQ |EXCEPTION.code$1| EXIT) (AND (LBL |ERROR.post.5.0.RAISES| (OR (EQ |EXCEPTION.code$1| RETURN) (EQ |EXCEPTION.code$1| |Writer.Failure|) (EQ |EXCEPTION.code$1| |Thread.Alerted|))) (LBL |ERROR.inv.5.0| TRUE) (LBL |ERROR.mod.5.10.RESIDUE.Writer.state| (FORALL (|s0$5|) (PATS (select |RESIDUE.Writer.state'$2| |s0$5| |@OBJECT|) (select |RESIDUE.Writer.state$1| |s0$5| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$5| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$5| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$5| VIRGIN) |@true|) (NEQ |s0$5| |$NIL|)) (EQ (select |RESIDUE.Writer.state$1| |s0$5| |@OBJECT|) (select |RESIDUE.Writer.state'$2| |s0$5| |@OBJECT|))))) (LBL |ERROR.mod.5.10.Writer.state| (FORALL (|s0$6|) (PATS (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$2|) |s0$6| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state$1|) |s0$6| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$6| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$6| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$6| VIRGIN) |@true|) (NEQ |s0$6| |$NIL|)) (EQ (select (|FUNC.Writer.state| |RESIDUE.Writer.state$1|) |s0$6| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$2|) |s0$6| |@OBJECT|))))) (LBL |ERROR.mod.5.10.RESIDUE.Writer.valid| (FORALL (|s0$7|) (PATS (select |RESIDUE.Writer.valid'$1| |s0$7| |@OBJECT|) (select |RESIDUE.Writer.valid$1| |s0$7| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$7| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$7| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$7| VIRGIN) |@true|) (NEQ |s0$7| |$NIL|)) (EQ (select |RESIDUE.Writer.valid$1| |s0$7| |@OBJECT|) (select |RESIDUE.Writer.valid'$1| |s0$7| |@OBJECT|))))) (LBL |ERROR.mod.5.10.Writer.valid| (FORALL (|s0$8|) (PATS (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |s0$8| |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid$1|) |s0$8| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$8| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$8| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$8| VIRGIN) |@true|) (NEQ |s0$8| |$NIL|)) (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid$1|) |s0$8| |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |s0$8| |@OBJECT|))))))))))))))))) (FORALL (|i$6|) (OR (<= 0 (- (NUMBER (ADDR a) 0) 1)) (FORALL (|res$5|) (FORALL (|EXCEPTION.code$3| |RES(TextWriter.ToText@12.21)| |wr$3| |ALLOCATED$5| |ALLOCATED'$3| |RESIDUE.Writer.state$5| |RESIDUE.Writer.state'$4|) (AND (LBL |ERROR.pre.12.21| (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |RES(TextWriter.init@7.29)| |@OBJECT|) |@true|)) (IMPLIES (AND (EQ |EXCEPTION.code$3| RETURN) (FORALL (|s0$4|) (PATS (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$1|) |s0$4| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$4|) |s0$4| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$4| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$4| |ALLOCATED'|) |@true|) (EQ (|Is$VDCL| |s0$4| VIRGIN) |@true|) (NEQ |s0$4| |$NIL|)) (OR (EQ (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$1|) |s0$4| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$4|) |s0$4| |@OBJECT|)) (EQ |s0$4| |RES(TextWriter.init@7.29)|)))) (EQ |RESIDUE.Writer.state'$4| (store |RESIDUE.Writer.state'$1| |RES(TextWriter.init@7.29)| (select |RESIDUE.Writer.state'$4| |RES(TextWriter.init@7.29)| |@OBJECT|))) (EQ (select |RESIDUE.Writer.state'$4| |$NIL| |@OBJECT|) (select |RESIDUE.Writer.state'$1| |$NIL| |@OBJECT|)) (EQ (SUBSET |ALLOCATED'| |ALLOCATED'$3|) |@true|) TRUE (EQ (|Is$NULL| |RESIDUE.Writer.state'$4| |@DUMMY|) |@true|) (EQ (|Is$TEXT| |RES(TextWriter.ToText@12.21)| |@DUMMY|) |@true|) (EQ (|Is$DCL| |RES(TextWriter.ToText@12.21)| |ALLOCATED'$3|) |@true|) (EQ (|Is$VDCL| |RES(TextWriter.ToText@12.21)| VIRGIN) |@true|)) (AND (LBL |ERROR.post.5.0.RAISES| (OR (EQ RETURN RETURN) (EQ RETURN |Writer.Failure|) (EQ RETURN |Thread.Alerted|))) (LBL |ERROR.inv.5.0| TRUE) (LBL |ERROR.mod.5.10.RESIDUE.Writer.state| (FORALL (|s0$5|) (PATS (select |RESIDUE.Writer.state'$4| |s0$5| |@OBJECT|) (select |RESIDUE.Writer.state$1| |s0$5| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$5| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$5| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$5| VIRGIN) |@true|) (NEQ |s0$5| |$NIL|)) (EQ (select |RESIDUE.Writer.state$1| |s0$5| |@OBJECT|) (select |RESIDUE.Writer.state'$4| |s0$5| |@OBJECT|))))) (LBL |ERROR.mod.5.10.Writer.state| (FORALL (|s0$6|) (PATS (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$4|) |s0$6| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state$1|) |s0$6| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$6| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$6| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$6| VIRGIN) |@true|) (NEQ |s0$6| |$NIL|)) (EQ (select (|FUNC.Writer.state| |RESIDUE.Writer.state$1|) |s0$6| |@OBJECT|) (select (|FUNC.Writer.state| |RESIDUE.Writer.state'$4|) |s0$6| |@OBJECT|))))) (LBL |ERROR.mod.5.10.RESIDUE.Writer.valid| (FORALL (|s0$7|) (PATS (select |RESIDUE.Writer.valid'$1| |s0$7| |@OBJECT|) (select |RESIDUE.Writer.valid$1| |s0$7| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$7| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$7| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$7| VIRGIN) |@true|) (NEQ |s0$7| |$NIL|)) (EQ (select |RESIDUE.Writer.valid$1| |s0$7| |@OBJECT|) (select |RESIDUE.Writer.valid'$1| |s0$7| |@OBJECT|))))) (LBL |ERROR.mod.5.10.Writer.valid| (FORALL (|s0$8|) (PATS (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |s0$8| |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid$1|) |s0$8| |@OBJECT|)) (IMPLIES (AND (EQ (|Is$Writer.T| |s0$8| |@DUMMY|) |@true|) (EQ (|Is$DCL| |s0$8| ALLOCATED) |@true|) (EQ (|Is$VDCL| |s0$8| VIRGIN) |@true|) (NEQ |s0$8| |$NIL|)) (EQ (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid$1|) |s0$8| |@OBJECT|) (select (|FUNC.Writer.valid| |RESIDUE.Writer.valid'$1|) |s0$8| |@OBJECT|))))))))))))))))))))))))
(BG_POP)

;; We were using "id"'s in the PairSet calculations as if they were
;; immutable.  But of course they aren't, as this example showed.
(BG_PUSH TRUE)
(DEFPREDMAP (|FUNC.Wr.seekable| |Wr.T.seekable| |RESIDUE.Wr.seekable|) ind (IMPLIES (EQ (|Is$Wr.T| ind |@DUMMY|) |@true|) (EQ (select |Wr.T.seekable| ind |@OBJECT|) |@true|)))
(DEFPREDMAP (|FUNC.Wr.valid| |Wr.T.buffered| |Wr.T.seekable| |Wr.T.hi| |Wr.T.lo| |Wr.T.st| |Wr.T.buff| |RESIDUE.WrClass.svalid| |WrClass.CharArray| |Wr.T.cur| |RESIDUE.Wr.valid|) |ind$1| (IMPLIES (EQ (|Is$Wr.T| |ind$1| |@DUMMY|) |@true|) (AND (LBL v0 (NEQ |ind$1| |$NIL|)) (LBL v1 (IMPLIES (NEQ (select |Wr.T.lo| |ind$1| |@OBJECT|) (select |Wr.T.hi| |ind$1| |@OBJECT|)) (AND (NEQ (select |Wr.T.buff| |ind$1| |@OBJECT|) |$NIL|) (<= (- (+ (select |Wr.T.st| |ind$1| |@OBJECT|) (select |Wr.T.hi| |ind$1| |@OBJECT|)) (select |Wr.T.lo| |ind$1| |@OBJECT|)) (NUMBER (select |Wr.T.buff| |ind$1| |@OBJECT|) 0))))) (LBL v2 (AND (<= (select |Wr.T.lo| |ind$1| |@OBJECT|) (select |Wr.T.cur| |ind$1| |@OBJECT|)) (<= (select |Wr.T.cur| |ind$1| |@OBJECT|) (select |Wr.T.hi| |ind$1| |@OBJECT|)))) (LBL v3 (EQ (select (|FUNC.WrClass.svalid| |Wr.T.buffered| |Wr.T.seekable| |Wr.T.hi| |Wr.T.lo| |Wr.T.st| |Wr.T.buff| |RESIDUE.WrClass.svalid|) |ind$1| |@OBJECT|) |@true|)))))
(DEFPREDMAP (|FUNC.Wr.isClosed| |Wr.T.closed| |RESIDUE.Wr.isClosed|) |ind$2| (IMPLIES (EQ (|Is$Wr.T| |ind$2| |@DUMMY|) |@true|) (EQ (select |Wr.T.closed| |ind$2| |@OBJECT|) |@true|)))
(DEFPREDMAP (|FUNC.Wr.okay| |Wr.T.buffered| |Wr.T.seekable| |Wr.T.hi| |Wr.T.lo| |Wr.T.st| |Wr.T.buff| |RESIDUE.WrClass.svalid| |WrClass.CharArray| |Wr.T.cur| |RESIDUE.Wr.valid| |Wr.T.closed| |RESIDUE.Wr.isClosed| |RESIDUE.Wr.okay|) |ind$3| (IMPLIES (EQ (|Is$Wr.T| |ind$3| |@DUMMY|) |@true|) (AND (NOT (EQ (select (|FUNC.Wr.isClosed| |Wr.T.closed| |RESIDUE.Wr.isClosed|) |ind$3| |@OBJECT|) |@true|)) (EQ (select (|FUNC.Wr.valid| |Wr.T.buffered| |Wr.T.seekable| |Wr.T.hi| |Wr.T.lo| |Wr.T.st| |Wr.T.buff| |RESIDUE.WrClass.svalid| |WrClass.CharArray| |Wr.T.cur| |RESIDUE.Wr.valid|) |ind$3| |@OBJECT|) |@true|))))

(BG_PUSH
(AND
(< 1000000 |INTEGER.LAST|)
(< |INTEGER.FIRST| -1000000)
(EQ (ORD |Convert.Style.Mix|) 4)
(EQ (ORD |Convert.Style.AltSci|) 3)
(EQ (ORD |Convert.Style.Sci|) 2)
(EQ (ORD |Convert.Style.AltFlo|) 1)
(EQ (ORD |Convert.Style.Flo|) 0)
(DISTINCT |WrClass.CharArray.TYPECODE| |Wr.T.TYPECODE| |AtomList.T.TYPECODE| |Atom.T.TYPECODE| |WrClass.Private.TYPECODE| |Thread.SizedClosure.TYPECODE| |Thread.Closure.TYPECODE| |Thread.Condition.TYPECODE| |Thread.T.TYPECODE| |MUTEX.TYPECODE| |TEXT.TYPECODE| |REFANY.TYPECODE| |ROOT.TYPECODE| |NULL.TYPECODE|)
(DISTINCT |Wr.Failure| |WrMove.FatalError| |Convert.Failed| |Thread.Alerted| RETURN EXIT)
(EQ |BOOLEAN.FALSE| |@false|)
(EQ |BOOLEAN.TRUE| |@true|)
(EQ (SUBSET VIRGIN VIRGIN) |@true|)
(EQ (SUBSET ALLOCATED ALLOCATED) |@true|)
(FORALL (v dum) (IMPLIES (EQ (|Is$INTEGER| v dum) |@true|) (AND (>= v |INTEGER.FIRST|) (<= v |INTEGER.LAST|))))
(EQ (SUBTYPE1 |ROOT.TYPECODE| |REFANY.TYPECODE|) |@true|)
(EQ (SUBTYPE1 |MUTEX.TYPECODE| |ROOT.TYPECODE|) |@true|)
(< |INTEGER.FIRST| 0)
(> |INTEGER.LAST| 0)
(NOT (EQ (MEMBER |$NIL| LL) |@true|))
(EQ (|Is$VDCL| |$NIL| VIRGIN) |@true|)
(EQ (|Is$DCL| |$NIL| ALLOCATED) |@true|)
(NEQ |@true| |@false|)
(EQ (|Is$VIRGIN_TYPE| VIRGIN |@DUMMY|) |@true|)
(FORALL (q dummy1) (IMPLIES (EQ (|Is$VIRGIN_TYPE| q dummy1) |@true|) (FORALL (i) (EQ (|Is$BOOLEAN| (select q i |@SPECIAL|) dummy1) |@true|))))
(FORALL (map) (PATS (|Is$VIRGIN_TYPE| map |@DUMMY|)) (IMPLIES (EQ (|Is$VIRGIN_TYPE| map |@DUMMY|) |@true|) (FORALL (|ind$4| val) (PATS (store map |ind$4| val)) (IMPLIES (EQ (|Is$BOOLEAN| val |@DUMMY|) |@true|) (EQ (|Is$VIRGIN_TYPE| (store map |ind$4| val) |@DUMMY|) |@true|)))))
(FORALL (|q$1| dummy) (IMPLIES (EQ (|Is$BOOLEAN| |q$1| dummy) |@true|) (AND (<= 0 (ORD |q$1|)) (< (ORD |q$1|) 2) (EQ (TYPECODE |q$1| |@DUMMY|) |BOOLEAN.TYPECODE|) (OR (EQ |q$1| |BOOLEAN.FALSE|) (EQ |q$1| |BOOLEAN.TRUE|)))))
(FORALL (|q$2| |dummy$1|) (IMPLIES (EQ (|Is$BOOLEAN| |q$2| |dummy$1|) |@true|) (EQ (|Is$ORDINAL| |q$2| |@DUMMY|) |@true|)))
(FORALL (|q$3| |dummy$2|) (IMPLIES (EQ (|Is$CHAR| |q$3| |dummy$2|) |@true|) (AND (<= 0 (ORD |q$3|)) (< (ORD |q$3|) 256) (EQ (TYPECODE |q$3| |@DUMMY|) |CHAR.TYPECODE|))))
(FORALL (|q$4| |dummy$3|) (IMPLIES (EQ (|Is$CHAR| |q$4| |dummy$3|) |@true|) (EQ (|Is$ORDINAL| |q$4| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |TEXT.TYPECODE|) |@true|)
(FORALL (|q$5|) (PATS (|Is$TEXT| |q$5| |@DUMMY|)) (IMPLIES (EQ (|Is$TEXT| |q$5| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$5| |@DUMMY|) |TEXT.TYPECODE|) |@true|)))
(FORALL (|q$6|) (PATS (SUBTYPE (TYPECODE |q$6| |@DUMMY|) |TEXT.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$6| |@DUMMY|) |TEXT.TYPECODE|) |@true|) (EQ (|Is$TEXT| |q$6| |@DUMMY|) |@true|)))
(FORALL (|q$7|) (PATS (|Is$CARDINAL| |q$7| |@DUMMY|)) (IMPLIES (EQ (|Is$CARDINAL| |q$7| |@DUMMY|) |@true|) (AND (<= 0 |q$7|) (<= |q$7| |INTEGER.LAST|) (EQ (|Is$INTEGER| |q$7| |@DUMMY|) |@true|))))
(FORALL (|q$8|) (PATS (|Is$MATHINT| |q$8| |@DUMMY|)) (IMPLIES (AND (<= 0 |q$8|) (<= |q$8| |INTEGER.LAST|) (EQ (|Is$MATHINT| |q$8| |@DUMMY|) |@true|)) (EQ (|Is$CARDINAL| |q$8| |@DUMMY|) |@true|)))
(FORALL (|q$9|) (PATS (|Is$CARDINAL| |q$9| |@DUMMY|)) (IMPLIES (EQ (|Is$CARDINAL| |q$9| |@DUMMY|) |@true|) (EQ (|Is$ORDINAL| |q$9| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |MUTEX.TYPECODE|) |@true|)
(FORALL (|q$10|) (PATS (|Is$MUTEX| |q$10| |@DUMMY|)) (IMPLIES (EQ (|Is$MUTEX| |q$10| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$10| |@DUMMY|) |MUTEX.TYPECODE|) |@true|)))
(FORALL (|q$11|) (PATS (SUBTYPE (TYPECODE |q$11| |@DUMMY|) |MUTEX.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$11| |@DUMMY|) |MUTEX.TYPECODE|) |@true|) (EQ (|Is$MUTEX| |q$11| |@DUMMY|) |@true|)))
(FORALL (|q$12|) (PATS (|Is$MUTEX| |q$12| |@DUMMY|)) (IMPLIES (EQ (|Is$MUTEX| |q$12| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$12| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |REFANY.TYPECODE|) |@true|)
(FORALL (|q$13|) (PATS (|Is$REFANY| |q$13| |@DUMMY|)) (IMPLIES (EQ (|Is$REFANY| |q$13| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$13| |@DUMMY|) |REFANY.TYPECODE|) |@true|)))
(FORALL (|q$14|) (PATS (SUBTYPE (TYPECODE |q$14| |@DUMMY|) |REFANY.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$14| |@DUMMY|) |REFANY.TYPECODE|) |@true|) (EQ (|Is$REFANY| |q$14| |@DUMMY|) |@true|)))
(FORALL (|RESIDUE.Text.length'| |RESIDUE.Text.length| |i$1|) (PATS (MPAT (select (|FUNC.Text.length| |RESIDUE.Text.length|) |i$1| |@REF|) (select (|FUNC.Text.length| |RESIDUE.Text.length'|) |i$1| |@REF|))) (IMPLIES (AND (EQ (|Is$TEXT| |i$1| |@DUMMY|) |@true|) (EQ (select |RESIDUE.Text.length| |i$1| |@REF|) (select |RESIDUE.Text.length'| |i$1| |@REF|))) (EQ (select (|FUNC.Text.length| |RESIDUE.Text.length|) |i$1| |@REF|) (select (|FUNC.Text.length| |RESIDUE.Text.length'|) |i$1| |@REF|))))
(FORALL (|RESIDUE.Wr.seekable'| |RESIDUE.Wr.seekable$1| |Wr.T.seekable'| |Wr.T.seekable$1| |i$2|) (PATS (MPAT (select (|FUNC.Wr.seekable| |Wr.T.seekable$1| |RESIDUE.Wr.seekable$1|) |i$2| |@OBJECT|) (select (|FUNC.Wr.seekable| |Wr.T.seekable'| |RESIDUE.Wr.seekable'|) |i$2| |@OBJECT|))) (IMPLIES (AND (EQ (|Is$Wr.T| |i$2| |@DUMMY|) |@true|) (EQ (select |Wr.T.seekable$1| |i$2| |@OBJECT|) (select |Wr.T.seekable'| |i$2| |@OBJECT|)) (EQ (select |RESIDUE.Wr.seekable$1| |i$2| |@OBJECT|) (select |RESIDUE.Wr.seekable'| |i$2| |@OBJECT|))) (EQ (select (|FUNC.Wr.seekable| |Wr.T.seekable$1| |RESIDUE.Wr.seekable$1|) |i$2| |@OBJECT|) (select (|FUNC.Wr.seekable| |Wr.T.seekable'| |RESIDUE.Wr.seekable'|) |i$2| |@OBJECT|))))
(FORALL (|RESIDUE.Wr.valid'| |RESIDUE.Wr.valid$1| |Wr.T.cur'| |Wr.T.cur$1| |WrClass.CharArray'| |WrClass.CharArray$1| |RESIDUE.WrClass.svalid'| |RESIDUE.WrClass.svalid$1| |Wr.T.buff'| |Wr.T.buff$1| |Wr.T.st'| |Wr.T.st$1| |Wr.T.lo'| |Wr.T.lo$1| |Wr.T.hi'| |Wr.T.hi$1| |Wr.T.seekable'$1| |Wr.T.seekable$2| |Wr.T.buffered'| |Wr.T.buffered$1| |i$3|) (PATS (MPAT (select (|FUNC.Wr.valid| |Wr.T.buffered$1| |Wr.T.seekable$2| |Wr.T.hi$1| |Wr.T.lo$1| |Wr.T.st$1| |Wr.T.buff$1| |RESIDUE.WrClass.svalid$1| |WrClass.CharArray$1| |Wr.T.cur$1| |RESIDUE.Wr.valid$1|) |i$3| |@OBJECT|) (select (|FUNC.Wr.valid| |Wr.T.buffered'| |Wr.T.seekable'$1| |Wr.T.hi'| |Wr.T.lo'| |Wr.T.st'| |Wr.T.buff'| |RESIDUE.WrClass.svalid'| |WrClass.CharArray'| |Wr.T.cur'| |RESIDUE.Wr.valid'|) |i$3| |@OBJECT|))) (IMPLIES (AND (EQ (|Is$Wr.T| |i$3| |@DUMMY|) |@true|) (EQ (select |Wr.T.buffered$1| |i$3| |@OBJECT|) (select |Wr.T.buffered'| |i$3| |@OBJECT|)) (EQ (select |Wr.T.seekable$2| |i$3| |@OBJECT|) (select |Wr.T.seekable'$1| |i$3| |@OBJECT|)) (EQ (select |Wr.T.hi$1| |i$3| |@OBJECT|) (select |Wr.T.hi'| |i$3| |@OBJECT|)) (EQ (select |Wr.T.lo$1| |i$3| |@OBJECT|) (select |Wr.T.lo'| |i$3| |@OBJECT|)) (EQ (select |Wr.T.st$1| |i$3| |@OBJECT|) (select |Wr.T.st'| |i$3| |@OBJECT|)) (EQ (select |Wr.T.buff$1| |i$3| |@OBJECT|) (select |Wr.T.buff'| |i$3| |@OBJECT|)) (EQ (select |RESIDUE.WrClass.svalid$1| |i$3| |@OBJECT|) (select |RESIDUE.WrClass.svalid'| |i$3| |@OBJECT|)) (FORALL (s0) (IMPLIES (AND (EQ (|Is$MATHINT| s0 |@DUMMY|) |@true|) (<= 0 s0) (< s0 (NUMBER (select |Wr.T.buff$1| |i$3| |@OBJECT|) 0))) (EQ (select (select |WrClass.CharArray$1| (select |Wr.T.buff$1| |i$3| |@OBJECT|) |@REF|) s0 |@ARRAY|) (select (select |WrClass.CharArray'| (select |Wr.T.buff'| |i$3| |@OBJECT|) |@REF|) s0 |@ARRAY|)))) (EQ (select |Wr.T.cur$1| |i$3| |@OBJECT|) (select |Wr.T.cur'| |i$3| |@OBJECT|)) (EQ (select |RESIDUE.Wr.valid$1| |i$3| |@OBJECT|) (select |RESIDUE.Wr.valid'| |i$3| |@OBJECT|))) (EQ (select (|FUNC.Wr.valid| |Wr.T.buffered$1| |Wr.T.seekable$2| |Wr.T.hi$1| |Wr.T.lo$1| |Wr.T.st$1| |Wr.T.buff$1| |RESIDUE.WrClass.svalid$1| |WrClass.CharArray$1| |Wr.T.cur$1| |RESIDUE.Wr.valid$1|) |i$3| |@OBJECT|) (select (|FUNC.Wr.valid| |Wr.T.buffered'| |Wr.T.seekable'$1| |Wr.T.hi'| |Wr.T.lo'| |Wr.T.st'| |Wr.T.buff'| |RESIDUE.WrClass.svalid'| |WrClass.CharArray'| |Wr.T.cur'| |RESIDUE.Wr.valid'|) |i$3| |@OBJECT|))))
(FORALL (|RESIDUE.Wr.state'| |RESIDUE.Wr.state| |Wr.T.st'$1| |Wr.T.st$2| |Wr.T.lo'$1| |Wr.T.lo$2| |Wr.T.cur'$1| |Wr.T.cur$2| |Wr.T.hi'$1| |Wr.T.hi$2| |Wr.T.seekable'$2| |Wr.T.seekable$3| |Wr.T.buffered'$1| |Wr.T.buffered$2| |Wr.T.buff'$1| |Wr.T.buff$2| |WrClass.CharArray'$1| |WrClass.CharArray$2| |i$4|) (PATS (MPAT (select (|FUNC.Wr.state| |WrClass.CharArray$2| |Wr.T.buff$2| |Wr.T.buffered$2| |Wr.T.seekable$3| |Wr.T.hi$2| |Wr.T.cur$2| |Wr.T.lo$2| |Wr.T.st$2| |RESIDUE.Wr.state|) |i$4| |@OBJECT|) (select (|FUNC.Wr.state| |WrClass.CharArray'$1| |Wr.T.buff'$1| |Wr.T.buffered'$1| |Wr.T.seekable'$2| |Wr.T.hi'$1| |Wr.T.cur'$1| |Wr.T.lo'$1| |Wr.T.st'$1| |RESIDUE.Wr.state'|) |i$4| |@OBJECT|))) (IMPLIES (AND (EQ (|Is$Wr.T| |i$4| |@DUMMY|) |@true|) (FORALL (|s0$1|) (IMPLIES (AND (EQ (|Is$MATHINT| |s0$1| |@DUMMY|) |@true|) (<= 0 |s0$1|) (< |s0$1| (NUMBER (select |Wr.T.buff$2| |i$4| |@OBJECT|) 0))) (EQ (select (select |WrClass.CharArray$2| (select |Wr.T.buff$2| |i$4| |@OBJECT|) |@REF|) |s0$1| |@ARRAY|) (select (select |WrClass.CharArray'$1| (select |Wr.T.buff'$1| |i$4| |@OBJECT|) |@REF|) |s0$1| |@ARRAY|)))) (EQ (select |Wr.T.buffered$2| |i$4| |@OBJECT|) (select |Wr.T.buffered'$1| |i$4| |@OBJECT|)) (EQ (select |Wr.T.seekable$3| |i$4| |@OBJECT|) (select |Wr.T.seekable'$2| |i$4| |@OBJECT|)) (EQ (select |Wr.T.hi$2| |i$4| |@OBJECT|) (select |Wr.T.hi'$1| |i$4| |@OBJECT|)) (EQ (select |Wr.T.cur$2| |i$4| |@OBJECT|) (select |Wr.T.cur'$1| |i$4| |@OBJECT|)) (EQ (select |Wr.T.lo$2| |i$4| |@OBJECT|) (select |Wr.T.lo'$1| |i$4| |@OBJECT|)) (EQ (select |Wr.T.st$2| |i$4| |@OBJECT|) (select |Wr.T.st'$1| |i$4| |@OBJECT|)) (EQ (select |Wr.T.buff$2| |i$4| |@OBJECT|) (select |Wr.T.buff'$1| |i$4| |@OBJECT|)) (EQ (select |RESIDUE.Wr.state| |i$4| |@OBJECT|) (select |RESIDUE.Wr.state'| |i$4| |@OBJECT|))) (EQ (select (|FUNC.Wr.state| |WrClass.CharArray$2| |Wr.T.buff$2| |Wr.T.buffered$2| |Wr.T.seekable$3| |Wr.T.hi$2| |Wr.T.cur$2| |Wr.T.lo$2| |Wr.T.st$2| |RESIDUE.Wr.state|) |i$4| |@OBJECT|) (select (|FUNC.Wr.state| |WrClass.CharArray'$1| |Wr.T.buff'$1| |Wr.T.buffered'$1| |Wr.T.seekable'$2| |Wr.T.hi'$1| |Wr.T.cur'$1| |Wr.T.lo'$1| |Wr.T.st'$1| |RESIDUE.Wr.state'|) |i$4| |@OBJECT|))))
(FORALL (|RESIDUE.Wr.isClosed'| |RESIDUE.Wr.isClosed$1| |Wr.T.closed'| |Wr.T.closed$1| |i$5|) (PATS (MPAT (select (|FUNC.Wr.isClosed| |Wr.T.closed$1| |RESIDUE.Wr.isClosed$1|) |i$5| |@OBJECT|) (select (|FUNC.Wr.isClosed| |Wr.T.closed'| |RESIDUE.Wr.isClosed'|) |i$5| |@OBJECT|))) (IMPLIES (AND (EQ (|Is$Wr.T| |i$5| |@DUMMY|) |@true|) (EQ (select |Wr.T.closed$1| |i$5| |@OBJECT|) (select |Wr.T.closed'| |i$5| |@OBJECT|)) (EQ (select |RESIDUE.Wr.isClosed$1| |i$5| |@OBJECT|) (select |RESIDUE.Wr.isClosed'| |i$5| |@OBJECT|))) (EQ (select (|FUNC.Wr.isClosed| |Wr.T.closed$1| |RESIDUE.Wr.isClosed$1|) |i$5| |@OBJECT|) (select (|FUNC.Wr.isClosed| |Wr.T.closed'| |RESIDUE.Wr.isClosed'|) |i$5| |@OBJECT|))))
(FORALL (|RESIDUE.Wr.okay'| |RESIDUE.Wr.okay$1| |RESIDUE.Wr.isClosed'$1| |RESIDUE.Wr.isClosed$2| |Wr.T.closed'$1| |Wr.T.closed$2| |RESIDUE.Wr.valid'$1| |RESIDUE.Wr.valid$2| |Wr.T.cur'$2| |Wr.T.cur$3| |WrClass.CharArray'$2| |WrClass.CharArray$3| |RESIDUE.WrClass.svalid'$1| |RESIDUE.WrClass.svalid$2| |Wr.T.buff'$2| |Wr.T.buff$3| |Wr.T.st'$2| |Wr.T.st$3| |Wr.T.lo'$2| |Wr.T.lo$3| |Wr.T.hi'$2| |Wr.T.hi$3| |Wr.T.seekable'$3| |Wr.T.seekable$4| |Wr.T.buffered'$2| |Wr.T.buffered$3| |i$6|) (PATS (MPAT (select (|FUNC.Wr.okay| |Wr.T.buffered$3| |Wr.T.seekable$4| |Wr.T.hi$3| |Wr.T.lo$3| |Wr.T.st$3| |Wr.T.buff$3| |RESIDUE.WrClass.svalid$2| |WrClass.CharArray$3| |Wr.T.cur$3| |RESIDUE.Wr.valid$2| |Wr.T.closed$2| |RESIDUE.Wr.isClosed$2| |RESIDUE.Wr.okay$1|) |i$6| |@OBJECT|) (select (|FUNC.Wr.okay| |Wr.T.buffered'$2| |Wr.T.seekable'$3| |Wr.T.hi'$2| |Wr.T.lo'$2| |Wr.T.st'$2| |Wr.T.buff'$2| |RESIDUE.WrClass.svalid'$1| |WrClass.CharArray'$2| |Wr.T.cur'$2| |RESIDUE.Wr.valid'$1| |Wr.T.closed'$1| |RESIDUE.Wr.isClosed'$1| |RESIDUE.Wr.okay'|) |i$6| |@OBJECT|))) (IMPLIES (AND (EQ (|Is$Wr.T| |i$6| |@DUMMY|) |@true|) (EQ (select |Wr.T.buffered$3| |i$6| |@OBJECT|) (select |Wr.T.buffered'$2| |i$6| |@OBJECT|)) (EQ (select |Wr.T.seekable$4| |i$6| |@OBJECT|) (select |Wr.T.seekable'$3| |i$6| |@OBJECT|)) (EQ (select |Wr.T.hi$3| |i$6| |@OBJECT|) (select |Wr.T.hi'$2| |i$6| |@OBJECT|)) (EQ (select |Wr.T.lo$3| |i$6| |@OBJECT|) (select |Wr.T.lo'$2| |i$6| |@OBJECT|)) (EQ (select |Wr.T.st$3| |i$6| |@OBJECT|) (select |Wr.T.st'$2| |i$6| |@OBJECT|)) (EQ (select |Wr.T.buff$3| |i$6| |@OBJECT|) (select |Wr.T.buff'$2| |i$6| |@OBJECT|)) (EQ (select |RESIDUE.WrClass.svalid$2| |i$6| |@OBJECT|) (select |RESIDUE.WrClass.svalid'$1| |i$6| |@OBJECT|)) (FORALL (|s0$2|) (IMPLIES (AND (EQ (|Is$MATHINT| |s0$2| |@DUMMY|) |@true|) (<= 0 |s0$2|) (< |s0$2| (NUMBER (select |Wr.T.buff$3| |i$6| |@OBJECT|) 0))) (EQ (select (select |WrClass.CharArray$3| (select |Wr.T.buff$3| |i$6| |@OBJECT|) |@REF|) |s0$2| |@ARRAY|) (select (select |WrClass.CharArray'$2| (select |Wr.T.buff'$2| |i$6| |@OBJECT|) |@REF|) |s0$2| |@ARRAY|)))) (EQ (select |Wr.T.cur$3| |i$6| |@OBJECT|) (select |Wr.T.cur'$2| |i$6| |@OBJECT|)) (EQ (select |RESIDUE.Wr.valid$2| |i$6| |@OBJECT|) (select |RESIDUE.Wr.valid'$1| |i$6| |@OBJECT|)) (EQ (select |Wr.T.closed$2| |i$6| |@OBJECT|) (select |Wr.T.closed'$1| |i$6| |@OBJECT|)) (EQ (select |RESIDUE.Wr.isClosed$2| |i$6| |@OBJECT|) (select |RESIDUE.Wr.isClosed'$1| |i$6| |@OBJECT|)) (EQ (select |RESIDUE.Wr.okay$1| |i$6| |@OBJECT|) (select |RESIDUE.Wr.okay'| |i$6| |@OBJECT|))) (EQ (select (|FUNC.Wr.okay| |Wr.T.buffered$3| |Wr.T.seekable$4| |Wr.T.hi$3| |Wr.T.lo$3| |Wr.T.st$3| |Wr.T.buff$3| |RESIDUE.WrClass.svalid$2| |WrClass.CharArray$3| |Wr.T.cur$3| |RESIDUE.Wr.valid$2| |Wr.T.closed$2| |RESIDUE.Wr.isClosed$2| |RESIDUE.Wr.okay$1|) |i$6| |@OBJECT|) (select (|FUNC.Wr.okay| |Wr.T.buffered'$2| |Wr.T.seekable'$3| |Wr.T.hi'$2| |Wr.T.lo'$2| |Wr.T.st'$2| |Wr.T.buff'$2| |RESIDUE.WrClass.svalid'$1| |WrClass.CharArray'$2| |Wr.T.cur'$2| |RESIDUE.Wr.valid'$1| |Wr.T.closed'$1| |RESIDUE.Wr.isClosed'$1| |RESIDUE.Wr.okay'|) |i$6| |@OBJECT|))))
(FORALL (|RESIDUE.Text.Value'| |RESIDUE.Text.Value$1| |i$7|) (PATS (MPAT (select (|FUNC.Text.Value| |RESIDUE.Text.Value$1|) |i$7| |@ARRAY|) (select (|FUNC.Text.Value| |RESIDUE.Text.Value'|) |i$7| |@ARRAY|))) (IMPLIES (AND (EQ (|Is$TEXT| |i$7| |@DUMMY|) |@true|) (EQ (select |RESIDUE.Text.Value$1| |i$7| |@REF|) (select |RESIDUE.Text.Value'| |i$7| |@REF|))) (EQ (select (|FUNC.Text.Value| |RESIDUE.Text.Value$1|) |i$7| |@ARRAY|) (select (|FUNC.Text.Value| |RESIDUE.Text.Value'|) |i$7| |@ARRAY|))))
(FORALL (|RESIDUE.WrClass.svalid'$2| |RESIDUE.WrClass.svalid$3| |Wr.T.buff'$3| |Wr.T.buff$4| |Wr.T.st'$3| |Wr.T.st$4| |Wr.T.lo'$3| |Wr.T.lo$4| |Wr.T.hi'$3| |Wr.T.hi$4| |Wr.T.seekable'$4| |Wr.T.seekable$5| |Wr.T.buffered'$3| |Wr.T.buffered$4| |i$8|) (PATS (MPAT (select (|FUNC.WrClass.svalid| |Wr.T.buffered$4| |Wr.T.seekable$5| |Wr.T.hi$4| |Wr.T.lo$4| |Wr.T.st$4| |Wr.T.buff$4| |RESIDUE.WrClass.svalid$3|) |i$8| |@OBJECT|) (select (|FUNC.WrClass.svalid| |Wr.T.buffered'$3| |Wr.T.seekable'$4| |Wr.T.hi'$3| |Wr.T.lo'$3| |Wr.T.st'$3| |Wr.T.buff'$3| |RESIDUE.WrClass.svalid'$2|) |i$8| |@OBJECT|))) (IMPLIES (AND (EQ (|Is$Wr.T| |i$8| |@DUMMY|) |@true|) (EQ (select |Wr.T.buffered$4| |i$8| |@OBJECT|) (select |Wr.T.buffered'$3| |i$8| |@OBJECT|)) (EQ (select |Wr.T.seekable$5| |i$8| |@OBJECT|) (select |Wr.T.seekable'$4| |i$8| |@OBJECT|)) (EQ (select |Wr.T.hi$4| |i$8| |@OBJECT|) (select |Wr.T.hi'$3| |i$8| |@OBJECT|)) (EQ (select |Wr.T.lo$4| |i$8| |@OBJECT|) (select |Wr.T.lo'$3| |i$8| |@OBJECT|)) (EQ (select |Wr.T.st$4| |i$8| |@OBJECT|) (select |Wr.T.st'$3| |i$8| |@OBJECT|)) (EQ (select |Wr.T.buff$4| |i$8| |@OBJECT|) (select |Wr.T.buff'$3| |i$8| |@OBJECT|)) (EQ (select |RESIDUE.WrClass.svalid$3| |i$8| |@OBJECT|) (select |RESIDUE.WrClass.svalid'$2| |i$8| |@OBJECT|))) (EQ (select (|FUNC.WrClass.svalid| |Wr.T.buffered$4| |Wr.T.seekable$5| |Wr.T.hi$4| |Wr.T.lo$4| |Wr.T.st$4| |Wr.T.buff$4| |RESIDUE.WrClass.svalid$3|) |i$8| |@OBJECT|) (select (|FUNC.WrClass.svalid| |Wr.T.buffered'$3| |Wr.T.seekable'$4| |Wr.T.hi'$3| |Wr.T.lo'$3| |Wr.T.st'$3| |Wr.T.buff'$3| |RESIDUE.WrClass.svalid'$2|) |i$8| |@OBJECT|))))
(FORALL (|Wr.T.buffered$5| |Wr.T.seekable$6| |Wr.T.hi$5| |Wr.T.lo$5| |Wr.T.st$5| |Wr.T.buff$5| |RESIDUE.WrClass.svalid$4| |WrClass.CharArray$4| |Wr.T.cur$4| |RESIDUE.Wr.valid$3| |Wr.T.closed$3| |RESIDUE.Wr.isClosed$3| |RESIDUE.Wr.okay$2| |ind$5|) (EQ (|Is$PRED| (select (|FUNC.Wr.okay| |Wr.T.buffered$5| |Wr.T.seekable$6| |Wr.T.hi$5| |Wr.T.lo$5| |Wr.T.st$5| |Wr.T.buff$5| |RESIDUE.WrClass.svalid$4| |WrClass.CharArray$4| |Wr.T.cur$4| |RESIDUE.Wr.valid$3| |Wr.T.closed$3| |RESIDUE.Wr.isClosed$3| |RESIDUE.Wr.okay$2|) |ind$5| |@OBJECT|)) |@true|))
(FORALL (|Wr.T.closed$4| |RESIDUE.Wr.isClosed$4| |ind$6|) (EQ (|Is$PRED| (select (|FUNC.Wr.isClosed| |Wr.T.closed$4| |RESIDUE.Wr.isClosed$4|) |ind$6| |@OBJECT|)) |@true|))
(FORALL (|Wr.T.buffered$6| |Wr.T.seekable$7| |Wr.T.hi$6| |Wr.T.lo$6| |Wr.T.st$6| |Wr.T.buff$6| |RESIDUE.WrClass.svalid$5| |WrClass.CharArray$5| |Wr.T.cur$5| |RESIDUE.Wr.valid$4| |ind$7|) (EQ (|Is$PRED| (select (|FUNC.Wr.valid| |Wr.T.buffered$6| |Wr.T.seekable$7| |Wr.T.hi$6| |Wr.T.lo$6| |Wr.T.st$6| |Wr.T.buff$6| |RESIDUE.WrClass.svalid$5| |WrClass.CharArray$5| |Wr.T.cur$5| |RESIDUE.Wr.valid$4|) |ind$7| |@OBJECT|)) |@true|))
(FORALL (|Wr.T.seekable$8| |RESIDUE.Wr.seekable$2| |ind$8|) (EQ (|Is$PRED| (select (|FUNC.Wr.seekable| |Wr.T.seekable$8| |RESIDUE.Wr.seekable$2|) |ind$8| |@OBJECT|)) |@true|))
(EQ (SUBTYPE |NULL.TYPECODE| |Thread.T.TYPECODE|) |@true|)
(FORALL (|q$15|) (PATS (|Is$Thread.T| |q$15| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.T| |q$15| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$15| |@DUMMY|) |Thread.T.TYPECODE|) |@true|)))
(FORALL (|q$16|) (PATS (SUBTYPE (TYPECODE |q$16| |@DUMMY|) |Thread.T.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$16| |@DUMMY|) |Thread.T.TYPECODE|) |@true|) (EQ (|Is$Thread.T| |q$16| |@DUMMY|) |@true|)))
(FORALL (|q$17|) (PATS (|Is$Thread.T| |q$17| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.T| |q$17| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$17| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |Thread.Condition.TYPECODE|) |@true|)
(FORALL (|q$18|) (PATS (|Is$Thread.Condition| |q$18| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.Condition| |q$18| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$18| |@DUMMY|) |Thread.Condition.TYPECODE|) |@true|)))
(FORALL (|q$19|) (PATS (SUBTYPE (TYPECODE |q$19| |@DUMMY|) |Thread.Condition.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$19| |@DUMMY|) |Thread.Condition.TYPECODE|) |@true|) (EQ (|Is$Thread.Condition| |q$19| |@DUMMY|) |@true|)))
(FORALL (|q$20|) (PATS (|Is$Thread.Condition| |q$20| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.Condition| |q$20| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$20| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |Thread.Closure.TYPECODE|) |@true|)
(FORALL (|q$21|) (PATS (|Is$Thread.Closure| |q$21| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.Closure| |q$21| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$21| |@DUMMY|) |Thread.Closure.TYPECODE|) |@true|)))
(FORALL (|q$22|) (PATS (SUBTYPE (TYPECODE |q$22| |@DUMMY|) |Thread.Closure.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$22| |@DUMMY|) |Thread.Closure.TYPECODE|) |@true|) (EQ (|Is$Thread.Closure| |q$22| |@DUMMY|) |@true|)))
(EQ (SUBTYPE1 |Thread.Closure.TYPECODE| |ROOT.TYPECODE|) |@true|)
(FORALL (|q$23|) (PATS (|Is$Thread.Closure| |q$23| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.Closure| |q$23| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$23| |@DUMMY|) |@true|)))
(FORALL (s) (IMPLIES (NOT (EQ (select ALLOCATED s |@SPECIAL|) |@true|)) (EQ (select |Thread.SizedClosure.stackSize| s |@OBJECT|) 0)))
(EQ (|Is$INTEGER| 0 |@DUMMY|) |@true|)
(EQ (SUBTYPE |NULL.TYPECODE| |Thread.SizedClosure.TYPECODE|) |@true|)
(FORALL (|q$24|) (PATS (|Is$Thread.SizedClosure| |q$24| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.SizedClosure| |q$24| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$24| |@DUMMY|) |Thread.SizedClosure.TYPECODE|) |@true|)))
(FORALL (|q$25|) (PATS (SUBTYPE (TYPECODE |q$25| |@DUMMY|) |Thread.SizedClosure.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$25| |@DUMMY|) |Thread.SizedClosure.TYPECODE|) |@true|) (EQ (|Is$Thread.SizedClosure| |q$25| |@DUMMY|) |@true|)))
(EQ (|Is$Thread.SizedClosure.stackSize$MAP| |Thread.SizedClosure.stackSize| |@DUMMY|) |@true|)
(FORALL (ofm) (IMPLIES (EQ (|Is$Thread.SizedClosure.stackSize$MAP| ofm |@DUMMY|) |@true|) (FORALL (|q$26|) (EQ (|Is$CARDINAL| (select ofm |q$26| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (SUBTYPE1 |Thread.SizedClosure.TYPECODE| |Thread.Closure.TYPECODE|) |@true|)
(FORALL (|q$27|) (PATS (|Is$Thread.SizedClosure| |q$27| |@DUMMY|)) (IMPLIES (EQ (|Is$Thread.SizedClosure| |q$27| |@DUMMY|) |@true|) (EQ (|Is$Thread.Closure| |q$27| |@DUMMY|) |@true|)))
(FORALL (|q$28| |dummy1$1|) (IMPLIES (EQ (|Is$Convert.Buffer| |q$28| |dummy1$1|) |@true|) (FORALL (|i$9|) (EQ (|Is$CHAR| (select |q$28| |i$9| |@ARRAY|) |dummy1$1|) |@true|))))
(FORALL (|map$1| start num) (PATS (|Is$Convert.Buffer| (SUBARRAY |map$1| start num) |@DUMMY|)) (IMPLIES (EQ (|Is$Convert.Buffer| |map$1| |@DUMMY|) |@true|) (EQ (|Is$Convert.Buffer| (SUBARRAY |map$1| start num) |@DUMMY|) |@true|)))
(FORALL (|map$2|) (PATS (|Is$Convert.Buffer| |map$2| |@DUMMY|)) (IMPLIES (EQ (|Is$Convert.Buffer| |map$2| |@DUMMY|) |@true|) (FORALL (|start$1| |num$1| map2) (PATS (storeSub |map$2| |start$1| |num$1| map2)) (IMPLIES (EQ (|Is$Convert.Buffer| map2 |@DUMMY|) |@true|) (EQ (|Is$Convert.Buffer| (storeSub |map$2| |start$1| |num$1| map2) |@DUMMY|) |@true|)))))
(FORALL (|map$3|) (PATS (|Is$Convert.Buffer| |map$3| |@DUMMY|)) (IMPLIES (EQ (|Is$Convert.Buffer| |map$3| |@DUMMY|) |@true|) (FORALL (|ind$9| |val$1|) (PATS (store |map$3| |ind$9| |val$1|)) (IMPLIES (EQ (|Is$CHAR| |val$1| |@DUMMY|) |@true|) (EQ (|Is$Convert.Buffer| (store |map$3| |ind$9| |val$1|) |@DUMMY|) |@true|)))))
(EQ (|Is$INTEGER| 2 |@DUMMY|) |@true|)
(EQ (|Is$INTEGER| 16 |@DUMMY|) |@true|)
(FORALL (|q$29|) (PATS (|Is$Convert.Base| |q$29| |@DUMMY|)) (IMPLIES (EQ (|Is$Convert.Base| |q$29| |@DUMMY|) |@true|) (AND (<= 2 |q$29|) (<= |q$29| 16) (EQ (|Is$INTEGER| |q$29| |@DUMMY|) |@true|))))
(FORALL (|q$30|) (PATS (|Is$MATHINT| |q$30| |@DUMMY|)) (IMPLIES (AND (<= 2 |q$30|) (<= |q$30| 16) (EQ (|Is$MATHINT| |q$30| |@DUMMY|) |@true|)) (EQ (|Is$Convert.Base| |q$30| |@DUMMY|) |@true|)))
(FORALL (|q$31|) (PATS (|Is$Convert.Base| |q$31| |@DUMMY|)) (IMPLIES (EQ (|Is$Convert.Base| |q$31| |@DUMMY|) |@true|) (EQ (|Is$ORDINAL| |q$31| |@DUMMY|) |@true|)))
(FORALL (|q$32| |dummy$4|) (IMPLIES (EQ (|Is$Convert.Style| |q$32| |dummy$4|) |@true|) (AND (<= 0 (ORD |q$32|)) (< (ORD |q$32|) 5) (EQ (TYPECODE |q$32| |@DUMMY|) |Convert.Style.TYPECODE|) (OR (EQ |q$32| |Convert.Style.Flo|) (EQ |q$32| |Convert.Style.AltFlo|) (EQ |q$32| |Convert.Style.Sci|) (EQ |q$32| |Convert.Style.AltSci|) (EQ |q$32| |Convert.Style.Mix|)))))
(FORALL (|q$33| |dummy$5|) (IMPLIES (EQ (|Is$Convert.Style| |q$33| |dummy$5|) |@true|) (EQ (|Is$ORDINAL| |q$33| |@DUMMY|) |@true|)))
(EQ (|Is$INTEGER| 10 |@DUMMY|) |@true|)
(EQ (|Is$INTEGER| 6 |@DUMMY|) |@true|)
(EQ |Word.Size| 32)
(EQ (|Is$INTEGER| 1 |@DUMMY|) |@true|)
(FORALL (|q$34|) (PATS (|Is$TYPE@81| |q$34| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@81| |q$34| |@DUMMY|) |@true|) (AND (<= 0 |q$34|) (<= |q$34| 31) (EQ (|Is$INTEGER| |q$34| |@DUMMY|) |@true|))))
(FORALL (|q$35|) (PATS (|Is$MATHINT| |q$35| |@DUMMY|)) (IMPLIES (AND (<= 0 |q$35|) (<= |q$35| 31) (EQ (|Is$MATHINT| |q$35| |@DUMMY|) |@true|)) (EQ (|Is$TYPE@81| |q$35| |@DUMMY|) |@true|)))
(FORALL (|q$36|) (PATS (|Is$TYPE@81| |q$36| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@81| |q$36| |@DUMMY|) |@true|) (EQ (|Is$ORDINAL| |q$36| |@DUMMY|) |@true|)))
(NEQ |Text.Brand| |$NIL|)
(EQ (select ALLOCATED |Text.Brand| |@SPECIAL|) |@true|)
(EQ (|Is$TEXT| |Text.Brand| |@DUMMY|) |@true|)
(EQ (NUMBER (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Text.Brand| |@ARRAY|) 0) 8)
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Text.Brand| |@ARRAY|) 0 |@ARRAY|) (VAL 84 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Text.Brand| |@ARRAY|) 1 |@ARRAY|) (VAL 101 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Text.Brand| |@ARRAY|) 2 |@ARRAY|) (VAL 120 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Text.Brand| |@ARRAY|) 3 |@ARRAY|) (VAL 116 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Text.Brand| |@ARRAY|) 4 |@ARRAY|) (VAL 45 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Text.Brand| |@ARRAY|) 5 |@ARRAY|) (VAL 49 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Text.Brand| |@ARRAY|) 6 |@ARRAY|) (VAL 46 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Text.Brand| |@ARRAY|) 7 |@ARRAY|) (VAL 48 |CHAR.TYPECODE|))
(FORALL (|q$37|) (PATS (|Is$TYPE@83| |q$37| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@83| |q$37| |@DUMMY|) |@true|) (AND (<= -1 |q$37|) (<= |q$37| 1) (EQ (|Is$INTEGER| |q$37| |@DUMMY|) |@true|))))
(FORALL (|q$38|) (PATS (|Is$MATHINT| |q$38| |@DUMMY|)) (IMPLIES (AND (<= -1 |q$38|) (<= |q$38| 1) (EQ (|Is$MATHINT| |q$38| |@DUMMY|) |@true|)) (EQ (|Is$TYPE@83| |q$38| |@DUMMY|) |@true|)))
(FORALL (|q$39|) (PATS (|Is$TYPE@83| |q$39| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@83| |q$39| |@DUMMY|) |@true|) (EQ (|Is$ORDINAL| |q$39| |@DUMMY|) |@true|)))
(EQ (SUBTYPE |NULL.TYPECODE| |WrClass.Private.TYPECODE|) |@true|)
(FORALL (|q$40|) (PATS (|Is$WrClass.Private| |q$40| |@DUMMY|)) (IMPLIES (EQ (|Is$WrClass.Private| |q$40| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$40| |@DUMMY|) |WrClass.Private.TYPECODE|) |@true|)))
(FORALL (|q$41|) (PATS (SUBTYPE (TYPECODE |q$41| |@DUMMY|) |WrClass.Private.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$41| |@DUMMY|) |WrClass.Private.TYPECODE|) |@true|) (EQ (|Is$WrClass.Private| |q$41| |@DUMMY|) |@true|)))
(EQ (SUBTYPE1 |WrClass.Private.TYPECODE| |MUTEX.TYPECODE|) |@true|)
(FORALL (|q$42|) (PATS (|Is$WrClass.Private| |q$42| |@DUMMY|)) (IMPLIES (EQ (|Is$WrClass.Private| |q$42| |@DUMMY|) |@true|) (EQ (|Is$MUTEX| |q$42| |@DUMMY|) |@true|)))
(EQ (|Is$INTEGER| 3 |@DUMMY|) |@true|)
(FORALL (|q$43|) (PATS (|Is$TYPE@84| |q$43| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@84| |q$43| |@DUMMY|) |@true|) (AND (<= 0 |q$43|) (<= |q$43| 35) (EQ (|Is$INTEGER| |q$43| |@DUMMY|) |@true|))))
(FORALL (|q$44|) (PATS (|Is$MATHINT| |q$44| |@DUMMY|)) (IMPLIES (AND (<= 0 |q$44|) (<= |q$44| 35) (EQ (|Is$MATHINT| |q$44| |@DUMMY|) |@true|)) (EQ (|Is$TYPE@84| |q$44| |@DUMMY|) |@true|)))
(FORALL (|q$45|) (PATS (|Is$TYPE@84| |q$45| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@84| |q$45| |@DUMMY|) |@true|) (EQ (|Is$ORDINAL| |q$45| |@DUMMY|) |@true|)))
(FORALL (|q$46| |dummy1$2|) (IMPLIES (EQ (|Is$TYPE@89| |q$46| |dummy1$2|) |@true|) (EQ (NUMBER (ADDR |q$46|) 0) 36)))
(FORALL (|q$47| |dummy1$3|) (IMPLIES (EQ (|Is$TYPE@89| |q$47| |dummy1$3|) |@true|) (FORALL (|i$10|) (EQ (|Is$CHAR| (select |q$47| |i$10| |@ARRAY|) |dummy1$3|) |@true|))))
(FORALL (|map$4| |start$2| |num$2|) (PATS (|Is$TYPE@89| (SUBARRAY |map$4| |start$2| |num$2|) |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@89| |map$4| |@DUMMY|) |@true|) (EQ (|Is$TYPE@89| (SUBARRAY |map$4| |start$2| |num$2|) |@DUMMY|) |@true|)))
(FORALL (|map$5|) (PATS (|Is$TYPE@89| |map$5| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@89| |map$5| |@DUMMY|) |@true|) (FORALL (|start$3| |num$3| |map2$1|) (PATS (storeSub |map$5| |start$3| |num$3| |map2$1|)) (IMPLIES (EQ (|Is$TYPE@89| |map2$1| |@DUMMY|) |@true|) (EQ (|Is$TYPE@89| (storeSub |map$5| |start$3| |num$3| |map2$1|) |@DUMMY|) |@true|)))))
(FORALL (|map$6|) (PATS (|Is$TYPE@89| |map$6| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@89| |map$6| |@DUMMY|) |@true|) (FORALL (|ind$10| |val$2|) (PATS (store |map$6| |ind$10| |val$2|)) (IMPLIES (EQ (|Is$CHAR| |val$2| |@DUMMY|) |@true|) (EQ (|Is$TYPE@89| (store |map$6| |ind$10| |val$2|) |@DUMMY|) |@true|)))))
(EQ (|Is$INTEGER| 100 |@DUMMY|) |@true|)
(FORALL (|q$48|) (PATS (|Is$TYPE@82| |q$48| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@82| |q$48| |@DUMMY|) |@true|) (AND (<= 0 |q$48|) (<= |q$48| 100) (EQ (|Is$INTEGER| |q$48| |@DUMMY|) |@true|))))
(FORALL (|q$49|) (PATS (|Is$MATHINT| |q$49| |@DUMMY|)) (IMPLIES (AND (<= 0 |q$49|) (<= |q$49| 100) (EQ (|Is$MATHINT| |q$49| |@DUMMY|) |@true|)) (EQ (|Is$TYPE@82| |q$49| |@DUMMY|) |@true|)))
(FORALL (|q$50|) (PATS (|Is$TYPE@82| |q$50| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@82| |q$50| |@DUMMY|) |@true|) (EQ (|Is$ORDINAL| |q$50| |@DUMMY|) |@true|)))
(FORALL (|q$51| |dummy1$4|) (IMPLIES (EQ (|Is$TYPE@88| |q$51| |dummy1$4|) |@true|) (EQ (NUMBER (ADDR |q$51|) 0) 101)))
(FORALL (|q$52| |dummy1$5|) (IMPLIES (EQ (|Is$TYPE@88| |q$52| |dummy1$5|) |@true|) (FORALL (|i$11|) (EQ (|Is$CHAR| (select |q$52| |i$11| |@ARRAY|) |dummy1$5|) |@true|))))
(FORALL (|map$7| |start$4| |num$4|) (PATS (|Is$TYPE@88| (SUBARRAY |map$7| |start$4| |num$4|) |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@88| |map$7| |@DUMMY|) |@true|) (EQ (|Is$TYPE@88| (SUBARRAY |map$7| |start$4| |num$4|) |@DUMMY|) |@true|)))
(FORALL (|map$8|) (PATS (|Is$TYPE@88| |map$8| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@88| |map$8| |@DUMMY|) |@true|) (FORALL (|start$5| |num$5| |map2$2|) (PATS (storeSub |map$8| |start$5| |num$5| |map2$2|)) (IMPLIES (EQ (|Is$TYPE@88| |map2$2| |@DUMMY|) |@true|) (EQ (|Is$TYPE@88| (storeSub |map$8| |start$5| |num$5| |map2$2|) |@DUMMY|) |@true|)))))
(FORALL (|map$9|) (PATS (|Is$TYPE@88| |map$9| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@88| |map$9| |@DUMMY|) |@true|) (FORALL (|ind$11| |val$3|) (PATS (store |map$9| |ind$11| |val$3|)) (IMPLIES (EQ (|Is$CHAR| |val$3| |@DUMMY|) |@true|) (EQ (|Is$TYPE@88| (store |map$9| |ind$11| |val$3|) |@DUMMY|) |@true|)))))
(EQ (SUBTYPE |NULL.TYPECODE| |Atom.T.TYPECODE|) |@true|)
(FORALL (|q$53|) (PATS (|Is$Atom.T| |q$53| |@DUMMY|)) (IMPLIES (EQ (|Is$Atom.T| |q$53| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$53| |@DUMMY|) |Atom.T.TYPECODE|) |@true|)))
(FORALL (|q$54|) (PATS (SUBTYPE (TYPECODE |q$54| |@DUMMY|) |Atom.T.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$54| |@DUMMY|) |Atom.T.TYPECODE|) |@true|) (EQ (|Is$Atom.T| |q$54| |@DUMMY|) |@true|)))
(NEQ |Atom.Brand| |$NIL|)
(EQ (select ALLOCATED |Atom.Brand| |@SPECIAL|) |@true|)
(EQ (|Is$TEXT| |Atom.Brand| |@DUMMY|) |@true|)
(EQ (NUMBER (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Atom.Brand| |@ARRAY|) 0) 8)
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Atom.Brand| |@ARRAY|) 0 |@ARRAY|) (VAL 65 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Atom.Brand| |@ARRAY|) 1 |@ARRAY|) (VAL 116 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Atom.Brand| |@ARRAY|) 2 |@ARRAY|) (VAL 111 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Atom.Brand| |@ARRAY|) 3 |@ARRAY|) (VAL 109 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Atom.Brand| |@ARRAY|) 4 |@ARRAY|) (VAL 45 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Atom.Brand| |@ARRAY|) 5 |@ARRAY|) (VAL 49 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Atom.Brand| |@ARRAY|) 6 |@ARRAY|) (VAL 46 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |Atom.Brand| |@ARRAY|) 7 |@ARRAY|) (VAL 48 |CHAR.TYPECODE|))
(NEQ |AtomList.Brand| |$NIL|)
(EQ (select ALLOCATED |AtomList.Brand| |@SPECIAL|) |@true|)
(EQ (|Is$TEXT| |AtomList.Brand| |@DUMMY|) |@true|)
(EQ (NUMBER (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 0) 15)
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 0 |@ARRAY|) (VAL 40 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 1 |@ARRAY|) (VAL 76 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 2 |@ARRAY|) (VAL 105 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 3 |@ARRAY|) (VAL 115 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 4 |@ARRAY|) (VAL 116 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 5 |@ARRAY|) (VAL 32 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 6 |@ARRAY|) (VAL 65 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 7 |@ARRAY|) (VAL 116 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 8 |@ARRAY|) (VAL 111 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 9 |@ARRAY|) (VAL 109 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 10 |@ARRAY|) (VAL 45 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 11 |@ARRAY|) (VAL 49 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 12 |@ARRAY|) (VAL 46 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 13 |@ARRAY|) (VAL 48 |CHAR.TYPECODE|))
(EQ (select (select (|FUNC.Text.Value| |RESIDUE.Text.Value|) |AtomList.Brand| |@ARRAY|) 14 |@ARRAY|) (VAL 41 |CHAR.TYPECODE|))
(EQ (SUBTYPE |NULL.TYPECODE| |AtomList.T.TYPECODE|) |@true|)
(FORALL (|q$55|) (PATS (|Is$AtomList.T| |q$55| |@DUMMY|)) (IMPLIES (EQ (|Is$AtomList.T| |q$55| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$55| |@DUMMY|) |AtomList.T.TYPECODE|) |@true|)))
(FORALL (|q$56|) (PATS (SUBTYPE (TYPECODE |q$56| |@DUMMY|) |AtomList.T.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$56| |@DUMMY|) |AtomList.T.TYPECODE|) |@true|) (EQ (|Is$AtomList.T| |q$56| |@DUMMY|) |@true|)))
(EQ (|Is$AtomList.T.tail$MAP| |AtomList.T.tail| |@DUMMY|) |@true|)
(FORALL (|ofm$1|) (IMPLIES (EQ (|Is$AtomList.T.tail$MAP| |ofm$1| |@DUMMY|) |@true|) (FORALL (|q$57|) (EQ (|Is$AtomList.T| (select |ofm$1| |q$57| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (|Is$AtomList.T.head$MAP| |AtomList.T.head| |@DUMMY|) |@true|)
(FORALL (|ofm$2|) (IMPLIES (EQ (|Is$AtomList.T.head$MAP| |ofm$2| |@DUMMY|) |@true|) (FORALL (|q$57|) (EQ (|Is$Atom.T| (select |ofm$2| |q$57| |@OBJECT|) |@DUMMY|) |@true|))))
(FORALL (m |q$58|) (PATS (MPAT (|Is$AtomList.T| |q$58| |@DUMMY|) (|Is$AtomList.T.head$MAP| m |@DUMMY|))) (IMPLIES (AND (EQ (|Is$AtomList.T.head$MAP| m |@DUMMY|) |@true|) (EQ (|Is$AtomList.T| |q$58| |@DUMMY|) |@true|)) (FORALL (al) (PATS (MPAT (|Is$DCL| |q$58| al) (select m |q$58| |@OBJECT|))) (IMPLIES (EQ (|Is$DCL| |q$58| al) |@true|) (EQ (|Is$DCL| (select m |q$58| |@OBJECT|) al) |@true|)))))
(FORALL (|m$1|) (PATS (|Is$AtomList.T.head$MAP| |m$1| |@DUMMY|)) (IMPLIES (EQ (|Is$AtomList.T.head$MAP| |m$1| |@DUMMY|) |@true|) (FORALL (r |VIRGIN$1|) (PATS (select |VIRGIN$1| (select |m$1| r |@OBJECT|) |@SPECIAL|)) (IMPLIES (AND (EQ (|Is$AtomList.T| r |@DUMMY|) |@true|) (EQ (|Is$VDCL| r |VIRGIN$1|) |@true|)) (NOT (EQ (select |VIRGIN$1| (select |m$1| r |@OBJECT|) |@SPECIAL|) |@true|))))))
(FORALL (|m$2| |q$59|) (PATS (MPAT (|Is$AtomList.T| |q$59| |@DUMMY|) (|Is$AtomList.T.tail$MAP| |m$2| |@DUMMY|))) (IMPLIES (AND (EQ (|Is$AtomList.T.tail$MAP| |m$2| |@DUMMY|) |@true|) (EQ (|Is$AtomList.T| |q$59| |@DUMMY|) |@true|)) (FORALL (|al$1|) (PATS (MPAT (|Is$DCL| |q$59| |al$1|) (select |m$2| |q$59| |@OBJECT|))) (IMPLIES (EQ (|Is$DCL| |q$59| |al$1|) |@true|) (EQ (|Is$DCL| (select |m$2| |q$59| |@OBJECT|) |al$1|) |@true|)))))
(FORALL (|m$3|) (PATS (|Is$AtomList.T.tail$MAP| |m$3| |@DUMMY|)) (IMPLIES (EQ (|Is$AtomList.T.tail$MAP| |m$3| |@DUMMY|) |@true|) (FORALL (|r$1| |VIRGIN$2|) (PATS (select |VIRGIN$2| (select |m$3| |r$1| |@OBJECT|) |@SPECIAL|)) (IMPLIES (AND (EQ (|Is$AtomList.T| |r$1| |@DUMMY|) |@true|) (EQ (|Is$VDCL| |r$1| |VIRGIN$2|) |@true|)) (NOT (EQ (select |VIRGIN$2| (select |m$3| |r$1| |@OBJECT|) |@SPECIAL|) |@true|))))))
(EQ (SUBTYPE1 |AtomList.T.TYPECODE| |ROOT.TYPECODE|) |@true|)
(FORALL (|q$60|) (PATS (|Is$AtomList.T| |q$60| |@DUMMY|)) (IMPLIES (EQ (|Is$AtomList.T| |q$60| |@DUMMY|) |@true|) (EQ (|Is$ROOT| |q$60| |@DUMMY|) |@true|)))
(FORALL (|q$61| |dummy1$6|) (IMPLIES (EQ (|Is$TYPE@78| |q$61| |dummy1$6|) |@true|) (FORALL (|i$12|) (EQ (|Is$Atom.T| (select |q$61| |i$12| |@ARRAY|) |dummy1$6|) |@true|))))
(FORALL (|q$62| alloc) (PATS (MPAT (|Is$TYPE@78| |q$62| |@DUMMY|) (|Is$DCL| |q$62| alloc))) (IMPLIES (AND (EQ (|Is$TYPE@78| |q$62| |@DUMMY|) |@true|) (EQ (|Is$DCL| |q$62| alloc) |@true|)) (FORALL (|i$13|) (PATS (select |q$62| |i$13| |@ARRAY|)) (EQ (|Is$DCL| (select |q$62| |i$13| |@ARRAY|) alloc) |@true|))))
(FORALL (|map$10| |start$6| |num$6|) (PATS (|Is$TYPE@78| (SUBARRAY |map$10| |start$6| |num$6|) |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@78| |map$10| |@DUMMY|) |@true|) (EQ (|Is$TYPE@78| (SUBARRAY |map$10| |start$6| |num$6|) |@DUMMY|) |@true|)))
(FORALL (|map$11|) (PATS (|Is$TYPE@78| |map$11| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@78| |map$11| |@DUMMY|) |@true|) (FORALL (|start$7| |num$7| |map2$3|) (PATS (storeSub |map$11| |start$7| |num$7| |map2$3|)) (IMPLIES (EQ (|Is$TYPE@78| |map2$3| |@DUMMY|) |@true|) (EQ (|Is$TYPE@78| (storeSub |map$11| |start$7| |num$7| |map2$3|) |@DUMMY|) |@true|)))))
(FORALL (|map$12|) (PATS (|Is$TYPE@78| |map$12| |@DUMMY|)) (IMPLIES (EQ (|Is$TYPE@78| |map$12| |@DUMMY|) |@true|) (FORALL (|ind$12| |val$4|) (PATS (store |map$12| |ind$12| |val$4|)) (IMPLIES (EQ (|Is$Atom.T| |val$4| |@DUMMY|) |@true|) (EQ (|Is$TYPE@78| (store |map$12| |ind$12| |val$4|) |@DUMMY|) |@true|)))))
(EQ (SUBTYPE |NULL.TYPECODE| |Wr.T.TYPECODE|) |@true|)
(FORALL (|q$63|) (PATS (|Is$Wr.T| |q$63| |@DUMMY|)) (IMPLIES (EQ (|Is$Wr.T| |q$63| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$63| |@DUMMY|) |Wr.T.TYPECODE|) |@true|)))
(FORALL (|q$64|) (PATS (SUBTYPE (TYPECODE |q$64| |@DUMMY|) |Wr.T.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$64| |@DUMMY|) |Wr.T.TYPECODE|) |@true|) (EQ (|Is$Wr.T| |q$64| |@DUMMY|) |@true|)))
(EQ (|Is$Wr.T.buffered$MAP| |Wr.T.buffered| |@DUMMY|) |@true|)
(FORALL (|ofm$3|) (IMPLIES (EQ (|Is$Wr.T.buffered$MAP| |ofm$3| |@DUMMY|) |@true|) (FORALL (|q$65|) (EQ (|Is$BOOLEAN| (select |ofm$3| |q$65| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (|Is$Wr.T.seekable$MAP| |Wr.T.seekable| |@DUMMY|) |@true|)
(FORALL (|ofm$4|) (IMPLIES (EQ (|Is$Wr.T.seekable$MAP| |ofm$4| |@DUMMY|) |@true|) (FORALL (|q$65|) (EQ (|Is$BOOLEAN| (select |ofm$4| |q$65| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (|Is$Wr.T.closed$MAP| |Wr.T.closed| |@DUMMY|) |@true|)
(FORALL (|ofm$5|) (IMPLIES (EQ (|Is$Wr.T.closed$MAP| |ofm$5| |@DUMMY|) |@true|) (FORALL (|q$65|) (EQ (|Is$BOOLEAN| (select |ofm$5| |q$65| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (|Is$Wr.T.cur$MAP| |Wr.T.cur| |@DUMMY|) |@true|)
(FORALL (|ofm$6|) (IMPLIES (EQ (|Is$Wr.T.cur$MAP| |ofm$6| |@DUMMY|) |@true|) (FORALL (|q$65|) (EQ (|Is$CARDINAL| (select |ofm$6| |q$65| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (|Is$Wr.T.hi$MAP| |Wr.T.hi| |@DUMMY|) |@true|)
(FORALL (|ofm$7|) (IMPLIES (EQ (|Is$Wr.T.hi$MAP| |ofm$7| |@DUMMY|) |@true|) (FORALL (|q$65|) (EQ (|Is$CARDINAL| (select |ofm$7| |q$65| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (|Is$Wr.T.lo$MAP| |Wr.T.lo| |@DUMMY|) |@true|)
(FORALL (|ofm$8|) (IMPLIES (EQ (|Is$Wr.T.lo$MAP| |ofm$8| |@DUMMY|) |@true|) (FORALL (|q$65|) (EQ (|Is$CARDINAL| (select |ofm$8| |q$65| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (|Is$Wr.T.st$MAP| |Wr.T.st| |@DUMMY|) |@true|)
(FORALL (|ofm$9|) (IMPLIES (EQ (|Is$Wr.T.st$MAP| |ofm$9| |@DUMMY|) |@true|) (FORALL (|q$65|) (EQ (|Is$CARDINAL| (select |ofm$9| |q$65| |@OBJECT|) |@DUMMY|) |@true|))))
(EQ (|Is$Wr.T.buff$MAP| |Wr.T.buff| |@DUMMY|) |@true|)
(FORALL (|ofm$10|) (IMPLIES (EQ (|Is$Wr.T.buff$MAP| |ofm$10| |@DUMMY|) |@true|) (FORALL (|q$65|) (EQ (|Is$WrClass.CharArray| (select |ofm$10| |q$65| |@OBJECT|) |@DUMMY|) |@true|))))
(FORALL (|m$4| |q$66|) (PATS (MPAT (|Is$Wr.T| |q$66| |@DUMMY|) (|Is$Wr.T.buff$MAP| |m$4| |@DUMMY|))) (IMPLIES (AND (EQ (|Is$Wr.T.buff$MAP| |m$4| |@DUMMY|) |@true|) (EQ (|Is$Wr.T| |q$66| |@DUMMY|) |@true|)) (FORALL (|al$2|) (PATS (MPAT (|Is$DCL| |q$66| |al$2|) (select |m$4| |q$66| |@OBJECT|))) (IMPLIES (EQ (|Is$DCL| |q$66| |al$2|) |@true|) (EQ (|Is$DCL| (select |m$4| |q$66| |@OBJECT|) |al$2|) |@true|)))))
(FORALL (|m$5|) (PATS (|Is$Wr.T.buff$MAP| |m$5| |@DUMMY|)) (IMPLIES (EQ (|Is$Wr.T.buff$MAP| |m$5| |@DUMMY|) |@true|) (FORALL (|r$2| |VIRGIN$3|) (PATS (select |VIRGIN$3| (select |m$5| |r$2| |@OBJECT|) |@SPECIAL|)) (IMPLIES (AND (EQ (|Is$Wr.T| |r$2| |@DUMMY|) |@true|) (EQ (|Is$VDCL| |r$2| |VIRGIN$3|) |@true|)) (NOT (EQ (select |VIRGIN$3| (select |m$5| |r$2| |@OBJECT|) |@SPECIAL|) |@true|))))))
(EQ (SUBTYPE1 |Wr.T.TYPECODE| |WrClass.Private.TYPECODE|) |@true|)
(FORALL (|q$67|) (PATS (|Is$Wr.T| |q$67| |@DUMMY|)) (IMPLIES (EQ (|Is$Wr.T| |q$67| |@DUMMY|) |@true|) (EQ (|Is$WrClass.Private| |q$67| |@DUMMY|) |@true|)))
(EQ (|Is$TEXT| |Wr.EOL| |@DUMMY|) |@true|)
(EQ (|Is$DCL| |Wr.EOL| ALLOCATED) |@true|)
(EQ (|Is$VDCL| |Wr.EOL| VIRGIN) |@true|)
(NOT (EQ (select VIRGIN |Wr.EOL| |@SPECIAL|) |@true|))
(EQ (SUBTYPE |NULL.TYPECODE| |WrClass.CharArray.TYPECODE|) |@true|)
(FORALL (|q$68|) (PATS (|Is$WrClass.CharArray| |q$68| |@DUMMY|)) (IMPLIES (EQ (|Is$WrClass.CharArray| |q$68| |@DUMMY|) |@true|) (EQ (SUBTYPE (TYPECODE |q$68| |@DUMMY|) |WrClass.CharArray.TYPECODE|) |@true|)))
(FORALL (|q$69|) (PATS (SUBTYPE (TYPECODE |q$69| |@DUMMY|) |WrClass.CharArray.TYPECODE|)) (IMPLIES (EQ (SUBTYPE (TYPECODE |q$69| |@DUMMY|) |WrClass.CharArray.TYPECODE|) |@true|) (EQ (|Is$WrClass.CharArray| |q$69| |@DUMMY|) |@true|)))
(FORALL (|q$70|) (PATS (|Is$WrClass.CharArray| |q$70| |@DUMMY|)) (IMPLIES (EQ (|Is$WrClass.CharArray| |q$70| |@DUMMY|) |@true|) (OR (EQ |q$70| |$NIL|) (EQ (TYPECODE |q$70| |@DUMMY|) |WrClass.CharArray.TYPECODE|))))
(EQ (SUBTYPE1 |WrClass.CharArray.TYPECODE| |REFANY.TYPECODE|) |@true|)
(FORALL (rm) (IMPLIES (EQ (|Is$WrClass.CharArray$MAP| rm |@DUMMY|) |@true|) (FORALL (|q$71|) (EQ (|Is$Convert.Buffer| (select rm |q$71| |@REF|) |@DUMMY|) |@true|))))
(EQ (|Is$WrClass.CharArray$MAP| |WrClass.CharArray| |@DUMMY|) |@true|)
(FORALL (|s$1|) (IMPLIES (NOT (EQ (select ALLOCATED |s$1| |@SPECIAL|) |@true|)) (EQ (select |Wr.T.buff| |s$1| |@OBJECT|) |$NIL|)))
(FORALL (|s$2|) (IMPLIES (NOT (EQ (select ALLOCATED |s$2| |@SPECIAL|) |@true|)) (EQ (select |Wr.T.lo| |s$2| |@OBJECT|) 0)))
(FORALL (|s$3|) (IMPLIES (NOT (EQ (select ALLOCATED |s$3| |@SPECIAL|) |@true|)) (EQ (select |Wr.T.hi| |s$3| |@OBJECT|) 0)))
(FORALL (|s$4|) (IMPLIES (NOT (EQ (select ALLOCATED |s$4| |@SPECIAL|) |@true|)) (EQ (select |Wr.T.cur| |s$4| |@OBJECT|) 0)))
(FORALL (|s$5|) (IMPLIES (NOT (EQ (select ALLOCATED |s$5| |@SPECIAL|) |@true|)) (EQ (select |Wr.T.closed| |s$5| |@OBJECT|) |@true|)))
(EQ (SUBTYPE |Wr.T.TYPECODE| |MUTEX.TYPECODE|) |@true|)
)
)

(IMPLIES
 (AND
  (EQ (MUT_LT (sup LL) wr) |@true|)
  (FORALL
      (t)
    (NOPATS (|Is$TEXT| t |@DUMMY|) (|Is$DCL| t ALLOCATED) (|Is$VDCL| t VIRGIN))
    (IMPLIES
     (AND
      (EQ (|Is$TEXT| t |@DUMMY|) |@true|)
      (EQ (|Is$DCL| t ALLOCATED) |@true|)
      (EQ (|Is$VDCL| t VIRGIN) |@true|))
     (IMPLIES (NEQ t |$NIL|) (NEQ 0 (NUMBER t 0)))))
  (FORALL
      (wr1 wr2)
    (NOPATS
     (|Is$Wr.T| wr1 |@DUMMY|)
     (|Is$DCL| wr1 ALLOCATED)
     (|Is$VDCL| wr1 VIRGIN)
     (|Is$Wr.T| wr2 |@DUMMY|)
     (|Is$DCL| wr2 ALLOCATED)
     (|Is$VDCL| wr2 VIRGIN))
    (IMPLIES
     (AND
      (EQ (|Is$Wr.T| wr2 |@DUMMY|) |@true|)
      (EQ (|Is$DCL| wr2 ALLOCATED) |@true|)
      (EQ (|Is$VDCL| wr2 VIRGIN) |@true|)
      (EQ (|Is$Wr.T| wr1 |@DUMMY|) |@true|)
      (EQ (|Is$DCL| wr1 ALLOCATED) |@true|)
      (EQ (|Is$VDCL| wr1 VIRGIN) |@true|))
     (IMPLIES
      (AND
       (NEQ wr1 |$NIL|)
       (NEQ wr2 |$NIL|)
       (NEQ wr1 wr2)
       (NEQ (select |Wr.T.buff| wr1 |@OBJECT|) |$NIL|)
       (NEQ (select |Wr.T.buff| wr2 |@OBJECT|) |$NIL|))
      (NEQ (select |Wr.T.buff| wr1 |@OBJECT|) (select |Wr.T.buff| wr2 |@OBJECT|))))))
 (FORALL
     (|Wr.T.buff`| |wr`| |ALLOCATED`| |LL`| |VIRGIN`|)
   (IMPLIES
    (AND (EQ (|Is$Wr.T| wr |@DUMMY|) |@true|) (EQ (|Is$DCL| wr ALLOCATED) |@true|) (EQ (|Is$VDCL| wr VIRGIN) |@true|))
    (FORALL
	(|EXCEPTION.code| |m$6| |ALLOCATED$1| |ALLOCATED'| |LL$1| |LL'|)
      (AND
       (LBL |ERROR.pre.27.10| (EQ (MUT_LT (sup LL) wr) |@true|))
       (LBL
	   |ERROR.inv.27.10|
	 (AND
(OR ;; TRUE
	  (FORALL
	      (ttt)
	    (NOPATS (|Is$TEXT| ttt |@DUMMY|) (|Is$DCL| ttt ALLOCATED) (|Is$VDCL| ttt VIRGIN))
	    (IMPLIES
	     (AND
	      (EQ (|Is$TEXT| ttt |@DUMMY|) |@true|)
	      (EQ (|Is$DCL| ttt ALLOCATED) |@true|)
	      (EQ (|Is$VDCL| ttt VIRGIN) |@true|))
	     (IMPLIES (NEQ ttt |$NIL|) (NEQ 0 (NUMBER ttt 0)))))
)
(OR ;; TRUE
	  (FORALL
	      (wr1 wr2)
	    (NOPATS
	     (|Is$Wr.T| wr1 |@DUMMY|)
	     (|Is$DCL| wr1 ALLOCATED)
	     (|Is$VDCL| wr1 VIRGIN)
	     (|Is$Wr.T| wr2 |@DUMMY|)
	     (|Is$DCL| wr2 ALLOCATED)
	     (|Is$VDCL| wr2 VIRGIN))
	    (IMPLIES
	     (AND
	      (EQ (|Is$Wr.T| wr2 |@DUMMY|) |@true|)
	      (EQ (|Is$DCL| wr2 ALLOCATED) |@true|)
	      (EQ (|Is$VDCL| wr2 VIRGIN) |@true|)
	      (EQ (|Is$Wr.T| wr1 |@DUMMY|) |@true|)
	      (EQ (|Is$DCL| wr1 ALLOCATED) |@true|)
	      (EQ (|Is$VDCL| wr1 VIRGIN) |@true|))
	     (IMPLIES
	      (AND
	       (NEQ wr1 |$NIL|)
	       (NEQ wr2 |$NIL|)
	       (NEQ wr1 wr2)
	       (NEQ (select |Wr.T.buff| wr1 |@OBJECT|) |$NIL|)
	       (NEQ (select |Wr.T.buff| wr2 |@OBJECT|) |$NIL|))
	      (NEQ (select |Wr.T.buff| wr1 |@OBJECT|) (select |Wr.T.buff| wr2 |@OBJECT|)))))
)
))
       (IMPLIES
	(AND
	 (IMPLIES (EQ |EXCEPTION.code| RETURN) (EQ |LL'| (INSERT LL wr)))
	 (EQ |EXCEPTION.code| RETURN)
	 TRUE
	 (FORALL
	     (t)
	   (NOPATS (|Is$TEXT| t |@DUMMY|) (|Is$DCL| t |ALLOCATED'|) (|Is$VDCL| t VIRGIN))
	   (IMPLIES
	    (AND (EQ (|Is$TEXT| t |@DUMMY|) |@true|) (EQ (|Is$DCL| t |ALLOCATED'|) |@true|) (EQ (|Is$VDCL| t VIRGIN) |@true|))
	    (IMPLIES (NEQ t |$NIL|) (NEQ 0 (NUMBER t 0)))))
	 (FORALL
	     (wr1 wr2)
	   (NOPATS
	    (|Is$Wr.T| wr1 |@DUMMY|)
	    (|Is$DCL| wr1 |ALLOCATED'|)
	    (|Is$VDCL| wr1 VIRGIN)
	    (|Is$Wr.T| wr2 |@DUMMY|)
	    (|Is$DCL| wr2 |ALLOCATED'|)
	    (|Is$VDCL| wr2 VIRGIN))
	   (IMPLIES
	    (AND
	     (EQ (|Is$Wr.T| wr2 |@DUMMY|) |@true|)
	     (EQ (|Is$DCL| wr2 |ALLOCATED'|) |@true|)
	     (EQ (|Is$VDCL| wr2 VIRGIN) |@true|)
	     (EQ (|Is$Wr.T| wr1 |@DUMMY|) |@true|)
	     (EQ (|Is$DCL| wr1 |ALLOCATED'|) |@true|)
	     (EQ (|Is$VDCL| wr1 VIRGIN) |@true|))
	    (IMPLIES
	     (AND
	      (NEQ wr1 |$NIL|)
	      (NEQ wr2 |$NIL|)
	      (NEQ wr1 wr2)
	      (NEQ (select |Wr.T.buff| wr1 |@OBJECT|) |$NIL|)
	      (NEQ (select |Wr.T.buff| wr2 |@OBJECT|) |$NIL|))
	     (NEQ (select |Wr.T.buff| wr1 |@OBJECT|) (select |Wr.T.buff| wr2 |@OBJECT|)))))
	 (EQ (SUBSET ALLOCATED |ALLOCATED'|) |@true|)
	 TRUE
	 (EQ (|Is$NULL| |LL'| |@DUMMY|) |@true|))
	(AND
	 (LBL |ERROR.post.25.0.Normal return| (IMPLIES (EQ RETURN RETURN) (EQ |LL'| (INSERT LL wr))))
	 (LBL |ERROR.post.25.0.RAISES| (EQ RETURN RETURN))
	 (LBL |ERROR.mod.25.0.LL| TRUE)
	 (LBL
	     |ERROR.inv.25.0|
	   (AND
(OR TRUE
	    (FORALL
		(t)
	      (NOPATS (|Is$TEXT| t |@DUMMY|) (|Is$DCL| t |ALLOCATED'|) (|Is$VDCL| t VIRGIN))
	      (IMPLIES
	       (AND (EQ (|Is$TEXT| t |@DUMMY|) |@true|) (EQ (|Is$DCL| t |ALLOCATED'|) |@true|) (EQ (|Is$VDCL| t VIRGIN) |@true|))
	       (IMPLIES (NEQ t |$NIL|) (NEQ 0 (NUMBER t 0)))))
)
	    (FORALL
		(wr1 wr2)
	      (NOPATS
	       (|Is$Wr.T| wr1 |@DUMMY|)
	       (|Is$DCL| wr1 |ALLOCATED'|)
	       (|Is$VDCL| wr1 VIRGIN)
	       (|Is$Wr.T| wr2 |@DUMMY|)
	       (|Is$DCL| wr2 |ALLOCATED'|)
	       (|Is$VDCL| wr2 VIRGIN))
	      (IMPLIES
	       (AND
		(EQ (|Is$Wr.T| wr2 |@DUMMY|) |@true|)
		(EQ (|Is$DCL| wr2 |ALLOCATED'|) |@true|)
		(EQ (|Is$VDCL| wr2 VIRGIN) |@true|)
		(EQ (|Is$Wr.T| wr1 |@DUMMY|) |@true|)
		(EQ (|Is$DCL| wr1 |ALLOCATED'|) |@true|)
		(EQ (|Is$VDCL| wr1 VIRGIN) |@true|))
	       (IMPLIES
		(AND
		 (NEQ wr1 |$NIL|)
		 (NEQ wr2 |$NIL|)
		 (NEQ wr1 wr2)
		 (NEQ (select |Wr.T.buff| wr1 |@OBJECT|) |$NIL|)
		 (NEQ (select |Wr.T.buff| wr2 |@OBJECT|) |$NIL|))
		(NEQ (select |Wr.T.buff| wr1 |@OBJECT|) (select
	|Wr.T.buff| wr2 |@OBJECT|))))))))))))))
(BG_POP)
(BG_POP)



