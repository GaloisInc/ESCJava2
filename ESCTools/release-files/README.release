
--------------------  ESCJAVA2 ---------------------------------

These files constitute a release of ESC/Java2, an upgrade of the
original ESC/Java from DEC-SRC/Compaq/HP.  It consists of the
following files:

  README.release - this file
  README.txt - the original readme from DEC/SRC
  README.first - a longer description of the ESCjava2 project

  esctools2.jar - the Java classes constituting the ESC/Java2 tool
  escj - a script to run the ESC/Java2 tool
  escj.bat - a batch script to run the ESC/Java2 tool on the Windows 
    platform
  escjava2 - a sample wrapper script for escj
  jmlspecs.jar - JML specification files used with the ESC/Java2 tool
  Simplify* - various builds of the Simplify theorem prover
  RELEASE_NOTES.txt - descriptions of changes and previous versions
  quicktest - a short test that an installation was successful
  specs - a directory containing the original DEC/SRC ESC/Java 
    specification files for a few core Java classes
  Escjava2-ImplementationNotes.pdf - notes about the implementation
    of ESC/Java2.
  ESCJAVA-UsersManual.html - the User's Guide for the original
    DEC/SRC ESC/Java tool.  Nearly all of the documentation included
    in this User's Guide is still valid for ESC/Java2.  All backwards
    incompatibilities are documented in the aforementioned
    implementation notes.  We plan on providing a new ESC/Java2 User's
    Guide in a future ESC/Java2 release.

-----------------------INSTALLATION ----------------------------

The installation package consists of a compressed tar file.

The installation procedure consists of these steps:

a) untar the tar file in a directory of your choice.

b) Set the environment variable ESCTOOLS_RELEASE to the absolute path
of the directory in which you placed the release files. [If this is
not set, the executables will attempt to guess an appropriate value.]

c) Set the SIMPLIFY environment variable to the name of one of the
Simplify executables contained in $ESCTOOLS_RELEASE, depending on the
operating system you are using. [If SIMPLIFY is not set, the sample
escjava2 executable will attempt to guess an appropriate value for
some platforms.]

d) The program requires some specification files for the Java system
classes.  A basic set is provided with the release as the jmlspecs.jar
file (these are a snapshot of those suppled by the JML project); they
are used unless the user provides an alternate set.  An alternate set
can be specified as a classpath in the ESC_SPECS environment variable.
For example, if you wished to use the specs in the JML directory
structure as found in CVS, and you were using csh or tcsh, you might
write:

  setenv ESC_SPECS /home/cok/JML/JML2:/home/cok/JML/JML2/specs

to include both the specs and the model files on which the specs
depend.  You can also use the -specs command-line option in a similar
fashion.

e) Execute the program $ESCTOOLS_RELEASE/escj - this is the new
escjava2 program.

f) If you wish, run $ESCTOOLS_RELEASE/quicktest to execute a quick
smoke test of the release.

---------------------- RUNNING THE TOOL ------------------------

The escjava2 tool is run by executing the tcsh script
$ESCTOOLS_RELEASE/escj or the batch script $ESCTOOLS_RELEASE/escj.bat
(on Windows only).  Typically a user will use a wrapper script that
sets ESCTOOLS_RELEASE and SIMPLIFY and then invokes escj.  We have
provided such a wrapper script in this release and it is called
"escjava2".

The command-line arguments are an optional set of options (beginning
with a single hyphen) and then a list of file names.  The options must
precede the file names.  The file name must be specified using either
absolute paths or relative paths that are relative to the current
working directory.  Classes referenced by the given files are found
using the current setting of the classpath (either the value of the
option -sourcepath or the value of the option -classpath or the value
of the environment variable CLASSPATH).

There are many options available, most of them experimental and not
documented.  The "official" options are listed using "escj -help".
