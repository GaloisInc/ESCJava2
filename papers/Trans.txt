1) ASSUME (\forall anytype brokenObj,  c,  s; boolAnd(boolOr(select(b:5.10, brokenObj), 
          boolEq(Trans.p.7.2(state, brokenObj, c, s), integralEQ(select(z:3.15, c), 1))), 
          is(Trans.p.7.2(state, brokenObj, c, s), \type(boolean))));
2) ASSUME (\lblneg Pre:0.13.6 Trans.p.7.2(state, this, c:16.18, "A"));

3) ASSUME (\forall anytype brokenObj<34>,  c<1>,  s<1>; boolAnd(boolOr(select(b:5.10, brokenObj<34>), 
          boolEq(Trans.p.7.2(state, brokenObj<34>, c<1>, s<1>), integralEQ(select(z:3.15, c<1>), 1))), 
          is(Trans.p.7.2(state, brokenObj<34>, c<1>, s<1>), \type(boolean))));
4) ASSERT (\lblneg Assert@17.8 Trans.p.7.2(state, this, c:16.18, "B"));

5) ASSUME anyEQ(RES-18.8:18.8, Trans.p.7.2(state, this, c:16.18, "Q"));
6) ASSUME boolImplies(anyEQ(EC-18.8:18.8, ecReturn), boolOr(select(b:5.10, this), 
          boolEq(RES-18.8:18.8, integralEQ(select(z:3.15, c:16.18), 1))));
7) ASSUME anyEQ(b:18.4, store(b:5.10, this, RES-18.8:18.8));

8) ASSUME (\forall anytype brokenObj<35>,  c<2>,  s<2>; boolAnd(boolOr(select(b:18.4, brokenObj<35>), 
          boolEq(Trans.p.7.2(state:18.6, brokenObj<35>, c<2>, s<2>), integralEQ(select(z:3.15, c<2>), 1))), 
          is(Trans.p.7.2(state:18.6, brokenObj<35>, c<2>, s<2>), \type(boolean))));
9) ASSERT (\lblneg Assert@19.8 boolAnd(Trans.p.7.2(state:18.6, this, c:16.18, "C"), 
            Trans.p.7.2(state:18.6, this, c:16.18, "D")));

10) ASSUME (\forall anytype brokenObj<36>,  c<3>,  s<3>; boolAnd(boolOr(select(b:18.4, brokenObj<36>), 
           boolEq(Trans.p.7.2(state-20.8:20.8, brokenObj<36>, c<3>, s<3>), integralEQ(select(z:3.15, c<3>), 1))), 
           is(Trans.p.7.2(state-20.8:20.8, brokenObj<36>, c<3>, s<3>), \type(boolean))));
11) ASSERT (\lblneg Assert@21.8 Trans.p.7.2(state-20.8:20.8, this, RES:20.8, "E"))

12) ASSUME (\forall anytype brokenObj<37>,  c<4>,  s<4>; boolAnd(boolOr(select(b:18.4, brokenObj<37>), 
           boolEq(Trans.p.7.2(state-20.8:20.8, brokenObj<37>, c<4>, s<4>), integralEQ(select(z:3.15, c<4>), 1))), 
           is(Trans.p.7.2(state-20.8:20.8, brokenObj<37>, c<4>, s<4>), \type(boolean))));
13) ASSERT (\lblneg Post:15.6@22.2 boolImplies(
           boolAnd(anyEQ(ecReturn, ecReturn), Trans.p.7.2(state@pre, this, c:16.18, "A")), 
           Trans.p.7.2(state-20.8:20.8, this, c:16.18, "Z")))
