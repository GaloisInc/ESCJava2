// static methods without bodies

public class B {

  /*@ requires i >= 0;
    @ ensures \result == (i/i)*2; // divZero warning
    @*/
  public static int test0(int i);

  /*@ normal_behavior
    @  requires i > 0;
    @  ensures \result == (i/i)*2; // no divZero warning because of precondition
    @*/
  public static int test1(int i);

  /*@ exceptional_behavior
    @  requires i<0;
    @  signals (RuntimeException e) i<0;
    @*/
  public static int test2(int i) throws RuntimeException;

  /*@ exceptional_behavior
    @  requires i<0;
    @  signals (RuntimeException e) i/i == i/i; // no divZero warning because of precondition
    @*/
  public static int test3(int i) throws RuntimeException;

  /*@ exceptional_behavior
    @  requires i <= 0;
    @  signals (RuntimeException e) i/i == i/i; // divZero warning
    @*/
  public static int test4(int i) throws RuntimeException;

  /*@ normal_behavior
    @  requires i>=0;
    @  ensures \result == (i/i)*2; // divZero warning
    @ also exceptional_behavior
    @  requires i<0;
    @  signals (RuntimeException e) i/i == i/i; // no divZero because of precondition
    @*/
  public static int test5(int i) throws RuntimeException;

  /*@ normal_behavior
    @  requires i>0;
    @  ensures \result == (i/i)*2; // no divZero warning because of precondition
    @ also exceptional_behavior
    @  requires i<=0;
    @  signals (RuntimeException e) i/i == i/i; // divZero warnings
    @*/
  public static int test6(int i) throws RuntimeException;

  /*@ requires i/i==i/i; // divZero warning 
    @*/
  public static int test7(int i);

}